var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(['\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1rem;\n  > *:first-child {\n    margin-right: 0.5rem;\n  }\n'], ['\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1rem;\n  > *:first-child {\n    margin-right: 0.5rem;\n  }\n']);

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';

import { Button } from 'components';
import { Modal } from 'containers';

var Options = styled.div(_templateObject);

var ConfirmModal = function ConfirmModal(_ref) {
  var children = _ref.children,
      onConfirm = _ref.onConfirm,
      onClose = _ref.onClose,
      confirmLabel = _ref.confirmLabel,
      cancelLabel = _ref.cancelLabel,
      confirmProps = _ref.confirmProps,
      cancelProps = _ref.cancelProps,
      props = _objectWithoutProperties(_ref, ['children', 'onConfirm', 'onClose', 'confirmLabel', 'cancelLabel', 'confirmProps', 'cancelProps']);

  return React.createElement(
    Modal,
    props,
    children || 'Do you want to proceed?',
    React.createElement(
      Options,
      null,
      React.createElement(
        Button,
        _extends({ onClick: onConfirm }, confirmProps),
        confirmLabel
      ),
      React.createElement(
        Button,
        _extends({ onClick: onClose, transparent: true }, cancelProps),
        cancelLabel
      )
    )
  );
};

ConfirmModal.propTypes = {
  children: PropTypes.node,
  name: PropTypes.string.isRequired,
  onConfirm: PropTypes.func.isRequired,
  onClose: PropTypes.func.isRequired,
  confirmLabel: PropTypes.string,
  cancelLabel: PropTypes.string,
  confirmProps: PropTypes.object,
  cancelProps: PropTypes.object
};

ConfirmModal.defaultProps = {
  confirmLabel: 'Confirm',
  cancelLabel: 'Cancel',
  confirmProps: {},
  cancelProps: {}
};

var _default = ConfirmModal;
export default _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(Options, 'Options', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/organisms/ConfirmModal/index.js');

  __REACT_HOT_LOADER__.register(ConfirmModal, 'ConfirmModal', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/organisms/ConfirmModal/index.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/organisms/ConfirmModal/index.js');
}();

;