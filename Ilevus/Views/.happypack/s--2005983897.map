{"version":3,"sources":["legacy\\jsx\\core\\view\\user\\Login.jsx"],"names":["React","require","Link","UserSession","LoadingGauge","ErrorAlert","Modal","Messages","AppLogo","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","loaded","get","onSubmit","evt","preventDefault","data","email","refs","value","password","stayconnected","checked","dispatch","action","ACTION_LOGIN","componentDidMount","me","context","push","on","props","params","accessToken","state","ACTION_AUTH_CALLBACK","setState","componentWillUnmount","off","loginWithFacebook","FB","login","response","status","ACTION_LOGIN_FACEBOOK","authResponse","console","warn","scope","loginWithLinkedin","IN","User","authorize","arg","render"],"mappings":"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","file":"Login.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\nvar ErrorAlert = require(\"ilevus/jsx/core/widget/ErrorAlert.jsx\");\r\nvar Modal = require(\"ilevus/jsx/core/widget/Modal.jsx\");\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nvar AppLogo = require(\"ilevus/img/logo.png\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n\t\treturn {\r\n\t\t\tloaded: !UserSession.get(\"loading\")\r\n\t\t};\r\n\t},\r\n\tonSubmit(evt) {\r\n\t    evt.preventDefault();\r\n\t    var data = {\r\n\t        email: this.refs['email'].value,\r\n\t        password: this.refs['password'].value,\r\n\t        stayconnected: this.refs['stayconnected'].checked\r\n\t    };\r\n\t\tUserSession.dispatch({\r\n\t\t\taction: UserSession.ACTION_LOGIN,\r\n\t\t\tdata: data\r\n\t\t});\r\n\t},\r\n\tcomponentDidMount() {\r\n\t\tvar me = this;\r\n\r\n\t\tif (!!UserSession.get(\"logged\")) {\r\n\t\t    me.context.router.push(\"/home\");\r\n\t\t} else {\r\n\t\t    UserSession.on(\"login\", model => {\r\n\t\t        me.context.router.push(\"/home\");\r\n\t\t    }, me);\r\n\r\n\t\t    if (me.props.params && me.props.params.accessToken) {\r\n\t\t        if (me.state.loaded) {\r\n\t\t            UserSession.dispatch({\r\n\t\t                action: UserSession.ACTION_AUTH_CALLBACK,\r\n\t\t                data: me.props.params.accessToken\r\n\t\t            });\r\n\t\t        } else {\r\n\t\t            UserSession.on(\"loaded\", () => {\r\n\t\t                UserSession.dispatch({\r\n\t\t                    action: UserSession.ACTION_AUTH_CALLBACK,\r\n\t\t                    data: me.props.params.accessToken\r\n\t\t                });\r\n\t\t            }, me);\r\n\t\t        }\r\n\t\t    } else {\r\n\t\t        UserSession.on(\"loaded\", () => {\r\n\t\t            me.setState({ loaded: true });\r\n\t\t        }, me);\r\n\t\t    }\r\n\t\t}\r\n\t},\r\n\tcomponentWillUnmount() {\r\n\t\tUserSession.off(null, null, this);\r\n\t},\r\n\r\n\tloginWithFacebook() {\r\n\t    if (typeof FB != 'undefined') {\r\n\t        var me = this;\r\n\t        FB.login((response) => {\r\n\t            if (response.status === 'connected') {\r\n\t                UserSession.dispatch({\r\n\t                    action: UserSession.ACTION_LOGIN_FACEBOOK,\r\n\t                    data: response.authResponse.accessToken\r\n\t                });\r\n\t            } else {\r\n\t                console.warn(\"Facebook not authorized:\\n\",response);\r\n\t            }\r\n\t        },{\r\n\t            scope: 'public_profile,email'\r\n\t        });\r\n\t    }\r\n\t},\r\n\r\n\tloginWithLinkedin() {\r\n\t    IN.User.authorize((arg) => {});\r\n\t},\r\n\r\n\trender() {\r\n\t\tif (!this.state.loaded) {\r\n\t\t\treturn <LoadingGauge />;\r\n\t\t}\r\n\t    return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-10 offset-sm-1 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3\">\r\n                        <div className=\"ilv-card mt-3\">\r\n                            <div className=\"ilv-card-header\">\r\n                                <h3>{Messages.get(\"TextSignIn\")}</h3>\r\n                            </div>\r\n                            <div className=\"ilv-card-body\">\r\n                                <fieldset className=\"ilv-form-group\">\r\n                                    <a className=\"ilv-btn ilv-btn-lg ilv-btn-block ilv-btn-linkedin\" href=\"/api/User/LoginWithLinkedin\">\r\n                                        {Messages.get(\"LabelLoginWithLinkedin\")}\r\n                                    </a>\r\n                                </fieldset>\r\n                                <fieldset className=\"ilv-form-group\">\r\n                                    <button className=\"ilv-btn ilv-btn-lg ilv-btn-block ilv-btn-facebook\" onClick={this.loginWithFacebook}>\r\n                                        {Messages.get(\"LabelLoginWithFacebook\")}\r\n                                    </button>\r\n                                </fieldset>\r\n                                <hr/>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <fieldset className=\"ilv-form-group\">\r\n                                        <label className=\"ilv-form-label\" htmlFor=\"email\">{Messages.get(\"LabelEmail\")}</label>\r\n                                        <input className=\"ilv-form-control ilv-form-control-lg\" id=\"email\" name=\"email\" type=\"email\" ref=\"email\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"ilv-form-group\">\r\n                                        <label className=\"ilv-form-label\" htmlFor=\"password\">{Messages.get(\"LabelPassword\")}</label>\r\n                                        <input className=\"ilv-form-control ilv-form-control-lg\" id=\"password\" name=\"password\" type=\"password\" ref=\"password\" />\r\n                                    </fieldset>\r\n\r\n                                    <ErrorAlert store={UserSession} />\r\n\r\n                                    <fieldset className=\"ilv-form-group\">\r\n                                        <div className=\"ilv-checkbox\">\r\n                                            <label htmlFor=\"stay-connected\">\r\n                                                <input className=\"ilv-control-input\" type=\"checkbox\" id=\"stay-connected\" ref=\"stayconnected\" />\r\n                                                <span className=\"ilv-control-indicator\"></span>\r\n                                                <span className=\"ilv-control-label\">{Messages.get(\"LabelStayConnected\")}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </fieldset>\r\n                                    <fieldset>\r\n                                        <input type=\"submit\" value={Messages.get(\"LabelSignIn\")} className=\"ilv-btn ilv-btn-lg ilv-btn-primary ilv-btn-block\" />\r\n                                    </fieldset>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"ilv-text-xs-center my-3\">\r\n                            <ul className=\"ilv-nav ilv-nav-inline ilv-font-weight-semibold mb-1\">\r\n                                <li className=\"ilv-nav-item\">\r\n                                    <Link className=\"ilv-nav-link\" to=\"/signup\">{Messages.get(\"TextSignUp\")}</Link>\r\n                                </li>\r\n                                <li className=\"ilv-nav-item\"> · </li>\r\n                                <li className=\"ilv-nav-item\">\r\n                                    <Link className=\"ilv-nav-link\" to=\"/recover-password\">{Messages.get(\"TextRecoverPassword\")}</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\t}\r\n});\r\n"]}