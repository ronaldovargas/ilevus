var React = require("react");
var Link = require("react-router").Link;
var Toastr = require("toastr");

var SitemapLogStore = require("ilevus/jsx/core/store/SitemapLog.jsx");
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");
var moment = require('moment');
var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object
    },
    getInitialState: function getInitialState() {
        return {
            loading: true,
            data: []
        };
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        SitemapLogStore.on("sitemaplogget", function (data) {
            me.setState({
                loading: false,
                data: data.Result
            });
        }, me);
        SitemapLogStore.on("sitemapdelete", function (qtde) {
            Toastr.remove();
            Toastr.success(Messages.get("TextSitemapDeleteOK"));

            SitemapLogStore.dispatch({
                action: SitemapLogStore.ACTION_SITEMAP_GET
            });
        }, me);
        SitemapLogStore.on("sitemapgenerateget", function (res) {
            Toastr.remove();
            Toastr.success(Messages.get("TextSitemapGereratedOK"));

            SitemapLogStore.dispatch({
                action: SitemapLogStore.ACTION_SITEMAP_GET
            });
        }, me);

        SitemapLogStore.dispatch({
            action: SitemapLogStore.ACTION_SITEMAP_GET
        });
    },
    componentWillUnmount: function componentWillUnmount() {
        SitemapLogStore.off(null, null, this);
    },
    deleteAll: function deleteAll() {
        SitemapLogStore.dispatch({
            action: SitemapLogStore.ACTION_SITEMAP_DEL
        });
    },
    generateNow: function generateNow() {
        SitemapLogStore.dispatch({
            action: SitemapLogStore.ACTION_SITEMAP_GENERATE
        });
    },
    renderLog: function renderLog() {
        var items;
        if (!this.state.data || this.state.data.length == 0) {
            return React.createElement(
                "div",
                { className: "ilv-notification ilv-notification-unread" },
                Messages.get("LabelNenhumLogSitemap")
            );
        }

        items = this.state.data.map(function (contact, idx) {
            return React.createElement(
                "div",
                null,
                Messages.get("LabelDataGeracao"),
                ": ",
                moment(contact.DataGeracao).format('DD/MM/YYYY hh:mm'),
                React.createElement("br", null),
                Messages.get("LabelUsuariosVerificados"),
                ": ",
                contact.UsuariosVerificados,
                React.createElement("br", null),
                Messages.get("LabelUsuariosAdicionados"),
                ": ",
                contact.UsuariosIncluidosArquivos,
                React.createElement("hr", null)
            );
        });
        return React.createElement(
            "div",
            null,
            items
        );
    },
    render: function render() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "div",
                null,
                React.createElement(
                    "a",
                    { style: { cursor: "pointer" }, onClick: this.generateNow },
                    Messages.get("LabelGerarAgora")
                )
            ),
            React.createElement(
                "div",
                null,
                React.createElement(
                    "a",
                    { style: { cursor: "pointer" }, onClick: this.deleteAll },
                    Messages.get("LabelExcluirTodos")
                )
            ),
            React.createElement("br", null),
            this.renderLog()
        );
    }
    //if (this.state.loading) {
    //    return <LoadingGauge />;
    //}       

    //    return (<div>
    //                <div><a style={{cursor: "pointer" }} onClick={this.generateNow}>{Messages.get("LabelGerarAgora")}</a></div>
    //                <div><a style={{cursor: "pointer" }} onClick={this.deleteAll}>{Messages.get("LabelExcluirTodos")}</a></div>
    //                <br>
    //                {this.renderLog()}
    //            </div>);
    //}

});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/admin/AdminPanelSitemap.jsx");
}();

;