{"version":3,"sources":["legacy\\jsx\\core\\view\\user\\wizard\\ProfileWizardBasic.jsx"],"names":["S","require","React","Link","Toastr","MaskedInput","LanguageSelect","UserSession","LoadingGauge","Messages","module","exports","createClass","contextTypes","router","PropTypes","object","professionalData","isRequired","userId","string","state","TaxDocument","AreaCode","Number","getInitialState","map","LanguagesMap","lang","langs","context","SpokenLanguages","langsMap","code","i","length","languages","languagesMap","componentDidMount","me","on","data","success","get","push","console","log","updatePhoneInput","componentWillUnmount","off","saveInfo","event","phoneNumberValidation","error","preventDefault","$","refs","attr","Industry","value","Headline","Specialties","Summary","BirthDate","Phone","trim","val","dispatch","action","ACTION_UPDATE_PROFESSIONAL_BASIC","addLanguage","getValue","reset","setState","getLanguagesMap","removeLanguage","index","splice","aux","name","filterLanguages","phoneFilterRe","intlTelInput","addClass","removeClass","phoneNumberFilter","opts","key","match","_onChange","e","stateChange","target","render","backgroundColor","nativeName","bind"],"mappings":"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","file":"ProfileWizardBasic.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar S = require(\"string\");\r\nrequire(\"ilevus/jsx/vendor/intlTelInput.js\");\r\n\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\nvar MaskedInput = require('react-maskedinput')\r\n\r\nvar LanguageSelect = require(\"ilevus/jsx/core/widget/LanguageSelect.jsx\");\r\n\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object,\r\n        professionalData: React.PropTypes.object.isRequired,\r\n        userId: React.PropTypes.string.isRequired\r\n    },\r\n    state: {\r\n        TaxDocument: '',\r\n        AreaCode: '',\r\n        Number: ''\r\n    },\r\n    getInitialState() {\r\n        var map = LanguageSelect.LanguagesMap, lang,\r\n            langs = this.context.professionalData.SpokenLanguages || [],\r\n            langsMap = {}, code;\r\n        for (var i = 0; i < langs.length; i++) {\r\n            code = langs[i];\r\n            lang = map[code];\r\n            if (lang)\r\n                lang.code = code;\r\n            langs[i] = lang || code;\r\n            langsMap[code] = lang || code;\r\n        }\r\n        return {\r\n            languages: langs,\r\n            languagesMap: langsMap\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        UserSession.on(\"professionalprofile\", (data) => {\r\n            Toastr.success(Messages.get(\"TextDataSavedSuccessfully\"));\r\n            me.context.router.push(\"/become-a-professional\");\r\n        }, me);\r\n        console.log(this.context);\r\n        this.updatePhoneInput();\r\n    },\r\n    componentWillUnmount() {\r\n        UserSession.off(null, null, this);\r\n    },\r\n\r\n    saveInfo(event) {\r\n        if (!this.phoneNumberValidation()) {\r\n            Toastr.error(Messages.get(\"ValidationPhoneNumberInvalid\"));\r\n            return;\r\n        }\r\n        event.preventDefault();\r\n        $(this.refs['btn-submit']).attr(\"disabled\", true);\r\n        var langs = [];\r\n        for (var i = 0; i < this.state.languages.length; i++) {\r\n            langs.push(this.state.languages[i].code);\r\n        }\r\n        var data = {\r\n            Industry: this.refs['field-industry'].value,\r\n            Headline: this.refs['field-headline'].value,\r\n            Specialties: this.refs['field-specialties'].value,\r\n            Summary: this.refs['field-summary'].value,\r\n            BirthDate: $('input[name*=BirthDate')[0].value,\r\n            TaxDocument: $('input[name*=TaxDocument')[0].value,\r\n            Phone: $.trim($(\"#editProfileFormPhone\").val()),\r\n            SpokenLanguages: langs\r\n        };\r\n        console.log(\"Form submit:\\n\",data);\r\n        UserSession.dispatch({\r\n            action: UserSession.ACTION_UPDATE_PROFESSIONAL_BASIC,\r\n            data: data\r\n        });\r\n    },\r\n    addLanguage(event) {\r\n        event.preventDefault();\r\n        var lang = this.refs['field-lang'].getValue();\r\n        if (lang) {\r\n            this.state.languages.push(lang);\r\n            this.refs['field-lang'].reset();\r\n            this.setState({\r\n                languagesMap: this.getLanguagesMap()\r\n            });\r\n        }\r\n    },\r\n    removeLanguage(index) {\r\n        this.state.languages.splice(index, 1);\r\n        this.setState({\r\n            languagesMap: this.getLanguagesMap()\r\n        });\r\n    },\r\n    getLanguagesMap() {\r\n        var data = {}, aux;\r\n        for (var i = 0; i < this.state.languages.length; i++) {\r\n            aux = this.state.languages[i];\r\n            data[aux.code] = aux.name;\r\n        }\r\n        return data;\r\n    },\r\n    filterLanguages(lang) {\r\n        if (this.state.languagesMap[lang.code])\r\n            return false;\r\n        return true;\r\n    },\r\n    phoneFilterRe: /[0-9\\-\\+ ]/,\r\n    updatePhoneInput() {\r\n        $(\"#editProfileFormPhone\").intlTelInput();\r\n    },\r\n    phoneNumberValidation() {\r\n        if (!$(\"#editProfileFormPhone\").intlTelInput(\"isValidNumber\")) {\r\n            $(\"#editProfileFormPhone\").addClass(\"ilv-invalid\");\r\n            return false;\r\n        } else {\r\n            $(\"#editProfileFormPhone\").removeClass(\"ilv-invalid\");\r\n            return true;\r\n        }\r\n    },\r\n    phoneNumberFilter(event, opts) {\r\n        if (event.key && event.key.match && !event.key.match(this.phoneFilterRe))\r\n            event.preventDefault();\r\n    },\r\n     _onChange(e) {\r\n        var stateChange = {}\r\n        stateChange[e.target.name] = e.target.value\r\n        this.setState(stateChange)\r\n    },\r\n    render() {\r\n        var langs = this.state.languages;\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n              <div className=\"col-6\">\r\n                 \r\n                <form onSubmit={this.saveInfo}>\r\n                    <div className=\"text-center my-5\">\r\n                        <h3>{Messages.get(\"TextWizardHeaderBasic\")}</h3>\r\n                    </div>\r\n                    <div className=\"ilv-card\">\r\n                      <div className=\"ilv-card-body\">\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                                        <label className=\"ilv-form-label\">{Messages.get(\"LabelTaxDocument\")}</label>\r\n                             <MaskedInput mask=\"111.111.111-11\"\r\n                                            name=\"TaxDocument\"\r\n                                            ref=\"field-TaxDocument\"\r\n                                            className=\"ilv-form-control ilv-form-control-lg\"\r\n                                            value={this.context.professionalData.TaxDocument}\r\n                                            spellCheck={false}\r\n                                            onChange={this._onChange} />\r\n\r\n                          </fieldset>\r\n\r\n                        <fieldset className=\"ilv-form-group\">\r\n                                 <div className=\"ilv-form-group m-b-0\">\r\n\r\n                                 <label className=\"ilv-form-label\" htmlFor=\"editProfileFormPhone\">\r\n                                 {Messages.get(\"LabelPhoneNumber\")}\r\n                             </label>\r\n                             <input onKeyPress={this.phoneNumberFilter} onKeyUp={this.phoneNumberValidation}\r\n                                     type=\"tel\"\r\n                                     spellCheck={false}\r\n                                     id=\"editProfileFormPhone\"\r\n                                     ref=\"profile-phonenumber\"\r\n                                     defaultValue={this.context.professionalData.Phone} />\r\n                             <span className=\"ilv-text-small\">\r\n                                 {Messages.get(\"TextPhoneHelp\")}\r\n                             </span>\r\n\r\n\r\n\r\n                                </div>\r\n                        </fieldset>\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                                        <label className=\"ilv-form-label\">{Messages.get(\"LabelBirthDate\")}</label>\r\n                             <MaskedInput mask=\"11/11/1111\"\r\n                                            name=\"BirthDate\"\r\n                                            ref=\"field-BirthDate\"\r\n                                            className=\"ilv-form-control ilv-form-control-lg\"\r\n                                            value={this.context.professionalData.BirthDate}\r\n                                            spellCheck={false} />\r\n\r\n                          </fieldset>\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelIndustry\")}</label>\r\n                            <input className=\"ilv-form-control ilv-form-control-lg\"\r\n                                   ref=\"field-industry\"\r\n                                   defaultValue={this.context.professionalData.Industry}\r\n                                   spellCheck={false}\r\n                                   type=\"text\" />\r\n                          </fieldset>\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelHeadline\")}</label>\r\n                            <input className=\"ilv-form-control ilv-form-control-lg\"\r\n                                   ref=\"field-headline\"\r\n                                   defaultValue={this.context.professionalData.Headline}\r\n                                   spellCheck={false}\r\n                                   type=\"text\" />\r\n                          </fieldset>\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelSpecialties\")}</label>\r\n                            <input className=\"ilv-form-control ilv-form-control-lg\"\r\n                                   ref=\"field-specialties\"\r\n                                   defaultValue={this.context.professionalData.Specialties}\r\n                                   spellCheck={false}\r\n                                   type=\"text\" />\r\n                          </fieldset>\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelSummary\")}</label>\r\n                            <textarea rows=\"6\"\r\n                                      className=\"ilv-form-control ilv-form-control-lg\"\r\n                                      ref=\"field-summary\"\r\n                                      defaultValue={this.context.professionalData.Summary} />\r\n                          </fieldset>\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelLanguages\")}</label>\r\n                            <div className=\"ilv-input-group\">\r\n                                <LanguageSelect className=\"ilv-form-control ilv-form-control-lg\"\r\n                                                ref=\"field-lang\"\r\n                                                filter={this.filterLanguages}\r\n                                                spellCheck={false} />\r\n                                <div className=\"ilv-input-group-btn\">\r\n                                    <button className=\"ilv-btn ilv-btn-lg ilv-btn-icon ilv-btn-success\" onClick={this.addLanguage}>\r\n                                        <i className=\"ilv-icon material-icons md-24\">&#xE145;</i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                          </fieldset>\r\n\r\n                          <fieldset className=\"ilv-form-group\">\r\n                            <div className=\"ilv-tag-input mb-2 ilv-text-xs-center\" style={{backgroundColor: '#f5f7f9'}} readonly={true}>\r\n                                {langs.map((lang, index) => {\r\n                                    return <span className=\"ilv-tag\" key={\"lang-\" + index }>\r\n                                        {lang.nativeName ? lang.nativeName : lang} <a title={Messages.get(\"ActionRemoveLanguage\")}\r\n                                                                                      onClick={this.removeLanguage.bind(this, index)}>&times;</a>\r\n                                    </span>;\r\n                                })}\r\n                            </div>\r\n                          </fieldset>\r\n                      </div>\r\n\r\n                      <div className=\"ilv-card-footer ilv-text-xs-right\">\r\n                        <Link className=\"ilv-btn ilv-btn-clean\" to=\"/become-a-professional\">\r\n                          {Messages.get(\"LabelBack\")}\r\n                          </Link>\r\n                        <input className=\"ilv-btn ilv-btn-primary\"\r\n                               type=\"submit\"\r\n                               ref=\"btn-submit\"\r\n                               value={Messages.get(\"LabelSave\")} />\r\n                      </div>\r\n\r\n                    </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n});"]}