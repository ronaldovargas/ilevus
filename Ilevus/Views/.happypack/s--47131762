
var _ = require("underscore");
var S = require("string");
var marked = require("marked");
var moment = require("moment");
var numeral = require("numeral");
var React = require('react');

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

module.exports = React.createClass({
    displayName: "exports",

    propTypes: {
        sessions: React.PropTypes.array.isRequired,
        current: React.PropTypes.number.isRequired,
        onChange: React.PropTypes.func.isRequired
    },
    getDefaultProps: function getDefaultProps() {
        return {
            sessions: [],
            onChange: _.noop
        };
    },
    getInitialState: function getInitialState() {
        return {};
    },
    selectSession: function selectSession(index, event) {
        event && event.preventDefault();
        this.props.onChange(index);
    },
    renderTable: function renderTable() {
        var history = [];
        if (this.props.current != this.props.sessions.length - 1) {
            history.push(React.createElement(
                "tr",
                { key: "session-" + i },
                React.createElement(
                    "td",
                    null,
                    React.createElement(
                        "div",
                        { className: "font-weight-bold" },
                        Messages.get('LabelCurrentSession')
                    )
                ),
                React.createElement(
                    "td",
                    { className: "text-right" },
                    React.createElement(
                        "a",
                        { className: "ilv-btn ilv-btn-sm ilv-btn-clean px-0", href: "#", onClick: this.selectSession.bind(this, this.props.sessions.length - 1) },
                        React.createElement(
                            "i",
                            { className: "ilv-icon material-icons md-24" },
                            "\uE5CC"
                        )
                    )
                )
            ));
        }
        for (var i = this.props.sessions.length - 2; i >= 0; i--) {
            var duration = moment.duration(moment(this.props.sessions[i].Finished).diff(moment(this.props.sessions[i].Started), "seconds"), "seconds"),
                durationString = numeral(duration.hours()).format("00") + ":" + numeral(duration.minutes()).format("00") + ":" + numeral(duration.seconds()).format("00");
            history.push(React.createElement(
                "tr",
                { key: "session-" + i },
                React.createElement(
                    "td",
                    null,
                    React.createElement(
                        "div",
                        { className: "font-weight-bold" },
                        Messages.get('LabelSession'),
                        " ",
                        i + 1
                    ),
                    React.createElement(
                        "small",
                        null,
                        Messages.get('LabelDuration'),
                        ": ",
                        durationString
                    )
                ),
                React.createElement(
                    "td",
                    { className: "text-right" },
                    React.createElement(
                        "a",
                        { className: "ilv-btn ilv-btn-sm ilv-btn-clean px-0", href: "#", onClick: this.selectSession.bind(this, i) },
                        React.createElement(
                            "i",
                            { className: "ilv-icon material-icons md-24" },
                            "\uE5CC"
                        )
                    )
                )
            ));
        }
        return React.createElement(
            "table",
            { className: "ilv-table mb-0" },
            React.createElement(
                "thead",
                null,
                React.createElement(
                    "tr",
                    { style: { backgroundColor: '#f5f7f9' } },
                    React.createElement(
                        "th",
                        { className: "text-center", colSpan: "2" },
                        React.createElement(
                            "small",
                            { className: "font-weight-bold" },
                            Messages.get("TextSessionHistory")
                        )
                    )
                )
            ),
            React.createElement(
                "tbody",
                null,
                history
            )
        );
    },
    render: function render() {
        if (!this.props.sessions || this.props.sessions.length <= 1) return React.createElement("div", null);
        return React.createElement(
            "div",
            { className: "ilv-card mb-5" },
            React.createElement(
                "div",
                { className: "ilv-card-block" },
                this.renderTable()
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }
}();

;