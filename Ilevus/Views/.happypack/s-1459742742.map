{"version":3,"sources":["legacy\\jsx\\core\\view\\Search.jsx"],"names":["_","require","$","S","React","Link","Toastr","UserSession","UserStore","AdSideBar","AdRowBar","LoadingGauge","Modal","UserContactInfo","Analytics","Messages","UserIcon","module","exports","createClass","getInitialState","models","term","total","componentDidMount","me","on","msg","error","response","setState","data","props","params","dispatch","action","ACTION_SEARCH","keywords","componentWillUnmount","off","componentWillReceiveProps","newProps","componentDidUpdate","openPhoneDialog","user","event","preventDefault","sendPhoneRequestEvent","detailsModal","get","renderModels","state","length","map","model","index","industry","Professional","Industry","headline","Headline","identificador","NomeURL","Id","borderBottom","marginRight","backgroundImage","Image","isEmpty","marginBottom","Name","Surname","Premium","Active","s","format","PhoneNumber","bind","render"],"mappings":"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","file":"Search.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar _ = require(\"underscore\");\r\nvar $ = require(\"jquery\");\r\nvar S = require(\"string\");\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\nvar UserStore = require(\"ilevus/jsx/core/store/User.jsx\");\r\n\r\nvar AdSideBar = require(\"ilevus/jsx/core/widget/AdSideBar.jsx\");\r\nvar AdRowBar = require(\"ilevus/jsx/core/widget/AdRowBar.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\nvar Modal = require(\"ilevus/jsx/core/widget/Modal.jsx\");\r\nvar UserContactInfo = require(\"ilevus/jsx/core/widget/user/UserContactInfo.jsx\");\r\n\r\nvar Analytics = require(\"ilevus/jsx/core/util/Analytics.js\");\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nvar UserIcon = require(\"ilevus/img/user.png\");\r\n\r\nmodule.exports = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            models: null,\r\n            term: null,\r\n            total: 0\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        UserStore.on(\"fail\", (msg) => {\r\n            Toastr.error(msg);\r\n        }, me);\r\n        UserStore.on(\"search\", (response) => {\r\n            me.setState({\r\n                models: response.data,\r\n                term: me.props.params.term,\r\n                total: response.total\r\n            });\r\n        }, me);\r\n\r\n        UserStore.dispatch({\r\n            action: UserStore.ACTION_SEARCH,\r\n            data: {\r\n                keywords: me.props.params.term\r\n            }\r\n        });\r\n    },\r\n    componentWillUnmount() {\r\n        UserStore.off(null, null, this);\r\n    },\r\n    componentWillReceiveProps(newProps) {\r\n        UserStore.dispatch({\r\n            action: UserStore.ACTION_SEARCH,\r\n            data: {\r\n                keywords: newProps.params.term\r\n            }\r\n        });\r\n    },\r\n    componentDidUpdate() {\r\n        /*$('[data-toggle=\"tooltip\"]').tooltip({\r\n            animation: true\r\n        });*/\r\n    },\r\n\r\n    openPhoneDialog(user, event) {\r\n        event && event.preventDefault();\r\n        Analytics.sendPhoneRequestEvent();\r\n        Modal.detailsModal(Messages.get(\"LabelContact\"), <UserContactInfo user={user} />);\r\n    },\r\n\r\n    renderModels() {\r\n        if (!(this.state.models.length > 0)) {\r\n            return (\r\n                <div className=\"ilv-blankslate ilv-blankslate-lg\">\r\n                    <h3>{Messages.get(\"TextUserNotFound\")}</h3>\r\n                    <p>{Messages.get(\"TextSearchVerifyTerms\")}</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <div>\r\n            \r\n            {this.state.models.map((model, index) => {\r\n                var industry = S(model.Professional.Professional.Industry);\r\n                var headline = S(model.Professional.Professional.Headline);\r\n                var identificador = model.Professional.Professional.NomeURL ? model.Professional.Professional.NomeURL : model.Id;\r\n\r\n                return (\r\n                    <div className=\"py-3\" style={{ borderBottom: \"1px solid #eee\" }} key={\"search-result-\"+index}>\r\n                        <div className=\"ilv-media\" key={\"result-\"+index}>\r\n                            <div className=\"ilv-media-left ilv-text-xs-center mr-3\">\r\n                                <div className=\"ilv-avatar-fluid ilv-avatar-fluid-xl\"\r\n                                    style={{marginRight: \"10px\", backgroundImage: \"url(\" + (S(model.Image).isEmpty() ? UserIcon : model.Image) + \")\" }} />\r\n                            </div>\r\n                            <div className=\"ilv-media-body\">\r\n                                <div style={{marginBottom: \".25rem\"}}>\r\n                                    <Link to={\"/profile/\" + identificador}><strong>{model.Name} {model.Surname}</strong></Link>\r\n                                </div>\r\n                                <div>\r\n                                    <p className=\"ilv-text-small\">\r\n                                        <span className=\"ilv-tag ilv-tag-warning ml-0\">{model.Premium && model.Premium.Active ? 'Premium' : ''}</span>\r\n                                        { industry.isEmpty() ? \"\" : industry.s }\r\n                                    </p>\r\n                                    <span className=\"ilv-tag ilv-tag-success ml-0\">4.9 <sup>/ 5.0</sup></span>\r\n                                    <a className=\"small\" href=\"\">{Messages.format(\"TextEvaluations\", [32])}</a>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ilv-media-right ilv-text-small\">\r\n                                <p style={{marginBottom: \".25rem\"}}><a href=\"\"><i className=\"ilv-icon m-r-1 material-icons md-18\">&#xE878;</i><span className=\"hidden-sm-down\">{Messages.get(\"ActionRequestMeeting\")}</span></a></p>\r\n                                <p style={{marginBottom: \".25rem\"}}>\r\n                                    <Link to={\"/notifications/messages/\"+model.Id}>\r\n                                        <i className=\"ilv-icon m-r-1 material-icons md-18\">&#xE0BE;</i>\r\n                                        <span className=\"hidden-sm-down\">{Messages.get(\"ActionSendMessage\")}</span>\r\n                                    </Link>\r\n                                </p>\r\n                                {!model.PhoneNumber ? \"\" :(<p style={{ marginBottom: \".25rem\" } }>\r\n                                    <a href=\"\" onClick={this.openPhoneDialog.bind(this, model)}>\r\n                                        <i className=\"ilv-icon m-r-1 material-icons md-18\">&#xE0B0;</i>\r\n                                        <span className=\"hidden-sm-down\">{Messages.get(\"ActionRequestPhone\")}</span>\r\n                                    </a>\r\n                                </p>)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })} \r\n        </div>;\r\n    },\r\n\r\n    render() {\r\n        if (!this.state.models) {\r\n            return <LoadingGauge />;\r\n        }\r\n\r\n        return (\r\n            <div>                \r\n                <div className=\"my-5\" role=\"banner\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <div className=\"ilv-media ilv-media-middle\">\r\n                                    <div className=\"ilv-media-body\">\r\n                                        <h2>{this.state.term}</h2>\r\n                                        <p className=\"ilv-text-small\">{Messages.format(\"TextSearchNumberOfResults\", [this.state.total, this.state.term])}</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"ilv-media ilv-media-middle mb-3\">\r\n                                    <div className=\"ilv-media-body\">\r\n                                        <AdRowBar keyword={this.props.params.term} limit={\"1\"} isMobile={\"true\"} />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n\r\n                                {this.renderModels()}\r\n                            </div>\r\n                            <div className=\"col-3 hidden-sm-down\">\r\n                                <AdSideBar keyword={this.props.params.term} limit={\"1\"} isMobile={\"false\"} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n"]}