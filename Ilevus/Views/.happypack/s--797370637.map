{"version":3,"sources":["legacy\\jsx\\core\\view\\admin\\AdminPanelSubscriptions.jsx"],"names":["React","require","Link","Toastr","FinancialStore","SubscriptionStatus","UserSession","LoadingGauge","Messages","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","loading","componentDidMount","me","on","customers","setState","state","subscriptions","dispatch","action","ACTION_RETRIEVE_SUBSCRIPTIONS","ACTION_RETRIEVE_SUBSCRIPTIONS_CUSTOMERS","componentWillUnmount","off","renderCustomers","length","get","map","customer","index","Code","Fullname","Email","Cpf","renderSubscriptions","subscription","console","log","Customer","Status","NextInvoiceDate","Day","Month","Year","render","props","children"],"mappings":"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","file":"AdminPanelSubscriptions.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar FinancialStore = require(\"ilevus/jsx/core/store/Financial.jsx\");\r\nvar SubscriptionStatus = require(\"ilevus/jsx/core/store/moip/SubscriptionStatus.json\");\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            loading: true\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        FinancialStore.on(\"retrieve-subscriptions-customers\", (customers) => {\r\n            me.setState({\r\n                loading: !this.state.subscriptions,\r\n                customers: customers,\r\n            });\r\n        }, me);\r\n        FinancialStore.on(\"retrieve-subscriptions\", (subscriptions) => {\r\n            me.setState({\r\n                loading: !this.state.customers,\r\n                subscriptions: subscriptions,\r\n            });\r\n        }, me);\r\n\r\n\r\n        FinancialStore.dispatch({\r\n            action: FinancialStore.ACTION_RETRIEVE_SUBSCRIPTIONS,\r\n        });\r\n        FinancialStore.dispatch({\r\n            action: FinancialStore.ACTION_RETRIEVE_SUBSCRIPTIONS_CUSTOMERS,\r\n        });\r\n    },\r\n    componentWillUnmount() {\r\n        FinancialStore.off(null, null, this);\r\n    },\r\n\r\n    renderCustomers(customers) {\r\n        if (!customers || customers.length <= 0) {\r\n            return <i>{Messages.get(\"TextNoCustomersYet\")}</i>;\r\n        }\r\n        return (<table className=\"ilv-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>{Messages.get(\"LabelName\")}</th>\r\n                    <th>{Messages.get(\"LabelEmail\")}</th>\r\n                    <th>CPF</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {customers.map((customer, index) => {\r\n                    return (<tr key={\"customer-\" + index}>\r\n                        <td><Link to={\"/admin/subscriptions/customer/\"+customer.Code}>\r\n                            {customer.Fullname}\r\n                        </Link></td>\r\n                        <td>\r\n                            {customer.Email}\r\n                        </td>\r\n                        <td>\r\n                            {customer.Cpf}\r\n                        </td>\r\n                    </tr>);\r\n                })}\r\n            </tbody>\r\n        </table>);\r\n    },\r\n    renderSubscriptions(subscriptions) {\r\n        if (!subscriptions || subscriptions.length <= 0) {\r\n            return <i>{Messages.get(\"TextNoSubscriptionsYet\")}</i>;\r\n        }\r\n        return (<table className=\"ilv-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>{Messages.get(\"LabelCustomer\")}</th>\r\n                    <th>{Messages.get(\"LabelStatus\")}</th>\r\n                    <th>{Messages.get(\"LabelNextInvoice\")}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {subscriptions.map((subscription, index) => {\r\n                    console.log(subscription);\r\n                    return (<tr key={\"subscription-\" + index}>\r\n                        <td><Link to={\"/admin/subscriptions/detail/\" + subscription.Code}>\r\n                            {subscription.Customer.Fullname}\r\n                        </Link></td>\r\n                        <td>\r\n                            {SubscriptionStatus[subscription.Status]}\r\n                        </td>\r\n                        <td>\r\n                            {subscription.NextInvoiceDate.Day}/{subscription.NextInvoiceDate.Month}/{subscription.NextInvoiceDate.Year}\r\n                        </td>\r\n                    </tr>);\r\n                })}\r\n            </tbody>\r\n        </table>);\r\n    },\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <LoadingGauge />;\r\n        }\r\n        if (this.props.children) {\r\n            return this.props.children;\r\n        }\r\n        return (<div>\r\n            <h1>{Messages.get(\"LabelSubscriptions\")}</h1>\r\n            <div className=\"ilv-card\">\r\n                <div className=\"ilv-card-header\">\r\n                    <strong>{Messages.get(\"LabelMoipSubscriptions\")} ({this.state.subscriptions ? this.state.subscriptions.length : 0})\r\n                    </strong>\r\n                </div>\r\n                <div className=\"ilv-card-body\">{this.renderSubscriptions(this.state.subscriptions)}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"ilv-card\">\r\n                <div className=\"ilv-card-header\">\r\n                    <strong>\r\n                        {Messages.get(\"LabelMoipCustomers\")} ({this.state.customers ? this.state.customers.length:0})\r\n                    </strong>\r\n                </div>\r\n                <div className=\"ilv-card-body\">\r\n                    {this.renderCustomers(this.state.customers)}\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n});\r\n"]}