"use strict";

var React = require("react");
var Link = require("react-router").Link;
var Toastr = require("toastr");

var ReportStore = require("ilevus/jsx/core/store/Reports.jsx");
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");

var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object
    },
    getInitialState: function getInitialState() {
        return {
            dtInit: null,
            dtEnd: null,
            loading: true
        };
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        me.setState({
            loading: false
        });

        var di = new Date();
        di.setDate(1);
        di.setMonth(di.getMonth() - 1);

        var de = new Date(di.getFullYear(), di.getMonth() + 1, 0);

        this.state.dtInit = ("0" + di.getDate()).slice(-2) + "/" + ("0" + (di.getMonth() + 1)).slice(-2) + "/" + di.getFullYear(); //di.getFullYear() + "-" + (di.getMonth() + 1) + "-" + di.getDate();
        this.state.dtEnd = ("0" + de.getDate()).slice(-2) + "/" + ("0" + (de.getMonth() + 1)).slice(-2) + "/" + de.getFullYear(); //de.getFullYear() + "-" + (de.getMonth() + 1) + "-" + de.getDate();


        jQuery(document).on("click", "a[id*='lnkExpand']", function () {
            jQuery(this).find("i").toggleClass("fa-plus").toggleClass("fa-minus");

            jQuery('input[id="DtInit"], input[id="DtEnd"]').daterangepicker({
                singleDatePicker: true,
                locale: {
                    format: 'DD/MM/YYYY'
                },
                opens: 'right',
                drops: 'down',
                showDropdowns: true
            });
        });
    },
    componentWillUnmount: function componentWillUnmount() {
        ReportStore.off(null, null, this);
    },
    downloadProductivityCSV: function downloadProductivityCSV(event) {
        event.stopPropagation();
        ReportStore.dispatch({
            action: ReportStore.ACTION_DOWNLOAD_PRODUTIVITY_CSV,
            data: {
                DtInit: this.refs['DtInit'].value,
                DtEnd: this.refs['DtEnd'].value,
                SearchTerm: this.refs['SearchTerm'].value
            }
        });
    },
    render: function render() {
        if (this.state.loading) {
            return React.createElement(LoadingGauge, null);
        }
        return React.createElement(
            "div",
            null,
            React.createElement(
                "div",
                { className: "ilv-card" },
                React.createElement(
                    "div",
                    { className: "ilv-card-header" },
                    React.createElement(
                        "div",
                        { className: "ilv-media ilv-media-middle" },
                        React.createElement(
                            "div",
                            { className: "ilv-media-body" },
                            React.createElement(
                                "a",
                                { href: "#productivity-container", id: "lnkExpand", "data-toggle": "collapse" },
                                React.createElement("i", { className: "fa fa-plus" })
                            ),
                            "\xA0\xA0",
                            React.createElement(
                                "strong",
                                null,
                                Messages.get("LabelModeratorsProductivity")
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-media-right" },
                            React.createElement(
                                "button",
                                { className: "ilv-btn ilv-btn-link", onClick: this.downloadProductivityCSV },
                                React.createElement("i", { className: "fa fa-download" })
                            )
                        )
                    )
                ),
                React.createElement(
                    "div",
                    { className: "ilv-card-body collapse", id: "productivity-container" },
                    React.createElement(
                        "form",
                        { className: "tab-content" },
                        React.createElement(
                            "div",
                            { className: "row" },
                            React.createElement(
                                "div",
                                { className: "col-4" },
                                React.createElement(
                                    "div",
                                    { className: "ilv-form-group" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelDataInicio")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", id: "DtInit", ref: "DtInit", defaultValue: this.state.dtInit })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-4" },
                                React.createElement(
                                    "div",
                                    { className: "ilv-form-group" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelDataFinal")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", id: "DtEnd", ref: "DtEnd", defaultValue: this.state.dtEnd })
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col-4" },
                                React.createElement(
                                    "div",
                                    { className: "ilv-form-group" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelSearch")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", id: "SearchTerm", ref: "SearchTerm" })
                                )
                            )
                        )
                    )
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/admin/AdminPanelReports.jsx");
}();

;