{"version":3,"sources":["src\\store\\resource\\sagas.js"],"names":["createResource","readResourceList","readResourceDetail","updateResource","deleteResource","watchResourceCreateRequest","watchResourceListReadRequest","watchResourceDetailReadRequest","watchResourceUpdateRequest","watchResourceDeleteRequest","actions","api","data","resource","thunk","post","detail","resourceCreateSuccess","resourceCreateFailure","params","get","list","resourceListReadSuccess","resourceListReadFailure","needle","resourceDetailReadSuccess","resourceDetailReadFailure","put","resourceUpdateSuccess","resourceUpdateFailure","delete","resourceDeleteSuccess","resourceDeleteFailure","payload","meta","RESOURCE_CREATE_REQUEST","RESOURCE_LIST_READ_REQUEST","RESOURCE_DETAIL_READ_REQUEST","RESOURCE_UPDATE_REQUEST","RESOURCE_DELETE_REQUEST"],"mappings":"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","file":"sagas.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["// https://github.com/diegohaz/arc/wiki/Sagas\n// https://github.com/diegohaz/arc/wiki/Example-redux-modules#resource\nimport { put, call, takeEvery } from 'redux-saga/effects'\nimport * as actions from './actions'\n\nexport function* createResource(api, { data }, { resource, thunk }) {\n  try {\n    // https://github.com/diegohaz/arc/wiki/API-service\n    const detail = yield call([api, api.post], `/${resource}`, data)\n    // https://github.com/diegohaz/arc/wiki/Actions#async-actions\n    yield put(actions.resourceCreateSuccess(resource, detail, { data }, thunk))\n  } catch (e) {\n    yield put(actions.resourceCreateFailure(resource, e, { data }, thunk))\n  }\n}\n\nexport function* readResourceList(api, { params }, { resource, thunk }) {\n  try {\n    const list = yield call([api, api.get], `/${resource}`, { params })\n    yield put(actions.resourceListReadSuccess(resource, list, { params }, thunk))\n  } catch (e) {\n    yield put(actions.resourceListReadFailure(resource, e, { params }, thunk))\n  }\n}\n\nexport function* readResourceDetail(api, { needle }, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.get], `/${resource}/${needle}`)\n    yield put(actions.resourceDetailReadSuccess(resource, detail, { needle }, thunk))\n  } catch (e) {\n    yield put(actions.resourceDetailReadFailure(resource, e, { needle }, thunk))\n  }\n}\n\nexport function* updateResource(api, { needle, data }, { resource, thunk }) {\n  try {\n    const detail = yield call([api, api.put], `/${resource}/${needle}`, data)\n    yield put(actions.resourceUpdateSuccess(resource, detail, { needle, data }, thunk))\n  } catch (e) {\n    yield put(actions.resourceUpdateFailure(resource, e, { needle, data }, thunk))\n  }\n}\n\nexport function* deleteResource(api, { needle }, { resource, thunk }) {\n  try {\n    yield call([api, api.delete], `/${resource}/${needle}`)\n    yield put(actions.resourceDeleteSuccess(resource, { needle }, thunk))\n  } catch (e) {\n    yield put(actions.resourceDeleteFailure(resource, e, { needle }, thunk))\n  }\n}\n\nexport function* watchResourceCreateRequest(api, { payload, meta }) {\n  yield call(createResource, api, payload, meta)\n}\n\nexport function* watchResourceListReadRequest(api, { payload, meta }) {\n  yield call(readResourceList, api, payload, meta)\n}\n\nexport function* watchResourceDetailReadRequest(api, { payload, meta }) {\n  yield call(readResourceDetail, api, payload, meta)\n}\n\nexport function* watchResourceUpdateRequest(api, { payload, meta }) {\n  yield call(updateResource, api, payload, meta)\n}\n\nexport function* watchResourceDeleteRequest(api, { payload, meta }) {\n  yield call(deleteResource, api, payload, meta)\n}\n\nexport default function* ({ api }) {\n  yield takeEvery(actions.RESOURCE_CREATE_REQUEST, watchResourceCreateRequest, api)\n  yield takeEvery(actions.RESOURCE_LIST_READ_REQUEST, watchResourceListReadRequest, api)\n  yield takeEvery(actions.RESOURCE_DETAIL_READ_REQUEST, watchResourceDetailReadRequest, api)\n  yield takeEvery(actions.RESOURCE_UPDATE_REQUEST, watchResourceUpdateRequest, api)\n  yield takeEvery(actions.RESOURCE_DELETE_REQUEST, watchResourceDeleteRequest, api)\n}\n"]}