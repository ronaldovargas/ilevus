{"version":3,"sources":["src\\components\\molecules\\Feature\\index.js"],"names":["Wrapper","div","StyledIcon","Text","StyledBadge","Feature","icon","title","link","code","children","props","soon","propTypes","string","isRequired","bool","any","node"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;;;AAEA,IAAMA,UAAU,2BAAOC,GAAjB;AAAA;AAAA,wLAKO,yBAAO,MAAP,EAAe,GAAf,EAAoB,CAApB,CALP,CAAN;;AAWA,IAAMC,aAAa,iDAAb;AAAA;AAAA,0FAAN;;AAOA,IAAMC,OAAO,2BAAOF,GAAd;AAAA;AAAA,4FAAN;;AAQA,IAAMG,cAAc,kDAAd;AAAA;AAAA,oJAAN;;AAUA,IAAMC,UAAU,SAAVA,OAAU,OAEV;AAAA,MADJC,IACI,QADJA,IACI;AAAA,MADEC,KACF,QADEA,KACF;AAAA,MADSC,IACT,QADSA,IACT;AAAA,MADeC,IACf,QADeA,IACf;AAAA,MADqBC,QACrB,QADqBA,QACrB;AAAA,MADkCC,KAClC;;AACJ,SACE;AAAC,WAAD;AAAaA,SAAb;AACGL,YAAQ,8BAAC,UAAD,IAAY,MAAMA,IAAlB,EAAwB,OAAO,EAA/B,GADX;AAEE;AAAC,UAAD;AAAA;AACE;AAAA;AAAA,UAAS,OAAO,CAAhB;AACGE,eAAO;AAAA;AAAA,YAAM,MAAMA,IAAZ;AAAmBD;AAAnB,SAAP,GAA0CA;AAD7C,OADF;AAIE;AAAA;AAAA;AAAYG;AAAZ,OAJF;AAKGD,cAAQ;AAAA;AAAA,UAAkB,WAAlB;AAAyBA;AAAzB;AALX,KAFF;AASGE,UAAMC,IAAN,IAAc;AAAC,iBAAD;AAAA,QAAa,SAAQ,WAArB;AAAA;AAAA;AATjB,GADF;AAaD,CAhBD;;AAkBAP,QAAQQ,SAAR,GAAoB;AAClBN,SAAO,oBAAUO,MAAV,CAAiBC,UADN;AAElBT,QAAM,oBAAUQ,MAFE;AAGlBN,QAAM,oBAAUM,MAHE;AAIlBF,QAAM,oBAAUI,IAJE;AAKlBN,YAAU,oBAAUO,GALF;AAMlBR,QAAM,oBAAUS;AANE,CAApB;;eASeb,O;;;;;;;;;gCA/DTL,O;;gCAWAE,U;;gCAOAC,I;;gCAQAC,W;;gCAUAC,O","file":"index.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components'\r\nimport { ifProp } from 'styled-tools'\r\n\r\nimport { Icon, Link, Paragraph, Heading, Badge, PreformattedText } from 'components'\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  padding: 1rem;\r\n  box-sizing: border-box;\r\n  opacity: ${ifProp('soon', 0.4, 1)};\r\n  @media screen and (max-width: 640px) {\r\n    padding: 0.5rem;\r\n  }\r\n`\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  flex: none;\r\n  @media screen and (max-width: 640px) {\r\n    width: 32px;\r\n  }\r\n`\r\n\r\nconst Text = styled.div`\r\n  margin-left: 1rem;\r\n  overflow: auto;\r\n  > :first-child {\r\n    margin: 0;\r\n  }\r\n`\r\n\r\nconst StyledBadge = styled(Badge)`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 1rem;\r\n  @media screen and (max-width: 640px) {\r\n    top: 0.5rem;\r\n    right: 0.5rem;\r\n  }\r\n`\r\n\r\nconst Feature = ({\r\n  icon, title, link, code, children, ...props\r\n}) => {\r\n  return (\r\n    <Wrapper {...props}>\r\n      {icon && <StyledIcon icon={icon} width={64} />}\r\n      <Text>\r\n        <Heading level={2}>\r\n          {link ? <Link href={link}>{title}</Link> : title}\r\n        </Heading>\r\n        <Paragraph>{children}</Paragraph>\r\n        {code && <PreformattedText block>{code}</PreformattedText>}\r\n      </Text>\r\n      {props.soon && <StyledBadge palette=\"grayscale\">soon</StyledBadge>}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nFeature.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string,\r\n  link: PropTypes.string,\r\n  soon: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  code: PropTypes.node,\r\n}\r\n\r\nexport default Feature\r\n"]}