{"version":3,"sources":["legacy\\jsx\\core\\store\\User.jsx"],"names":["Fluxbone","require","Messages","S","URL","BACKEND_URL","UserModel","Model","extend","url","validate","attrs","options","errors","Name","isEmpty","push","get","Surname","Email","pwd","Password","length","format","isAlphaNumeric","ConfirmPassword","UserStore","Store","ACTION_RETRIEVE","ACTION_SIGNUP","ACTION_SEARCH","ACTION_FIND","ACTION_ALL","ACTION_DESTROY","dispatchAcceptRegex","model","signup","data","create","all","me","$","ajax","method","dataType","success","status","opts","trigger","error","errorMsg","handleRequestErrors","search","params","module","exports"],"mappings":"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","file":"User.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["/**\r\n    Esta é a store da entidade de Usuário do sistema.\r\n*/\r\n\r\nvar Fluxbone = require(\"ilevus/jsx/core/store/Fluxbone.jsx\");\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\nvar S = require(\"string\");\r\n\r\nvar URL = Fluxbone.BACKEND_URL + \"User\";\r\n\r\nvar UserModel = Fluxbone.Model.extend({\r\n    url: URL,\r\n    validate(attrs, options) {\r\n        var errors = [];\r\n\r\n        if (S(attrs.Name).isEmpty()) {\r\n            errors.push(Messages.get(\"ValidationNameRequired\"));\r\n        }\r\n        if (S(attrs.Surname).isEmpty()) {\r\n            errors.push(Messages.get(\"ValidationSurnameRequired\"));\r\n        }\r\n        if (S(attrs.Email).isEmpty()) {\r\n            errors.push(Messages.get(\"ValidationEmailRequired\"));\r\n        }\r\n\r\n        var pwd = S(attrs.Password);\r\n        if (pwd.isEmpty()) {\r\n            errors.push(Messages.get(\"ValidationPasswordRequired\"));\r\n        }\r\n        if (pwd.length < 6) {\r\n            errors.push(Messages.format(\"ValidationPasswordLength\", [6]));\r\n        }\r\n        if (pwd.isAlphaNumeric()) {\r\n            errors.push(Messages.get(\"ValidationPasswordFormat\"));\r\n        }\r\n\r\n        if (attrs.Password != attrs.ConfirmPassword) {\r\n            errors.push(Messages.get(\"ValidationPasswordsDontMatch\"));\r\n        }\r\n\r\n        if (errors.length > 0)\r\n            return errors;\r\n    }\r\n});\r\n\r\nvar UserStore = Fluxbone.Store.extend({\r\n    ACTION_RETRIEVE: 'user-retrieve',\r\n    ACTION_SIGNUP: 'user-signup',\r\n    ACTION_SEARCH: 'user-search',\r\n    ACTION_FIND: 'user-find',\r\n    ACTION_ALL: 'user-all',\r\n    ACTION_DESTROY: 'user-destroy',\r\n    dispatchAcceptRegex: /^user-[a-zA-Z0-9]+$/,\r\n\r\n    url: URL,\r\n    model: UserModel,\r\n\r\n    signup(data) {\r\n        return this.create(data, {\r\n            url: this.url + \"/Register\"\r\n        });\r\n    },\r\n    all() {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: Fluxbone.BACKEND_URL + \"/User/AllUsers\",\r\n            dataType: 'json',\r\n            data: null,\r\n            success(data, status, opts) {\r\n                me.trigger(\"all\", data);\r\n                data = null;\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n    search(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: Fluxbone.BACKEND_URL + \"Search\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"search\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = new UserStore();\r\n"]}