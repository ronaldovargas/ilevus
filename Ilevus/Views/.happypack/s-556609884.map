{"version":3,"sources":["legacy\\jsx\\core\\view\\admin\\AdminPanelSitemap.jsx"],"names":["React","require","Link","Toastr","SitemapLogStore","UserSession","moment","LoadingGauge","Messages","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","loading","data","componentDidMount","me","on","setState","Result","qtde","remove","success","get","dispatch","action","ACTION_SITEMAP_GET","res","componentWillUnmount","off","deleteAll","ACTION_SITEMAP_DEL","generateNow","ACTION_SITEMAP_GENERATE","renderLog","items","state","length","map","contact","idx","DataGeracao","format","UsuariosVerificados","UsuariosIncluidosArquivos","render","cursor"],"mappings":"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","file":"AdminPanelSitemap.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["var React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar SitemapLogStore = require(\"ilevus/jsx/core/store/SitemapLog.jsx\");\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\nvar moment = require('moment');\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            loading: true,\r\n            data: []\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        SitemapLogStore.on(\"sitemaplogget\", (data) => {\r\n            me.setState({\r\n                loading: false,\r\n                data: data.Result\r\n            });\r\n        }, me);\r\n        SitemapLogStore.on(\"sitemapdelete\", (qtde) => {\r\n            Toastr.remove();\r\n            Toastr.success(Messages.get(\"TextSitemapDeleteOK\"));\r\n\r\n            SitemapLogStore.dispatch({\r\n                action: SitemapLogStore.ACTION_SITEMAP_GET\r\n            });\r\n        }, me);\r\n        SitemapLogStore.on(\"sitemapgenerateget\", (res) => {\r\n            Toastr.remove();\r\n            Toastr.success(Messages.get(\"TextSitemapGereratedOK\"));\r\n\r\n            SitemapLogStore.dispatch({\r\n                action: SitemapLogStore.ACTION_SITEMAP_GET\r\n            });\r\n        }, me);\r\n\r\n        SitemapLogStore.dispatch({\r\n            action: SitemapLogStore.ACTION_SITEMAP_GET\r\n        });\r\n    },\r\n    componentWillUnmount() {\r\n        SitemapLogStore.off(null, null, this);\r\n    },\r\n\r\n    deleteAll() {\r\n        SitemapLogStore.dispatch({\r\n            action: SitemapLogStore.ACTION_SITEMAP_DEL\r\n        });    \r\n    },\r\n\r\n    generateNow() {\r\n        SitemapLogStore.dispatch({\r\n            action: SitemapLogStore.ACTION_SITEMAP_GENERATE\r\n        });\r\n    },\r\n\r\n    renderLog() {\r\n        var items;\r\n        if (!this.state.data || this.state.data.length == 0) {\r\n            return <div className=\"ilv-notification ilv-notification-unread\">{Messages.get(\"LabelNenhumLogSitemap\")}</div>\r\n        }\r\n\r\n        items = this.state.data.map((contact, idx) => {\r\n            return <div>\r\n                        {Messages.get(\"LabelDataGeracao\")}: {moment(contact.DataGeracao).format('DD/MM/YYYY hh:mm')}<br/>\r\n                        {Messages.get(\"LabelUsuariosVerificados\")}: {contact.UsuariosVerificados}<br />\r\n                        {Messages.get(\"LabelUsuariosAdicionados\")}: {contact.UsuariosIncluidosArquivos}\r\n                        <hr />\r\n                   </div>\r\n        });\r\n        return <div>{items}</div>\r\n    },\r\n   \r\n    render() {\r\n        return <div>\r\n            <div><a style={{cursor: \"pointer\" }} onClick={this.generateNow}>{Messages.get(\"LabelGerarAgora\")}</a></div>\r\n            <div><a style={{cursor: \"pointer\" }} onClick={this.deleteAll}>{Messages.get(\"LabelExcluirTodos\")}</a></div>\r\n            <br/>\r\n            {this.renderLog()}\r\n           </div>\r\n        }\r\n        //if (this.state.loading) {\r\n        //    return <LoadingGauge />;\r\n        //}       \r\n\r\n    //    return (<div>\r\n    //                <div><a style={{cursor: \"pointer\" }} onClick={this.generateNow}>{Messages.get(\"LabelGerarAgora\")}</a></div>\r\n    //                <div><a style={{cursor: \"pointer\" }} onClick={this.deleteAll}>{Messages.get(\"LabelExcluirTodos\")}</a></div>\r\n    //                <br>\r\n    //                {this.renderLog()}\r\n    //            </div>);\r\n    //}\r\n});\r\n"]}