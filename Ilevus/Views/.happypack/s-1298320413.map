{"version":3,"sources":["src\\store\\entities\\selectors.js"],"names":["schemas","initialState","getEntity","state","entity","getDetail","id","getList","ids","Object","keys","map","getDenormalizedDetail","getDenormalizedList"],"mappings":";;;;;;;AAEA;;AACA;;IAAYA,O;;;;AAHZ;AACA;AAIO,IAAMC,sCAAe,EAArB;;AAEA,IAAMC,gCAAY,SAAZA,SAAY;AAAA,MAACC,KAAD,uEAASF,YAAT;AAAA,MAAuBG,MAAvB;AAAA,SAAkCD,MAAMC,MAAN,KAAiB,EAAnD;AAAA,CAAlB;;AAEA,IAAMC,gCAAY,SAAZA,SAAY;AAAA,MAACF,KAAD,uEAASF,YAAT;AAAA,MAAuBG,MAAvB;AAAA,MAA+BE,EAA/B;AAAA,SAAsCJ,UAAUC,KAAV,EAAiBC,MAAjB,EAAyBE,EAAzB,CAAtC;AAAA,CAAlB;;AAEA,IAAMC,4BAAU,SAAVA,OAAU;AAAA,MAACJ,KAAD,uEAASF,YAAT;AAAA,MAAuBG,MAAvB;AAAA,MAA+BI,GAA/B;AAAA,SACrB,CAACA,OAAOC,OAAOC,IAAP,CAAYR,UAAUC,KAAV,EAAiBC,MAAjB,CAAZ,CAAR,EAA+CO,GAA/C,CAAmD;AAAA,WAAMN,UAAUF,KAAV,EAAiBC,MAAjB,EAAyBE,EAAzB,CAAN;AAAA,GAAnD,CADqB;AAAA,CAAhB;;AAGA,IAAMM,wDAAwB,SAAxBA,qBAAwB;AAAA,MAACT,KAAD,uEAASF,YAAT;AAAA,MAAuBG,MAAvB;AAAA,MAA+BE,EAA/B;AAAA,SACnC,4BAAYD,UAAUF,KAAV,EAAiBC,MAAjB,EAAyBE,EAAzB,CAAZ,EAA0CN,QAAQI,MAAR,CAA1C,EAA2DD,KAA3D,CADmC;AAAA,CAA9B;;AAGA,IAAMU,oDAAsB,SAAtBA,mBAAsB;AAAA,MAACV,KAAD,uEAASF,YAAT;AAAA,MAAuBG,MAAvB;AAAA,MAA+BI,GAA/B;AAAA,SACjC,4BAAYD,QAAQJ,KAAR,EAAeC,MAAf,EAAuBI,GAAvB,CAAZ,EAAyC,CAACR,QAAQI,MAAR,CAAD,CAAzC,EAA4DD,KAA5D,CADiC;AAAA,CAA5B;;;;;;;;gCAZMF,Y;;gCAEAC,S;;gCAEAG,S;;gCAEAE,O;;gCAGAK,qB;;gCAGAC,mB","file":"selectors.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["// https://github.com/diegohaz/arc/wiki/Selectors\n// https://github.com/diegohaz/arc/wiki/Example-redux-modules#entities\nimport { denormalize } from 'normalizr'\nimport * as schemas from './schemas'\n\nexport const initialState = {}\n\nexport const getEntity = (state = initialState, entity) => state[entity] || {}\n\nexport const getDetail = (state = initialState, entity, id) => getEntity(state, entity)[id]\n\nexport const getList = (state = initialState, entity, ids) =>\n  (ids || Object.keys(getEntity(state, entity))).map(id => getDetail(state, entity, id))\n\nexport const getDenormalizedDetail = (state = initialState, entity, id) =>\n  denormalize(getDetail(state, entity, id), schemas[entity], state)\n\nexport const getDenormalizedList = (state = initialState, entity, ids) =>\n  denormalize(getList(state, entity, ids), [schemas[entity]], state)\n"]}