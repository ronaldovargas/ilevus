
var React = require("react");
var Link = require("react-router").Link;
var Toastr = require("toastr");

var FinancialStore = require("ilevus/jsx/core/store/Financial.jsx");
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");

var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object
    },
    getInitialState: function getInitialState() {
        return {
            loading: true
        };
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        FinancialStore.on("retrieve-subscriptions-customer", function (customer) {
            me.setState({
                loading: false,
                customer: customer
            });
        }, me);
        this.loadCustomer(this.props.params.id);
    },
    componentWillReceiveProps: function componentWillReceiveProps(newProps) {
        if (this.props.params.id != newProps.params.id) {
            this.loadCustomer(newProps.params.id);
        }
    },
    componentWillUnmount: function componentWillUnmount() {
        FinancialStore.off(null, null, this);
    },
    loadCustomer: function loadCustomer(id) {
        FinancialStore.dispatch({
            action: FinancialStore.ACTION_RETRIEVE_SUBSCRIPTIONS_CUSTOMER,
            data: id
        });
    },
    renderCreditCards: function renderCreditCards(cards) {
        if (!cards || cards.length <= 0) {
            return React.createElement(
                "i",
                null,
                Messages.get("TextNoCreditCardYet")
            );
        }
        return React.createElement(
            "table",
            { className: "ilv-table" },
            React.createElement(
                "thead",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelCard")
                    ),
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelHolderName")
                    ),
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelExpirationData")
                    )
                )
            ),
            React.createElement(
                "tbody",
                null,
                cards.map(function (card, index) {
                    return React.createElement(
                        "tr",
                        { key: "card-" + index },
                        React.createElement(
                            "td",
                            null,
                            card.Brand,
                            " XXXX-XXXX-XXXX-",
                            card.LastFourDigits
                        ),
                        React.createElement(
                            "td",
                            null,
                            card.HolderName
                        ),
                        React.createElement(
                            "td",
                            null,
                            card.ExpirationMonth,
                            "/",
                            card.ExpirationYear
                        )
                    );
                })
            )
        );
    },
    render: function render() {
        if (this.state.loading) {
            return React.createElement(LoadingGauge, null);
        }
        var customer = this.state.customer;
        return React.createElement(
            "div",
            null,
            React.createElement(
                "h2",
                null,
                Messages.get("LabelSubscriptionsCustomer")
            ),
            React.createElement(
                "div",
                { className: "ilv-card" },
                React.createElement(
                    "div",
                    { className: "ilv-card-header" },
                    React.createElement(
                        "h4",
                        null,
                        customer.Fullname
                    )
                ),
                React.createElement(
                    "div",
                    { className: "ilv-card-body" },
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelEmail")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Email
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                "CPF"
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Cpf
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelCreatedAt")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.CreationDate,
                                " ",
                                Messages.get("LabelAt"),
                                " ",
                                customer.CreationTime
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelPhone")
                            ),
                            React.createElement(
                                "b",
                                null,
                                "(",
                                customer.PhoneAreaCode,
                                ") ",
                                customer.PhoneNumber
                            )
                        )
                    ),
                    React.createElement("hr", { className: "mb-4" }),
                    React.createElement(
                        "div",
                        { className: "mb-4" },
                        React.createElement(
                            "strong",
                            null,
                            Messages.get("LabelCreditCards")
                        )
                    ),
                    this.renderCreditCards(customer.BillingInfo.CreditCards),
                    React.createElement("hr", { className: "mb-4" }),
                    React.createElement(
                        "div",
                        { className: "mb-4" },
                        React.createElement(
                            "strong",
                            null,
                            Messages.get("LabelAddress")
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelStreet")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.Street
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelNumber")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.Number
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelComplement")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.Complement
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelDistrict")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.District
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelCity")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.City
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelState")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.State
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelCountry")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.Country
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelZipcode")
                            ),
                            React.createElement(
                                "b",
                                null,
                                customer.Address.Zipcode
                            )
                        )
                    )
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/admin/AdminPanelSubscriptionsCustomer.jsx");
}();

;