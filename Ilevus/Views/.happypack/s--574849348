'use strict';

var React = require('react');

var injectStripe = require('react-stripe-elements/lib/index').injectStripe;

var CardNumberSection = require('./CardNumberSection.jsx');
var CardCVCSection = require('./CardCVCSection.jsx');
var CardPostalCode = require('./CardPostalCodeSection.jsx');
var UserSession = require('./../../store/Financial.jsx');

var CurrencyUtils = require("ilevus/jsx/core/util/CurrencyUtils.jsx");

module.exports = React.createClass({
  displayName: 'exports',

  propTypes: {
    service: React.PropTypes.object.isRequired
  },
  getInitialState: function getInitialState() {
    return {
      user: null
    };
  },
  handleSubmit: function handleSubmit(ev) {
    var _this = this;

    ev.preventDefault();
    this.props.stripe.createToken().then(function (_ref) {
      var token = _ref.token,
          error = _ref.error;

      _this.toHireService(token);
      console.log('Received Stripe token:', token, error);
    });
  },
  toHireService: function toHireService(params) {
    UserSession.toHireService({ service: this.props.service, stripe: params });
  },
  render: function render() {
    return React.createElement(
      'form',
      { onSubmit: this.handleSubmit },
      React.createElement(
        'table',
        { style: { width: '100%', marginBottom: '20px' } },
        React.createElement(
          'tr',
          null,
          React.createElement(
            'th',
            null,
            'Servi\xE7o'
          ),
          React.createElement(
            'th',
            { style: { textAlign: 'right' } },
            'Valor'
          )
        ),
        React.createElement(
          'tr',
          null,
          React.createElement(
            'td',
            { className: 'ilv-font-weight-semibold' },
            this.props.service.Name
          ),
          React.createElement(
            'td',
            { className: 'ilv-text-xs-right' },
            CurrencyUtils.format(this.props.service.Price)
          )
        )
      ),
      React.createElement(CardNumberSection, null),
      React.createElement(CardCVCSection, null),
      React.createElement(
        'button',
        { className: 'ilv-btn-primary', style: { width: '100%', padding: '11px' } },
        'Confirm order'
      )
    );
  }
});
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(injectStripe, 'injectStripe', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/widget/stripe/CheckoutForm.jsx');
}();

;