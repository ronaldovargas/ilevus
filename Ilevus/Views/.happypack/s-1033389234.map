{"version":3,"sources":["legacy\\jsx\\core\\view\\admin\\AdminPanelApis.jsx"],"names":["React","require","Link","Toastr","SystemStore","UserSession","LoadingGauge","Messages","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","loading","componentDidMount","me","on","config","setState","remove","success","get","$","removeAttr","msg","dispatch","action","ACTION_RETRIEVE_CONFIG","componentWillUnmount","off","saveApiConfigs","event","preventDefault","ACTION_UPDATE_CONFIG_APIS","data","MoipBaseUrl","refs","value","MoipToken","MoipKey","MoipSubscriptionKey","MoipSubscriptionCode","MoipCryptoPublicKey","render","state"],"mappings":"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","file":"AdminPanelApis.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar SystemStore = require(\"ilevus/jsx/core/store/System.jsx\");\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            loading: true\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        SystemStore.on(\"retrieve-config\", (config) => {\r\n            me.setState({\r\n                loading: false,\r\n                config: config\r\n            });\r\n        }, me);\r\n        SystemStore.on(\"update-config-apis\", (config) => {\r\n            Toastr.remove();\r\n            Toastr.success(Messages.get(\"TextDataSavedSuccessfully\"));\r\n            $(\"button\").removeAttr(\"disabled\");\r\n        }, me);\r\n        SystemStore.on(\"fail\", (msg) => {\r\n            $(\"button\").removeAttr(\"disabled\");\r\n        }, me);\r\n\r\n        SystemStore.dispatch({\r\n            action: SystemStore.ACTION_RETRIEVE_CONFIG\r\n        });\r\n    },\r\n    componentWillUnmount() {\r\n        SystemStore.off(null, null, this);\r\n    },\r\n\r\n    saveApiConfigs(event) {\r\n        event.preventDefault();\r\n        \r\n        SystemStore.dispatch({\r\n            action: SystemStore.ACTION_UPDATE_CONFIG_APIS,\r\n            data: {\r\n                MoipBaseUrl: this.refs['MoipBaseUrl'].value,\r\n                MoipToken: this.refs['MoipToken'].value,\r\n                MoipKey: this.refs['MoipKey'].value,\r\n                MoipSubscriptionKey: this.refs['MoipSubscriptionKey'].value,\r\n                MoipSubscriptionCode: this.refs['MoipSubscriptionCode'].value,\r\n                MoipCryptoPublicKey: this.refs['MoipCryptoPublicKey'].value,\r\n            }\r\n        });\r\n    },\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <LoadingGauge />;\r\n        }\r\n        return (<div>\r\n            <div className=\"ilv-card\">\r\n                <div className=\"ilv-card-header\">\r\n                    <strong>\r\n                        {Messages.get(\"LabelMoipConfiguration\")}\r\n                    </strong>\r\n                </div>\r\n                <div className=\"ilv-card-body\">\r\n                    <form onSubmit={this.saveApiConfigs}>\r\n                        <div className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelMoipBaseUrl\")}</label>\r\n                            <input className=\"ilv-form-control\" type=\"url\" spellCheck={false} ref=\"MoipBaseUrl\" defaultValue={this.state.config.MoipBaseUrl} />\r\n                        </div>\r\n                        <div className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelMoipToken\")}</label>\r\n                            <input className=\"ilv-form-control\" type=\"text\" spellCheck={false} ref=\"MoipToken\" defaultValue={this.state.config.MoipToken} />\r\n                        </div>\r\n                        <div className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelMoipKey\")}</label>\r\n                            <input className=\"ilv-form-control\" type=\"text\" spellCheck={false} ref=\"MoipKey\" defaultValue={this.state.config.MoipKey} />\r\n                        </div>\r\n                        <div className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelMoipSubscriptionKey\")}</label>\r\n                            <input className=\"ilv-form-control\" type=\"text\" spellCheck={false} ref=\"MoipSubscriptionKey\" defaultValue={this.state.config.MoipSubscriptionKey} />\r\n                        </div>\r\n                        <div className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelMoipSubscriptionCode\")}</label>\r\n                            <input className=\"ilv-form-control\" type=\"text\" spellCheck={false} ref=\"MoipSubscriptionCode\" defaultValue={this.state.config.MoipSubscriptionCode} />\r\n                        </div>\r\n                        <div className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelMoipCryptoPublicKey\")}</label>\r\n                            <textarea className=\"ilv-form-control\" spellCheck={false} ref=\"MoipCryptoPublicKey\" defaultValue={this.state.config.MoipCryptoPublicKey} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"ilv-btn ilv-btn-success\">{Messages.get(\"LabelSave\")}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n});\r\n"]}