"use strict";

var React = require("react");
var Link = require("react-router").Link;
var ErrorAlert = require("ilevus/jsx/core/widget/ErrorAlert.jsx");
var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");
var Modal = require("ilevus/jsx/core/widget/Modal.jsx");
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");

var AppLogo = require("ilevus/img/logo.png");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

module.exports = React.createClass({
	displayName: "exports",
	getInitialState: function getInitialState() {
		return {
			loading: true,
			valid: false
		};
	},
	componentDidMount: function componentDidMount() {
		var me = this;
		UserSession.on("emailconfirmed", function (resp) {
			me.setState({
				valid: true,
				loading: false
			});
		}, me);
		UserSession.on("fail", function () {
			me.setState({
				valid: false,
				loading: false
			});
		}, me);

		UserSession.dispatch({
			action: UserSession.ACTION_CONFIRM_EMAIL,
			data: {
				Email: this.props.params.email,
				Code: this.props.params.token
			}
		});
	},
	componentWillUnmount: function componentWillUnmount() {
		UserSession.off(null, null, this);
	},
	render: function render() {
		if (this.state.loading) {
			return React.createElement(LoadingGauge, null);
		}
		return React.createElement(
			"div",
			{ className: "my-3", role: "banner" },
			React.createElement(
				"div",
				{ className: "container" },
				React.createElement(
					"div",
					{ className: "row" },
					React.createElement(
						"div",
						{ className: "offset-sm-2 col-sm-8 col-xs-12 text-xs-center" },
						this.state.valid ? React.createElement(
							"div",
							{ className: "alert alert-success" },
							Messages.get("TextEmailConfirmSuccess")
						) : React.createElement(
							"div",
							{ className: "alert alert-danger" },
							Messages.get("TextEmailConfirmFailure")
						),
						React.createElement(
							Link,
							{ to: "/home", className: "btn btn-brand", style: { margin: 'auto' } },
							Messages.get("ActionBackToMainPage")
						)
					)
				)
			)
		);
	}
});
;

var _temp = function () {
	if (typeof __REACT_HOT_LOADER__ === 'undefined') {
		return;
	}

	__REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/user/ConfirmEmail.jsx");
}();

;