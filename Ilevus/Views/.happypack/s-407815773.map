{"version":3,"sources":["src\\containers\\PostList.js"],"names":["PostListContainer","props","readList","list","loading","failed","propTypes","arrayOf","object","isRequired","limit","number","bool","func","defaultProps","mapStateToProps","getList","state","mapDispatchToProps","dispatch","_limit"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;IAEMA,iB;;;;;;;;;;;yCAaiB;AACnB,WAAKC,KAAL,CAAWC,QAAX;AACD;;;6BAEQ;AAAA,mBAC2B,KAAKD,KADhC;AAAA,UACCE,IADD,UACCA,IADD;AAAA,UACOC,OADP,UACOA,OADP;AAAA,UACgBC,MADhB,UACgBA,MADhB;;AAEP,aAAO,oDAAc,EAAEF,UAAF,EAAQC,gBAAR,EAAiBC,cAAjB,EAAd,CAAP;AACD;;;;;;AApBGL,iB,CACGM,S,GAAY;AACjBH,QAAM,oBAAUI,OAAV,CAAkB,oBAAUC,MAA5B,EAAoCC,UADzB;AAEjBC,SAAO,oBAAUC,MAFA;AAGjBP,WAAS,oBAAUQ,IAHF;AAIjBP,UAAQ,oBAAUO,IAJD;AAKjBV,YAAU,oBAAUW,IAAV,CAAeJ;AALR,C;AADfT,iB,CASGc,Y,GAAe;AACpBJ,SAAO;AADa,C;;;AAcxB,IAAMK,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU;AAChCZ,UAAM,wBAAaa,OAAb,CAAqBC,KAArB,EAA4B,OAA5B,EAAqC,wBAAaD,OAAb,CAAqBC,KAArB,EAA4B,OAA5B,CAArC,CAD0B;AAEhCb,aAAS,+BAAUa,KAAV,EAAiB,eAAjB,CAFuB;AAGhCZ,YAAQ,+BAAUY,KAAV,EAAiB,eAAjB;AAHwB,GAAV;AAAA,CAAxB;;AAMA,IAAMC,qBAAqB,SAArBA,kBAAqB,CAACC,QAAD;AAAA,MAAaT,KAAb,QAAaA,KAAb;AAAA,SAA0B;AACnDR,cAAU;AAAA,aAAMiB,SAAS,sCAAwB,OAAxB,EAAiC,EAAEC,QAAQV,KAAV,EAAjC,CAAT,CAAN;AAAA;AADyC,GAA1B;AAAA,CAA3B;;eAIe,yBAAQK,eAAR,EAAyBG,kBAAzB,EAA6ClB,iBAA7C,C;;;;;;;;;;gCAjCTA,iB;;gCAuBAe,e;;gCAMAG,kB","file":"PostList.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { isPending, hasFailed } from 'redux-saga-thunk'\nimport { fromEntities, fromResource } from 'store/selectors'\nimport { resourceListReadRequest } from 'store/actions'\n\nimport { PostList } from 'components'\n\nclass PostListContainer extends Component {\n  static propTypes = {\n    list: PropTypes.arrayOf(PropTypes.object).isRequired,\n    limit: PropTypes.number,\n    loading: PropTypes.bool,\n    failed: PropTypes.bool,\n    readList: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = {\n    limit: 20,\n  }\n\n  componentWillMount() {\n    this.props.readList()\n  }\n\n  render() {\n    const { list, loading, failed } = this.props\n    return <PostList {...{ list, loading, failed }} />\n  }\n}\n\nconst mapStateToProps = state => ({\n  list: fromEntities.getList(state, 'posts', fromResource.getList(state, 'posts')),\n  loading: isPending(state, 'postsListRead'),\n  failed: hasFailed(state, 'postsListRead'),\n})\n\nconst mapDispatchToProps = (dispatch, { limit }) => ({\n  readList: () => dispatch(resourceListReadRequest('posts', { _limit: limit })),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostListContainer)\n"]}