{"version":3,"sources":["src\\server.js"],"names":["renderApp","store","context","location","sheet","app","collectStyles","renderHtml","serverState","initialState","content","styles","getStyleElement","global","assets","state","props","html","use","static","resolve","process","cwd","req","res","next","url","api","create","then","status","redirect","getState","send","catch","err","console","error","listen","boldBlue","text","info"],"mappings":"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","file":"server.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["/* eslint-disable no-console */\r\nimport 'babel-polyfill'\r\nimport path from 'path'\r\nimport express from 'express'\r\nimport React from 'react'\r\nimport serialize from 'serialize-javascript'\r\nimport { ServerStyleSheet } from 'styled-components'\r\nimport { renderToStaticMarkup } from 'react-dom/server'\r\nimport { Provider } from 'react-redux'\r\nimport { StaticRouter } from 'react-router'\r\nimport { renderToString } from 'react-router-server'\r\n\r\nimport { port, host, basename } from 'config'\r\nimport configureStore from 'store/configure'\r\nimport api from 'services/api'\r\nimport App from 'components/App'\r\nimport Html from 'components/Html'\r\nimport Error from 'components/Error'\r\n\r\nconst renderApp = ({\r\n  store, context, location, sheet,\r\n}) => {\r\n  const app = sheet.collectStyles((\r\n    <Provider store={store}>\r\n      <StaticRouter basename={basename} context={context} location={location}>\r\n        <App />\r\n      </StaticRouter>\r\n    </Provider>\r\n  ))\r\n  return renderToString(app)\r\n}\r\n\r\nconst renderHtml = ({\r\n  serverState, initialState, content, sheet,\r\n}) => {\r\n  const styles = sheet.getStyleElement()\r\n  const { assets } = global\r\n  const state = `\r\n    window.__SERVER_STATE__ = ${serialize(serverState)};\r\n    window.__INITIAL_STATE__ = ${serialize(initialState)};\r\n  `\r\n  const props = {\r\n    styles, assets, state, content,\r\n  }\r\n  const html = <Html {...props} />\r\n  return `<!doctype html>\\n${renderToStaticMarkup(html)}`\r\n}\r\n\r\nconst app = express()\r\n\r\napp.use(basename, express.static(path.resolve(process.cwd(), 'dist/public')))\r\n\r\napp.use((req, res, next) => {\r\n  const location = req.url\r\n  const store = configureStore({}, { api: api.create() })\r\n  const context = {}\r\n  const sheet = new ServerStyleSheet()\r\n\r\n  renderApp({\r\n    store, context, location, sheet,\r\n  }).then(({ state: serverState, html: content }) => {\r\n    if (context.status) {\r\n      res.status(context.status)\r\n    }\r\n    if (context.url) {\r\n      res.redirect(context.url)\r\n    } else {\r\n      const initialState = store.getState()\r\n      res.send(renderHtml({\r\n        serverState, initialState, content, sheet,\r\n      }))\r\n    }\r\n  }).catch(next)\r\n})\r\n\r\napp.use((err, req, res, next) => {\r\n  const sheet = new ServerStyleSheet()\r\n  const content = renderToStaticMarkup(sheet.collectStyles(<Error />))\r\n  res.status(500).send(renderHtml({ content, sheet }))\r\n  console.error(err)\r\n  next(err)\r\n})\r\n\r\napp.listen(port, (error) => {\r\n  const boldBlue = text => `\\u001b[1m\\u001b[34m${text}\\u001b[39m\\u001b[22m`\r\n  if (error) {\r\n    console.error(error)\r\n  } else {\r\n    console.info(`Server is running at ${boldBlue(`http://${host}:${port}${basename}/`)}`)\r\n  }\r\n})\r\n"]}