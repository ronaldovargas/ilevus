{"version":3,"sources":["src\\components\\molecules\\Modal\\index.js"],"names":["overlayStyles","ModalBox","hasHeader","Header","header","StyledHeading","Content","div","StyledReactModal","className","props","Modal","children","title","closeable","onClose","reverse","propTypes","node","string","bool","func","isRequired"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;;;;;AAEA;;AAMA,IAAMA,kVAAN;;AAkBA,IAAMC,WAAW,qDAAX;AAAA;AAAA,kyBAIW,uBAAK,SAAL,CAJX,EAMgB,0BAAQ,WAAR,EAAqB,CAArB,EAAwB,IAAxB,CANhB,EAQK,0BAAQ,WAAR,EAAqB,CAArB,CARL,EAqBW;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SAAmBA,YAAY,CAAZ,GAAgB,MAAnC;AAAA,CArBX,CAAN;;AAkCA,IAAMC,SAAS,2BAAOC,MAAhB;AAAA;AAAA,8GAAN;;AASA,IAAMC,gBAAgB,oDAAhB;AAAA;AAAA,0GAAN;;AAOA,IAAMC,UAAU,2BAAOC,GAAjB;AAAA;AAAA,yEAAN;;AAMA,IAAMC,mBAAmB,gCAAO;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,MAAiBC,KAAjB;;AAAA,SAC9B,8BAAC,QAAD,aAAU,kBAAkBD,SAA5B,EAAuC,gBAAgB,GAAvD,IAAgEC,KAAhE,EAD8B;AAAA,CAAP,CAAnB;AAAA;AAAA,aAEDV,aAFC,CAAN;;AAIA,IAAMW,QAAQ,SAARA,KAAQ,QAER;AAAA,MADJC,QACI,SADJA,QACI;AAAA,MADMC,KACN,SADMA,KACN;AAAA,MADaC,SACb,SADaA,SACb;AAAA,MADwBC,OACxB,SADwBA,OACxB;AAAA,MADoCL,KACpC;;AACJ,MAAMR,YAAYW,SAASC,SAA3B;AACA,SACE;AAAC,oBAAD;AAAA;AACE,oBAAcD,SAAS,OADzB;AAEE,sBAAgBE,OAFlB;AAGE,iBAAWb;AAHb,OAIMQ,KAJN;AAMGR,iBACC;AAAC,YAAD;AAAA;AACE;AAAC,qBAAD;AAAA,UAAe,OAAO,CAAtB,EAAyB,SAASQ,MAAMM,OAAxC;AAAkDH;AAAlD,OADF;AAEGC,mBAAa,wDAAY,MAAK,OAAjB,EAAyB,SAASC,OAAlC,EAA2C,SAAQ,OAAnD,EAA2D,aAA3D;AAFhB,KAPJ;AAYE;AAAC,aAAD;AAAA;AACGH;AADH;AAZF,GADF;AAkBD,CAtBD;;AAwBAD,MAAMM,SAAN,GAAkB;AAChBL,YAAU,oBAAUM,IADJ;AAEhBL,SAAO,oBAAUM,MAFD;AAGhBL,aAAW,oBAAUM,IAHL;AAIhBJ,WAAS,oBAAUI,IAJH;AAKhBL,WAAS,oBAAUM,IAAV,CAAeC;AALR,CAAlB;;eAQeX,K;;;;;;;;;gCA9GTX,a;;gCAkBAC,Q;;gCAkCAE,M;;gCASAE,a;;gCAOAC,O;;gCAMAE,gB;;gCAIAG,K","file":"index.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled, { css, injectGlobal } from 'styled-components'\r\nimport ReactModal from 'react-modal'\r\nimport { font, palette } from 'styled-theme'\r\n\r\nimport { Heading, IconButton } from 'components'\r\n\r\ninjectGlobal`\r\n  body.ReactModal__Body--open {\r\n    overflow: hidden;\r\n  }\r\n`\r\n\r\nconst overlayStyles = css`\r\n  position: fixed;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  top: 0;\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  z-index: 9999;\r\n  transition: opacity 250ms ease-in-out;\r\n  opacity: 0;\r\n  &[class*=\"after-open\"] {\r\n    opacity: 1;\r\n  }\r\n  &[class*=\"before-close\"] {\r\n    opacity: 0;\r\n  }\r\n`\r\n\r\nconst ModalBox = styled(ReactModal)`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: ${font('primary')};\r\n  font-size: 1rem;\r\n  background-color: ${palette('grayscale', 0, true)};\r\n  border-radius: 0.125em;\r\n  color: ${palette('grayscale', 0)};\r\n  top: calc(50% - 1rem);\r\n  left: calc(50% - 1rem);\r\n  right: auto;\r\n  bottom: auto;\r\n  margin: 1rem calc(-50% + 1rem) 1rem 1rem;\r\n  transform: translate(-50%, 100%);\r\n  transition: transform 250ms ease-in-out;\r\n  outline: none;\r\n  box-sizing: border-box;\r\n  min-width: 320px;\r\n  max-width: calc(640px - 1rem);\r\n  max-height: calc(100% - 1rem);\r\n  padding-top: ${({ hasHeader }) => hasHeader ? 0 : '1rem'};\r\n  @media screen and (max-width: 640px) {\r\n    width: calc(100% - 1rem);\r\n    min-width: 0;\r\n  }\r\n  &[class*=\"after-open\"] {\r\n    transform: translate(-50%, -50%);\r\n  }\r\n  &[class*=\"before-close\"] {\r\n    transform: translate(-50%, 100%);\r\n  }\r\n`\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  > *:first-child {\r\n    flex: 1;\r\n  }\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 0 1rem 0 0;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n`\r\n\r\nconst Content = styled.div`\r\n  overflow: auto;\r\n  padding: 0 1rem;\r\n  margin-bottom: 1rem;\r\n`\r\n\r\nconst StyledReactModal = styled(({ className, ...props }) => (\r\n  <ModalBox overlayClassName={className} closeTimeoutMS={250} {...props} />\r\n))`${overlayStyles}`\r\n\r\nconst Modal = ({\r\n  children, title, closeable, onClose, ...props\r\n}) => {\r\n  const hasHeader = title || closeable\r\n  return (\r\n    <StyledReactModal\r\n      contentLabel={title || 'Modal'}\r\n      onRequestClose={onClose}\r\n      hasHeader={hasHeader}\r\n      {...props}\r\n    >\r\n      {hasHeader &&\r\n        <Header>\r\n          <StyledHeading level={2} reverse={props.reverse}>{title}</StyledHeading>\r\n          {closeable && <IconButton icon=\"close\" onClick={onClose} palette=\"white\" reverse />}\r\n        </Header>\r\n      }\r\n      <Content>\r\n        {children}\r\n      </Content>\r\n    </StyledReactModal>\r\n  )\r\n}\r\n\r\nModal.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  closeable: PropTypes.bool,\r\n  reverse: PropTypes.bool,\r\n  onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal\r\n"]}