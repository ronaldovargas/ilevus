{"version":3,"sources":["legacy\\jsx\\core\\view\\admin\\AdminPanelModerationAds.jsx"],"names":["React","require","Link","Toastr","AdStore","SystemStore","UserSession","LoadingGauge","Messages","router_test","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","loading","ads","countPreviews","time","h","m","s","seconds","timer","componentDidMount","me","on","setState","state","startTimer","dispatch","action","ACTION_RETRIEVE_MODERATIONS_ADS","data","config","ACTION_RETRIEVE_DEFINITIONS","ACTION_COUNT_PREVIEWS_MODERATION","renderAd","context","push","componentWillUnmount","off","clearInterval","saveAdModeration","Status","event","preventDefault","ACTION_SAVE_MODERATION","Id","secondsToTime","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","ceil","obj","toString","length","setInterval","countDown","cancel","ACTION_LEAVE_MODERATION","catchModeration","adId","ACTION_CATCH_MODERATION","renderStartModeration","get","renderCountModerations","d","Date","setMonth","getMonth","replace","dailyCount","monthCount","prevMonthCount","Headline","JSON","parse","definitions","UrlRetriviedAds","ImageDesktop","width","ImageMobile","marginTop","wordWrap","borderLeft","paddingTop","bind","saving","marginBottom","marginLeft","render"],"mappings":"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","file":"AdminPanelModerationAds.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["var React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar AdStore = require(\"ilevus/jsx/core/store/Ad.jsx\");\r\n\r\nvar SystemStore = require(\"ilevus/jsx/core/store/System.jsx\");\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n//var DateUtils = require(\"ilevus/jsx/core/util/DateUtils.jsx\");\r\n\r\n\r\nvar router_test = require(\"react-router\");\r\n\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            loading: true,\r\n            ads: null,\r\n            countPreviews: null,\r\n            time: { h: \"00\", m: \"05\", s: \"00\"},\r\n            seconds: 300,\r\n            timer: 0\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        AdStore.on(\"retrieve-moderation-ads\", (ads) => {\r\n            me.setState({\r\n                ads: ads,\r\n                loading: false\r\n            });\r\n\r\n            if (this.state.ads) {\r\n                //Inicia a Contagem\r\n                this.startTimer();\r\n            }\r\n\r\n        }, me);\r\n        AdStore.dispatch({\r\n            action: AdStore.ACTION_RETRIEVE_MODERATIONS_ADS,\r\n            data: {}\r\n        });\r\n\r\n        SystemStore.on(\"retrieve-definition-config\", (config) => {\r\n            me.setState({\r\n                loading: false,\r\n                config: config\r\n            });\r\n\r\n        }, me);\r\n        SystemStore.dispatch({\r\n            action: SystemStore.ACTION_RETRIEVE_DEFINITIONS\r\n        });\r\n\r\n        AdStore.on(\"count-previews-moderation-ad\", (countPreviews) => {\r\n            me.setState({\r\n                loading: false,\r\n                countPreviews: countPreviews\r\n            });\r\n        }, me);\r\n        AdStore.dispatch({\r\n            action: AdStore.ACTION_COUNT_PREVIEWS_MODERATION\r\n        });\r\n\r\n        AdStore.on(\"save-moderation-ad\", () => {\r\n            AdStore.dispatch({\r\n                action: AdStore.ACTION_COUNT_PREVIEWS_MODERATION,\r\n                data: {}\r\n            });\r\n\r\n            AdStore.dispatch({\r\n                action: AdStore.ACTION_RETRIEVE_MODERATIONS_ADS,\r\n                data: {}\r\n            });\r\n            this.renderAd();\r\n            \r\n        }, me);\r\n\r\n        AdStore.on(\"leave-moderation-ad\", () => {\r\n            me.context.router.push(\"/admin/home\");\r\n        }, me);        \r\n    },\r\n    componentWillUnmount() {\r\n        SystemStore.off(null, null, this);\r\n        AdStore.off(null, null, this);\r\n        clearInterval(this.state.timer);\r\n    },\r\n\r\n    saveAdModeration(Status) {\r\n        event.preventDefault();\r\n\r\n        AdStore.dispatch({\r\n            action: AdStore.ACTION_SAVE_MODERATION,\r\n            data: {\r\n                Id: this.state.ads.Id,\r\n                Status: Status\r\n            }\r\n        });\r\n    },\r\n\r\n    secondsToTime(secs){\r\n        let hours = Math.floor(secs / (60 * 60));\r\n\r\n        let divisor_for_minutes = secs % (60 * 60);\r\n        let minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n        let divisor_for_seconds = divisor_for_minutes % 60;\r\n        let seconds = Math.ceil(divisor_for_seconds);\r\n\r\n        let obj = {\r\n            \"h\": (hours.toString().length == 1 ? \"0\" + hours : hours),\r\n            \"m\": (minutes.toString().length == 1 ? \"0\" + minutes : minutes),\r\n            \"s\": (seconds.toString().length == 1 ? \"0\" + seconds : seconds)\r\n        };\r\n        return obj;\r\n    },\r\n\r\n    startTimer() {\r\n        if (this.state.timer == 0) {\r\n            this.state.timer = setInterval(this.countDown, 1000);\r\n        }\r\n    },\r\n\r\n    countDown() {\r\n        // Remove one second, set state so a re-render happens.\r\n        let seconds = this.state.seconds - 1;\r\n        this.setState({\r\n            time: this.secondsToTime(seconds),\r\n            seconds: seconds,\r\n        });\r\n    \r\n        // Verifica se acabou\r\n        if (seconds == 0) { \r\n            clearInterval(this.state.timer);\r\n            this.cancel();\r\n        }\r\n    },\r\n\r\n    cancel() {\r\n        AdStore.dispatch({\r\n            action: AdStore.ACTION_LEAVE_MODERATION,\r\n            data: {\r\n                Id: this.state.ads.Id\r\n            }\r\n        });\r\n        \r\n    },\r\n    \r\n    catchModeration(adId) {\r\n        AdStore.dispatch({\r\n            action: AdStore.ACTION_CATCH_MODERATION,\r\n            data: {\r\n                Id: adId,\r\n                Status: \"OnAnalysing\"\r\n            }\r\n        });\r\n    },\r\n\r\n    renderStartModeration() {\r\n        return (\r\n            <div className=\"row\">\r\n                <input className=\"ilv-btn ilv-btn-lg ilv-btn-success\" id=\"btnStartModeration\" type=\"button\" value={Messages.get(\"LabelStart\")} onClick={this.renderAd()} />\r\n            </div>\r\n            );\r\n    },\r\n\r\n    renderCountModerations() {\r\n        var d = new Date();\r\n        d.setMonth(d.getMonth() - 1);\r\n        \r\n        return (<strong className=\"pull-right\">\r\n                    {Messages.get(\"LabelDailyDoneModeration\").replace(\"{0}\", (this.state.countPreviews ? this.state.countPreviews.dailyCount : 0))} / \r\n                    {Messages.get(\"LabelMonthDoneModeration\").replace(\"{0}\", (this.state.countPreviews ? this.state.countPreviews.monthCount : 0))} / \r\n                    {Messages.get(\"LabelPrevMonthDoneModeration\").replace(\"{0}\", this.state.countPreviews ? this.state.countPreviews.prevMonthCount : 0)}\r\n                </strong>);\r\n    },\r\n\r\n    renderAd() {\r\n        if (!this.state.ads) {\r\n            return <i>Nenhum anúncio a ser moderado</i>;\r\n        }\r\n        else {\r\n\r\n        return (<form onSubmit={this.saveAdModeration}>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-9\">\r\n                        <div className=\"ilv-form-group\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelHeadline\")}</label>\r\n                            <span >{this.state.ads ? this.state.ads.Headline : \"\" }</span>\r\n                        </div>\r\n\r\n                        <div className=\"row\">\r\n                            <div className=\"ilv-form-group col-6\">\r\n                                <label className=\"ilv-form-label\">{Messages.get(\"LabelAdImageDesktop\")}</label>\r\n                                <labal id=\"lbl_image_desktop\">{this.state.ads ? <img src={(this.state.config ? JSON.parse(this.state.config.definitions).UrlRetriviedAds : \"\") + this.state.ads.ImageDesktop} style={{ width: \"150px\" }} /> : \"\"}</labal>\r\n                            </div>\r\n\r\n                            <div className=\"ilv-form-group col-6\">\r\n                                <label className=\"ilv-form-label\">{Messages.get(\"LabelAdImageMobile\")}</label>\r\n                                <labal id=\"lbl_image_mobile\">{this.state.ads ? <img src={(this.state.config ? JSON.parse(this.state.config.definitions).UrlRetriviedAds : \"\") + this.state.ads.ImageMobile} style={{ width: \"150px\" }} /> : \"\"}</labal>\r\n\r\n                                <div className=\"ilv-form-group\" style={{ marginTop: \"15px\"}}>\r\n                                    <label className=\"ilv-form-label\">\r\n                                        {Messages.get(\"LabelAdUrl\")}: <a href={this.state.ads ? this.state.ads.Link : \"\"} target=\"_blank\" style={{wordWrap: \"break-word\"}}>{this.state.ads ? this.state.ads.Link : \"\"}</a>\r\n                                    </label>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-3\" style={{borderLeft: \"1px solid #cfd7e6\", paddingTop: \"25px\"}}>\r\n                        <h4>Tempo: <br />{this.state.time.m}:{this.state.time.s}</h4>\r\n\r\n                        <input className=\"ilv-btn ilv-btn-lg ilv-btn-success\" type=\"button\" value={Messages.get(\"LabelAdApproved\")} onClick={this.saveAdModeration.bind(this, \"Approved\")} disabled={this.state.saving} style={{ marginBottom: \"5px\", width: \"100%\" }} />\r\n                        <input className=\"ilv-btn ilv-btn-lg ilv-btn-destructive\" type=\"button\" value={Messages.get(\"LabelAdDenied\")} onClick={this.saveAdModeration.bind(this, \"Denied\")} disabled={this.state.saving} style={{ marginLeft: \"0px\", marginBottom: \"5px\", width: \"100%\" }} />\r\n                        <input className=\"ilv-btn ilv-btn-lg ilv-btn-default\" type=\"button\" value={Messages.get(\"LabelCancel\")} onClick={this.cancel} style={{ marginLeft: \"0px\", width: \"100%\" }} />\r\n\r\n                    </div>\r\n                </div>\r\n            </form>);\r\n        }\r\n    },\r\n    \r\n    render() {\r\n        if (this.state.loading)\r\n            return <LoadingGauge />;\r\n        \r\n        return (<div>\r\n            <div className=\"ilv-card\">\r\n                <div className=\"ilv-card-header\">\r\n                    <strong>\r\n                        {Messages.get(\"LabelModerationAds\")}\r\n                    </strong>\r\n                    {this.renderCountModerations()}\r\n                </div>\r\n                <div className=\"ilv-card-body\">\r\n                    {this.renderAd()}\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n});\r\n\r\n"]}