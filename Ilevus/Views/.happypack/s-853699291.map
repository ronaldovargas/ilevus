{"version":3,"sources":["legacy\\jsx\\Application.jsx"],"names":["React","require","Router","Route","Link","UserSession","Messages","MainMenu","TopBar","LoadingGauge","Logo","module","exports","createClass","contextTypes","router","PropTypes","object","childContextTypes","admin","bool","messages","getChildContext","get","isAdminLogged","getInitialState","loading","componentWillMount","context","listen","onRouteChange","componentDidMount","me","on","setState","componentWillUnmount","off","route","ga","pathname","perms","length","indexOf","render","state","props","children","getFile"],"mappings":";;AAAA;;;;;;AAMA,IAAIA,QAAQC,QAAQ,OAAR,CAAZ;AACA,IAAIC,SAASD,QAAQ,cAAR,EAAwBC,MAArC;AACA,IAAIC,QAAQF,QAAQ,cAAR,EAAwBE,KAApC;AACA,IAAIC,OAAOH,QAAQ,cAAR,EAAwBG,IAAnC;;AAEA,IAAIC,cAAcJ,QAAQ,uCAAR,CAAlB;;AAEA,IAAIK,WAAWL,QAAQ,mCAAR,CAAf;;AAEA,IAAIM,WAAWN,QAAQ,qCAAR,CAAf;AACA,IAAIO,SAASP,QAAQ,mCAAR,CAAb;;AAEA,IAAIQ,eAAeR,QAAQ,yCAAR,CAAnB;;AAEA,IAAIS,OAAOT,QAAQ,iCAAR,CAAX;;AAEA;;AAEAU,OAAOC,OAAP,GAAiBZ,MAAMa,WAAN,CAAkB;AAAA;;AAC/BC,kBAAc;AACVC,gBAAQf,MAAMgB,SAAN,CAAgBC;AADd,KADiB;AAI/BC,uBAAmB;AACfC,eAAOnB,MAAMgB,SAAN,CAAgBI,IADR;AAEfC,kBAAUrB,MAAMgB,SAAN,CAAgBC;AAFX,KAJY;AAQ/BK,mBAR+B,6BAQb;AACd,eAAO;AACHH,mBAAO,CAACd,YAAYkB,GAAZ,CAAgB,SAAhB,CAAD,IAA+B,KAAKC,aAAL,EADnC;AAEHH,sBAAUf;AAFP,SAAP;AAIH,KAb8B;AAc/BmB,mBAd+B,6BAcb;AACd,eAAO;AACHC,qBAASrB,YAAYkB,GAAZ,CAAgB,SAAhB;AADN,SAAP;AAGH,KAlB8B;AAmB/BI,sBAnB+B,gCAmBV;AACjB,aAAKC,OAAL,CAAab,MAAb,CAAoBc,MAApB,CAA2B,KAAKC,aAAhC;AACH,KArB8B;AAsB/BC,qBAtB+B,+BAsBX;AAChB,YAAIC,KAAK,IAAT;AACA3B,oBAAY4B,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC3BD,eAAGE,QAAH,CAAY,EAAER,SAAS,KAAX,EAAZ;AACH,SAFD,EAEGM,EAFH;AAGH,KA3B8B;AA4B/BG,wBA5B+B,kCA4BR;AACnB9B,oBAAY+B,GAAZ,CAAgB,IAAhB,EAAsB,IAAtB,EAA4B,IAA5B;AACH,KA9B8B;AAgC/BN,iBAhC+B,yBAgCjBO,KAhCiB,EAgCV;AACjB,YAAI,OAAOC,EAAP,IAAa,UAAjB,EAA6B;AACzBA,eAAG,MAAH,EAAW,UAAX,EAAuBD,MAAME,QAA7B;AACH;AACJ,KApC8B;AAsC/Bf,iBAtC+B,2BAsCf;AACZ,YAAIgB,QAAQnC,YAAYkB,GAAZ,CAAgB,aAAhB,CAAZ;AACA,YAAIlB,YAAYkB,GAAZ,CAAgB,QAAhB,KAA6BiB,KAA7B,IAAsCA,MAAMC,MAAN,GAAe,CAArD,IAA0DD,MAAME,OAAN,CAAc,KAAd,KAAwB,CAAtF,EAAyF;AACrF,mBAAO,IAAP;AACH;AACD,eAAO,KAAP;AACH,KA5C8B;;;AA8C/BC,YAAQ,kBAAY;AAChB,YAAI,KAAKC,KAAL,CAAWlB,OAAf,EAAwB;AACpB,mBAAO,oBAAC,YAAD,OAAP;AACH;AACD,eAAQ;AAAA;AAAA;AACb,gCAAC,MAAD,OADa;AAEJ;AAAA;AAAA,kBAAM,WAAU,cAAhB,EAA+B,MAAK,MAApC;AACK,qBAAKmB,KAAL,CAAWC,QADhB;AAEI;AAAA;AAAA,sBAAQ,WAAU,eAAlB;AACI;AAAA;AAAA,0BAAK,WAAU,iCAAf;AACI;AAAA;AAAA,8BAAK,WAAU,WAAf,EAA2B,IAAG,eAA9B;AACKxC,qCAASyC,OAAT,CAAiBzC,SAASiB,GAAT,CAAa,mBAAb,CAAjB,EAAoD,eAApD;AADL;AADJ;AADJ;AAFJ;AAFI,SAAR;AAaH;AA/D8B,CAAlB,CAAjB;;;;;;;;kCAjBIrB,M;;kCACAC,K;;kCACAC,I","file":"Application.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["/**\r\n    Este componente define a estrutura geral da aplicação. Ele é renderizado pela\r\n    rota raiz e renderiza os componentes aninhados da forma necessária.\r\n    Ele é análogo ao _Layout.cshtml em uma aplicação ASP.NET convencional.\r\n*/\r\n\r\nvar React = require(\"react\");\r\nvar Router = require('react-router').Router;\r\nvar Route = require('react-router').Route;\r\nvar Link = require(\"react-router\").Link;\r\n\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nvar MainMenu = require(\"ilevus/jsx/core/widget/MainMenu.jsx\");\r\nvar TopBar = require(\"ilevus/jsx/core/widget/TopBar.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\n\r\nvar Logo = require('ilevus/img/ilevus-logo-20px.png');\r\n\r\n//var ConteudoRodape = require(\"ilevus/jsx/core/view/FooterContent.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    childContextTypes: {\r\n        admin: React.PropTypes.bool,\r\n        messages: React.PropTypes.object\r\n    },\r\n    getChildContext() {\r\n        return {\r\n            admin: !UserSession.get(\"loading\") && this.isAdminLogged(),\r\n            messages: Messages\r\n        };\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            loading: UserSession.get(\"loading\")\r\n        };\r\n    },\r\n    componentWillMount() {\r\n        this.context.router.listen(this.onRouteChange);\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        UserSession.on(\"loaded\", () => {\r\n            me.setState({ loading: false });\r\n        }, me);\r\n    },\r\n    componentWillUnmount() {\r\n        UserSession.off(null, null, this);\r\n    },\r\n\r\n    onRouteChange(route) {\r\n        if (typeof ga == 'function') {\r\n            ga('send', 'pageview', route.pathname);\r\n        }\r\n    },\r\n\r\n    isAdminLogged() {\r\n        var perms = UserSession.get(\"permissions\");\r\n        if (UserSession.get(\"logged\") && perms && perms.length > 0 && perms.indexOf(\"All\") >= 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n\r\n    render: function () {\r\n        if (this.state.loading) {\r\n            return <LoadingGauge />;\r\n        }\r\n        return (<div>\r\n\t\t\t<TopBar />\r\n            <main className=\"page-content\" role=\"main\">\r\n                {this.props.children}\r\n                <footer className=\"ilv-lp-footer\">\r\n                    <div className=\"footer-top padd-top padd-bottom\">\r\n                        <div className=\"container\" id=\"FooterContent\">\r\n                            {Messages.getFile(Messages.get(\"TextFooterContent\"), \"FooterContent\")}\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n\t\t    </main>\r\n  \t    </div>);\r\n    }\r\n});\r\n"]}