{"version":3,"sources":["src\\store\\configure.js"],"names":["devtools","window","devToolsExtension","fn","configureStore","initialState","services","sagaMiddleware","enhancers","store","sagaTask","run","module","hot","accept","nextReducer","require","default","replaceReducer","nextSagas","cancel","done","then"],"mappings":";;;;;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;oMANA;;;AAQA,IAAMA,WAAW,sCAAsBC,OAAOC,iBAA7B,GACbD,OAAOC,iBADM,GAEb;AAAA,SAAM;AAAA,WAAMC,EAAN;AAAA,GAAN;AAAA,CAFJ;;AAIA,IAAMC,iBAAiB,SAAjBA,cAAiB,CAACC,YAAD,EAAiC;AAAA,MAAlBC,QAAkB,uEAAP,EAAO;;AACtD,MAAMC,iBAAiB,0BAAvB;;AAEA,MAAMC,YAAY,CAChB,0FAEED,cAFF,GADgB,EAKhBP,UALgB,CAAlB;;AAQA,MAAMS,QAAQ,2CAAqBJ,YAArB,EAAmC,gCAAWG,SAAX,CAAnC,CAAd;AACA,MAAIE,WAAWH,eAAeI,GAAf,kBAA0BL,QAA1B,CAAf;;AAEA,MAAIM,OAAOC,GAAX,EAAgB;AACdD,WAAOC,GAAP,CAAWC,MAAX,CAAkB,WAAlB,EAA+B,YAAM;AACnC,UAAMC,cAAcC,QAAQ,WAAR,EAAqBC,OAAzC;AACAR,YAAMS,cAAN,CAAqBH,WAArB;AACD,KAHD;AAIAH,WAAOC,GAAP,CAAWC,MAAX,CAAkB,SAAlB,EAA6B,YAAM;AACjC,UAAMK,YAAYH,QAAQ,SAAR,EAAmBC,OAArC;AACAP,eAASU,MAAT;AACAV,eAASW,IAAT,CAAcC,IAAd,CAAmB,YAAM;AACvBZ,mBAAWH,eAAeI,GAAf,CAAmBQ,SAAnB,EAA8Bb,QAA9B,CAAX;AACD,OAFD;AAGD,KAND;AAOD;;AAED,SAAOG,KAAP;AACD,CA7BD;;eA+BeL,c;;;;;;;;;gCAnCTJ,Q;;gCAIAI,c","file":"configure.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["// https://github.com/diegohaz/arc/wiki/Redux-modules\r\nimport { createStore, applyMiddleware, compose } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { isDev, isBrowser } from 'config'\r\nimport middlewares from './middlewares'\r\nimport reducer from './reducer'\r\nimport sagas from './sagas'\r\n\r\nconst devtools = isDev && isBrowser && window.devToolsExtension\r\n  ? window.devToolsExtension\r\n  : () => fn => fn\r\n\r\nconst configureStore = (initialState, services = {}) => {\r\n  const sagaMiddleware = createSagaMiddleware()\r\n\r\n  const enhancers = [\r\n    applyMiddleware(\r\n      ...middlewares,\r\n      sagaMiddleware\r\n    ),\r\n    devtools(),\r\n  ]\r\n\r\n  const store = createStore(reducer, initialState, compose(...enhancers))\r\n  let sagaTask = sagaMiddleware.run(sagas, services)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('./reducer', () => {\r\n      const nextReducer = require('./reducer').default\r\n      store.replaceReducer(nextReducer)\r\n    })\r\n    module.hot.accept('./sagas', () => {\r\n      const nextSagas = require('./sagas').default\r\n      sagaTask.cancel()\r\n      sagaTask.done.then(() => {\r\n        sagaTask = sagaMiddleware.run(nextSagas, services)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\nexport default configureStore\r\n"]}