{"version":3,"sources":["legacy\\jsx\\core\\widget\\coaching\\wheeloflife\\Tasks.jsx"],"names":["_","require","S","moment","React","WheelOfLifeStore","Messages","module","exports","createClass","propTypes","process","PropTypes","object","isRequired","session","sessionIndex","number","tool","getDefaultProps","getInitialState","adding","saving","componentDidMount","me","on","componentWillUnmount","off","tweakAdding","event","preventDefault","setState","state","saveTask","dispatch","action","ACTION_SAVE_TASK","data","ProcessId","props","Id","Session","Description","refs","value","Field","Deadline","Tasks","push","Label","editTask","index","editing","updateTask","ACTION_UPDATE_TASK","Task","cancelEditing","removeTask","ACTION_REMOVE_TASK","splice","forceUpdate","renderTasks","length","get","map","task","renderEditForm","substr","format","Status","bind","Fields","field","render"],"mappings":"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","file":"Tasks.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar _ = require(\"underscore\");\r\nvar S = require(\"string\");\r\nvar moment = require(\"moment\");\r\nvar React = require('react');\r\n\r\nvar WheelOfLifeStore = require(\"ilevus/jsx/core/store/coaching/WheelOfLife.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    propTypes: {\r\n        process: React.PropTypes.object.isRequired,\r\n        session: React.PropTypes.object.isRequired,\r\n        sessionIndex: React.PropTypes.number.isRequired,\r\n        tool: React.PropTypes.object.isRequired,\r\n    },\r\n    getDefaultProps() {\r\n        return {\r\n        };\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            adding: false,\r\n            saving: false,\r\n        };\r\n    },\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        WheelOfLifeStore.on(\"save-task\", () => {\r\n\r\n        }, me);\r\n    },\r\n    componentWillUnmount() {\r\n        WheelOfLifeStore.off(null, null, this);\r\n    },\r\n\r\n    tweakAdding(event) {\r\n        event && event.preventDefault();\r\n        this.setState({adding: !this.state.adding});\r\n    },\r\n\r\n    saveTask(event) {\r\n        event && event.preventDefault();\r\n        WheelOfLifeStore.dispatch({\r\n            action: WheelOfLifeStore.ACTION_SAVE_TASK,\r\n            data: {\r\n                ProcessId: this.props.process.Id,\r\n                Session: this.props.sessionIndex,\r\n                Description: this.refs['task-description'].value,\r\n                Field: this.refs['task-field'].value,\r\n                Deadline: this.refs['task-deadline'].value,\r\n            }\r\n        });\r\n        this.props.tool.Tasks.push({\r\n            Label: this.refs['task-description'].value,\r\n            Field: this.refs['task-field'].value,\r\n            Deadline: this.refs['task-deadline'].value,\r\n        });\r\n        this.tweakAdding();\r\n    },\r\n\r\n    editTask(index, event) {\r\n        event && event.preventDefault();\r\n        this.setState({ editing: index });\r\n    },\r\n    updateTask(index, event) {\r\n        event && event.preventDefault();\r\n        WheelOfLifeStore.dispatch({\r\n            action: WheelOfLifeStore.ACTION_UPDATE_TASK,\r\n            data: {\r\n                ProcessId: this.props.process.Id,\r\n                Session: this.props.sessionIndex,\r\n                Task: index,\r\n                Description: this.refs['edit-task-description'].value,\r\n                Field: this.refs['edit-task-field'].value,\r\n                Deadline: this.refs['edit-task-deadline'].value,\r\n            }\r\n        });\r\n        this.props.tool.Tasks[index] = {\r\n            Label: this.refs['edit-task-description'].value,\r\n            Field: this.refs['edit-task-field'].value,\r\n            Deadline: this.refs['edit-task-deadline'].value,\r\n        };\r\n        this.cancelEditing();\r\n    },\r\n    cancelEditing(event) {\r\n        event && event.preventDefault();\r\n        this.setState({editing: null});\r\n    },\r\n\r\n    removeTask(index, event) {\r\n        event && event.preventDefault();\r\n        WheelOfLifeStore.dispatch({\r\n            action: WheelOfLifeStore.ACTION_REMOVE_TASK,\r\n            data: {\r\n                ProcessId: this.props.process.Id,\r\n                Session: this.props.sessionIndex,\r\n                Task: index,\r\n            }\r\n        });\r\n        this.props.tool.Tasks.splice(index, 1);\r\n        this.forceUpdate();\r\n    },\r\n\r\n    renderTasks() {\r\n        if (this.props.tool.Tasks.length == 0) {\r\n            return (<tr><td colSpan=\"4\" className=\"text-center\">\r\n                <i>{Messages.get(\"TextNoTaskAdded\")}</i>\r\n            </td></tr>);\r\n        }\r\n        return this.props.tool.Tasks.map((task, index) => {\r\n            return (this.state.editing == index ? this.renderEditForm(task, index):<tr key={\"tool-task-\" + index}>\r\n                <td>{task.Label}</td>\r\n                <td>{task.Field}</td>\r\n                <td>{moment(task.Deadline.substr(0, 10)).format(\"DD/MM/Y\")}</td>\r\n                <td className=\"text-right\">\r\n                    {!!this.state.adding || (this.props.session.Status != 5) ? \"\":(<button className=\"ilv-btn ilv-btn-sm ilv-btn-clean mx-0\" title={Messages.get(\"ActionEdit\")} onClick={this.editTask.bind(this, index)}>\r\n                        <i className=\"ilv-icon material-icons md-18\">&#xE3C9;</i>\r\n                    </button>)}\r\n                    {(this.props.session.Status != 5) ? \"\":(<button className=\"ilv-btn ilv-btn-sm ilv-btn-clean mx-0\" title={Messages.get(\"LabelDelete\")} onClick={this.removeTask.bind(this, index)}>\r\n                        <i className=\"ilv-icon material-icons md-18\">&#xE5C9;</i>\r\n                    </button>)};\r\n                </td>\r\n            </tr>);\r\n        });\r\n    },\r\n\r\n    renderEditForm(task, index) {\r\n        return <tr key={\"tool-task-\" + index}><td colSpan=\"4\">\r\n            <form className=\"row\" onSubmit={this.updateTask.bind(this, index)}>\r\n                <div className=\"col\">\r\n                    <input type=\"text\" className=\"ilv-form-control\" placeholder={Messages.get(\"LabelDescription\")} required={true} ref=\"edit-task-description\" defaultValue={task.Label} />\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <select className=\"ilv-form-control\" placeholder={Messages.get(\"LabelDescription\")} required={true} ref=\"edit-task-field\" defaultValue={task.Field}>\r\n                        {this.props.tool.Fields.map((field, index) => {\r\n                            return (<option key={\"task-field-\"+index} value={field.Label}>{field.Label}</option>);\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-2\">\r\n                    <input type=\"date\" className=\"ilv-form-control\" placeholder={Messages.get(\"LabelDescription\")} required={true} ref=\"edit-task-deadline\" defaultValue={task.Deadline.substr(0, 10)} />\r\n                </div>\r\n                <div className=\"col-2 text-right\">\r\n                    <button className=\"ilv-btn ilv-btn-sm ilv-btn-clean\" onClick={this.cancelEditing} title={Messages.get(\"LabelCancel\")}>X</button>\r\n                    <button className=\"ilv-btn ilv-btn-sm ilv-btn-success\" type=\"submit\">{Messages.get(\"LabelSave\")}</button>\r\n                </div>\r\n            </form>\r\n        </td></tr>;\r\n    },\r\n\r\n    render() {\r\n        return (<div className=\"row mb-5\">\r\n            <div className=\"col\">\r\n                <h4>{Messages.get(\"LabelTasks\")}</h4>\r\n                <table className=\"ilv-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>{Messages.get(\"LabelDescription\")}</th>\r\n                            <th width=\"160\">{Messages.get(\"LabelField\")}</th>\r\n                            <th width=\"160\">{Messages.get(\"LabelDeadline\")}</th>\r\n                            <th width=\"140\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTasks()}\r\n\r\n                        {!this.state.adding ? (!!this.state.editing || (this.props.session.Status != 5) ? null:<tr>\r\n                            <td colSpan=\"4\" className=\"text-center\">\r\n                                <a className=\"font-weight-bold\" href=\"javascript:;\" onClick={this.tweakAdding}>+ {Messages.get(\"LabelAddTask\")}</a>\r\n                            </td>\r\n                        </tr>) : (<tr><td colSpan=\"4\">\r\n                            <form className=\"row\" onSubmit={this.saveTask}>\r\n                                <div className=\"col\">\r\n                                    <input type=\"text\" className=\"ilv-form-control\" placeholder={Messages.get(\"LabelDescription\")} required={true} ref=\"task-description\" />\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    <select className=\"ilv-form-control\" placeholder={Messages.get(\"LabelDescription\")} required={true} ref=\"task-field\">\r\n                                        {this.props.tool.Fields.map((field, index) => {\r\n                                            return <option key={\"task-field-\"+index} value={field.Label}>{field.Label}</option>;\r\n                                        })}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"col-2\">\r\n                                    <input type=\"date\" className=\"ilv-form-control\" placeholder={Messages.get(\"LabelDescription\")} required={true} ref=\"task-deadline\" />\r\n                                </div>\r\n                                <div className=\"col-2 text-right\">\r\n                                    <button className=\"ilv-btn ilv-btn-sm ilv-btn-clean\" onClick={this.tweakAdding} title={Messages.get(\"LabelCancel\")}>X</button>\r\n                                    <button className=\"ilv-btn ilv-btn-sm ilv-btn-success\" type=\"submit\">{Messages.get(\"LabelSave\")}</button>\r\n                                </div>\r\n                            </form>\r\n                        </td></tr>)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>);\r\n    }\r\n});"]}