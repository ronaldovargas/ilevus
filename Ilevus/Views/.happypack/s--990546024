
var S = require("string");
var moment = require("moment");
require("ilevus/jsx/vendor/intlTelInput.js");

var React = require("react");
var Link = require("react-router").Link;
var Toastr = require("toastr");

var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");
var FinancialStore = require("ilevus/jsx/core/store/Financial.jsx");

var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");
var Modal = require("ilevus/jsx/core/widget/Modal.jsx");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

var UserIcon = require("ilevus/img/user.png");

module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object
    },
    getInitialState: function getInitialState() {
        return {
            loading: UserSession.get("loading")
        };
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        UserSession.on("loaded", function () {
            me.setState({
                loading: false
            });
        }, me);
    },
    componentWillUnmount: function componentWillUnmount() {
        UserSession.off(null, null, this);
        FinancialStore.off(null, null, this);
    },
    componentDidUpdate: function componentDidUpdate() {},
    suspendSubscription: function suspendSubscription(event) {
        var _this = this;

        event.preventDefault();
        Modal.confirm(Messages.get("TextAreYouSure"), Messages.get("TextSubscriptionSuspensionConfirmation"), function () {
            Modal.hide();
            FinancialStore.dispatch({
                action: FinancialStore.ACTION_SUSPEND_USER_SUBSCRIPTION
            });
            UserSession.get("user").Premium = UserSession.get("user").Premium || {};
            UserSession.get("user").Premium.Suspended = true;
            _this.forceUpdate();
        });
    },
    render: function render() {
        if (this.state.loading) {
            return React.createElement(LoadingGauge, null);
        }
        var user = UserSession.get("user"),
            financial = user.Financial,
            premium = user.Premium ? user.Premium : { Active: false },
            ilevusCode = "Av7ZseP",
            payedUntil = moment(premium.PayedUntil);
        console.log(premium);
        return React.createElement(
            "div",
            null,
            user.IsProfessional ? React.createElement(
                "div",
                { className: "ilv-card mb-5" },
                React.createElement(
                    "div",
                    { className: "ilv-card-body" },
                    React.createElement(
                        "h4",
                        null,
                        Messages.get("LabelIndications")
                    ),
                    React.createElement(
                        "p",
                        null,
                        Messages.get("TextIndicationsExplanation")
                    ),
                    React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col" },
                            Messages.get("LabelIlevusCode"),
                            ": ",
                            React.createElement("input", { readOnly: true, className: "ilv-form-control", value: ilevusCode })
                        ),
                        React.createElement(
                            "div",
                            { className: "col" },
                            Messages.get("LabelSignupLink"),
                            ": ",
                            React.createElement("input", { readOnly: true, className: "ilv-form-control", value: "https://www.ilevus.com/#signup/" + ilevusCode })
                        )
                    )
                )
            ) : "",
            React.createElement(
                "div",
                { className: "row" },
                React.createElement(
                    "div",
                    { className: "col mb-5" },
                    React.createElement(
                        "h4",
                        null,
                        Messages.get("LabelFinancialReports")
                    )
                ),
                React.createElement(
                    "div",
                    { className: "col mb-5" },
                    React.createElement(
                        "h4",
                        null,
                        Messages.get("LabelPremiumMembership"),
                        " ",
                        premium.Active ? React.createElement(
                            "span",
                            { className: "ilv-tag ilv-tag-success" },
                            Messages.get("LabelActive")
                        ) : React.createElement(
                            "span",
                            { className: "ilv-tag ilv-tag-info" },
                            Messages.get("LabelUnactive")
                        )
                    ),
                    user.IsProfessional ? premium.Active ? !premium.Suspended ? React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col col-sm-7" },
                            Messages.get("LabelNextInvoice"),
                            ": ",
                            payedUntil.format("D/M/Y")
                        ),
                        React.createElement(
                            "div",
                            { className: "col" },
                            React.createElement(
                                "button",
                                { className: "ilv-btn ilv-btn-danger ilv-btn-sm", onClick: this.suspendSubscription },
                                Messages.get("ActionSuspend")
                            )
                        )
                    ) : React.createElement(
                        "div",
                        { className: "row" },
                        React.createElement(
                            "div",
                            { className: "col col-sm-7" },
                            Messages.get("LabelActiveUntil"),
                            ": ",
                            payedUntil.format("D/M/Y")
                        ),
                        React.createElement("div", { className: "col hidden-xs" })
                    ) : React.createElement(
                        Link,
                        { to: "/subscribe", className: "ilv-btn ilv-btn-primary ilv-btn-sm" },
                        Messages.get("LabelBecomePremium")
                    ) : React.createElement(
                        Link,
                        { to: "/become-a-professional" },
                        Messages.get("TextBecomeProfessionalToPremium")
                    )
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/user/Financial.jsx");
}();

;