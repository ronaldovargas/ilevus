{"version":3,"sources":["legacy\\jsx\\core\\widget\\user\\MeetingSchedule.jsx"],"names":["moment","require","React","S","Toastr","UserSession","ScheduleStore","LoadingGauge","MeetingScheduleForm","Modal","Messages","module","exports","createClass","propTypes","user","PropTypes","object","isRequired","getDefaultProps","getInitialState","meetings","begin","day","milliseconds","seconds","minutes","hours","end","today","componentDidMount","me","on","console","log","setState","retrieveMeetings","componentWillUnmount","off","dispatch","action","ACTION_RETRIEVE_MEETINGS","data","UserId","props","get","From","state","format","To","backwardWeek","forwardWeek","bookHour","hour","event","preventDefault","largeModal","onBookMeeting","meeting","hide","remove","success","isHourBooked","i","length","isSame","Begin","renderCalendarForBooking","configs","days","push","interval","Interval","accepts","JSON","parse","HourConfig","hoursEnabled","indexOf","cursor","width","maxWidth","map","idx","enabled","columns","dayIdx","now","booked","antecipated","isSameOrAfter","Antecedence","bind","display","undefined","render"],"mappings":"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","file":"MeetingSchedule.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar moment = require(\"moment\");\r\nvar React = require(\"react\");\r\nvar S = require(\"string\");\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\nvar ScheduleStore = require(\"ilevus/jsx/core/store/Schedule.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\nvar MeetingScheduleForm = require(\"ilevus/jsx/core/widget/user/MeetingScheduleForm.jsx\");\r\nvar Modal = require(\"ilevus/jsx/core/widget/Modal.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    propTypes: {\r\n        user: React.PropTypes.object.isRequired\r\n    },\r\n    getDefaultProps() {\r\n        return {\r\n            user: null\r\n        };\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            meetings: null,\r\n            begin: moment().day(0).milliseconds(0).seconds(0).minutes(0).hours(0),\r\n            end: moment().day(6).milliseconds(999).seconds(59).minutes(59).hours(23),\r\n            today: moment()\r\n        };\r\n    },\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n\r\n        ScheduleStore.on(\"retrieve-meetings\", (meetings) => {\r\n            console.log(meetings);\r\n            me.setState({\r\n                meetings: meetings\r\n            });\r\n        }, me);\r\n\r\n        this.retrieveMeetings();\r\n    },\r\n    componentWillUnmount() {\r\n        ScheduleStore.off(null, null, this);\r\n    },\r\n\r\n    retrieveMeetings() {\r\n        ScheduleStore.dispatch({\r\n            action: ScheduleStore.ACTION_RETRIEVE_MEETINGS,\r\n            data: {\r\n                UserId: this.props.user.get(\"Id\"),\r\n                From: this.state.begin.format(\"YYYY-MM-DTHH:mm:ssZ\"),\r\n                To: this.state.end.format(\"YYYY-MM-DTHH:mm:ssZ\")\r\n            }\r\n        });\r\n    },\r\n\r\n    backwardWeek() {\r\n        this.setState({\r\n            meetings: [],\r\n            begin: this.state.begin.day(-7),\r\n            end: this.state.end.day(-1)\r\n        });\r\n        this.retrieveMeetings();\r\n    },\r\n    forwardWeek() {\r\n        this.setState({\r\n            meetings: [],\r\n            begin: this.state.begin.day(7),\r\n            end: this.state.end.day(13)\r\n        });\r\n        this.retrieveMeetings();\r\n    },\r\n\r\n    bookHour(hour, event) {\r\n        event && event.preventDefault();\r\n        console.log(hour);\r\n        Modal.largeModal(\r\n            Messages.get(\"LabelBookMeeting\"),\r\n            <MeetingScheduleForm\r\n                                 hour={hour}\r\n                                 user={this.props.user}\r\n                                 onBook={this.onBookMeeting} />\r\n        );\r\n    },\r\n    onBookMeeting(meeting) {\r\n        this.retrieveMeetings();\r\n        Modal.hide();\r\n        Toastr.remove();\r\n        Toastr.success(Messages.get(\"TextBookMeetingSuccess\"));\r\n    },\r\n\r\n    isHourBooked(hour) {\r\n        for (var i = 0; i < this.state.meetings.length; i++) {\r\n            if (hour.isSame(moment(this.state.meetings[i].Begin), 'minute')) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    renderCalendarForBooking() {\r\n        var configs = this.props.user.get(\"ScheduleConfig\");\r\n        var days = [];\r\n        for (var day = 0; day < 7; day++) {\r\n            days.push(moment(this.state.begin).day(day));\r\n        }\r\n        var interval = configs.Interval;\r\n        var accepts = JSON.parse(configs.HourConfig);\r\n        var hoursEnabled = [];\r\n        for (var i = 0; i < accepts.length ; i++) {\r\n            hoursEnabled.push(accepts[i].indexOf(true) >= 0);\r\n        }\r\n        var hour = moment(this.state.begin).hours(0).minutes(0);\r\n\r\n        return (<table className=\"ilv-schedule\">\r\n            <thead>\r\n                <tr>\r\n                    <th onClick={this.backwardWeek}  style={{ cursor: \"pointer\", width: \"45px\", maxWidth: \"45px\" }}>\r\n                        <i className=\"material-icons md-36\">&#xE314;</i>\r\n                    </th>\r\n                    {days.map((day, idx) => {\r\n                        return (<th key={\"day-header-\"+idx}>\r\n                            <div>{day.isSame(this.state.today, \"date\") ?\r\n                                Messages.get(\"LabelToday\")\r\n                                :\r\n                                day.format(\"ddd\")\r\n                            }</div>\r\n                            <div>{day.format(\"D MMM\")}</div>\r\n                        </th>);\r\n                    })}\r\n                    <th onClick={this.forwardWeek} style={{cursor: \"pointer\", width: \"45px\", maxWidth: \"45px\"}}>\r\n                        <i className=\"material-icons md-36\">&#xE5CC;</i>\r\n                    </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {hoursEnabled.map((enabled, idx) => {\r\n                    var columns = accepts[idx].map((day, dayIdx) => {\r\n                        var now = moment();\r\n                        var bookHour = moment(hour).day(dayIdx);\r\n                        var booked = this.isHourBooked(bookHour);\r\n                        var antecipated = bookHour.isSameOrAfter(now.hours(now.hours() + configs.Antecedence), 'minute');\r\n                        return (<td key={\"hour-\" + idx + \"-day-\" + dayIdx}>\r\n                            {day && antecipated && (!booked) ?\r\n                            <a onClick={this.bookHour.bind(this, bookHour)}>\r\n                                {hour.format(\"HH:mm\")}\r\n                            </a>\r\n                            :\"\"\r\n                            }\r\n                        </td>);\r\n                    });\r\n                    hour.minutes(hour.minutes() + interval);\r\n                    return (<tr key={\"hour-row-\" + idx} style={{ display: enabled ? undefined : \"none\" }}>\r\n                        <td></td>\r\n                        {columns}\r\n                        <td></td>\r\n                    </tr>);\r\n                })}\r\n            </tbody>\r\n        </table>);\r\n    },\r\n\r\n    render() {\r\n        if (!this.state.meetings) {\r\n            return <div />;\r\n        }\r\n        return <div>\r\n            {this.renderCalendarForBooking()}\r\n        </div>;\r\n    }\r\n});\r\n"]}