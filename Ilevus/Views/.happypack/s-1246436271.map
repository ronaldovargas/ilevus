{"version":3,"sources":["legacy\\jsx\\core\\widget\\coaching\\SessionTags.jsx"],"names":["_","require","S","React","CoachingStore","Messages","Modal","module","exports","createClass","propTypes","process","PropTypes","object","isRequired","session","sessionIndex","number","isCoach","bool","getDefaultProps","componentDidMount","componentWillReceiveProps","addTag","event","preventDefault","el","refs","tag","value","isEmpty","dispatch","action","ACTION_ADD_TAG","data","ProcessId","props","Id","Session","Tag","s","Tags","push","forceUpdate","removeTag","index","ACTION_REMOVE_TAG","splice","render","tags","get","backgroundColor","map","bind"],"mappings":"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","file":"SessionTags.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar _ = require(\"underscore\");\r\nvar S = require(\"string\");\r\nvar React = require('react');\r\n\r\nvar CoachingStore = require(\"ilevus/jsx/core/store/Coaching.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\nvar Modal = require(\"ilevus/jsx/core/widget/Modal.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    propTypes: {\r\n        process: React.PropTypes.object.isRequired,\r\n        session: React.PropTypes.object.isRequired,\r\n        sessionIndex: React.PropTypes.number.isRequired,\r\n        isCoach: React.PropTypes.bool.isRequired,\r\n    },\r\n    getDefaultProps() {\r\n        return {\r\n            process: null\r\n        };\r\n    },\r\n\r\n    componentDidMount() {\r\n        \r\n    },\r\n    componentWillReceiveProps() {\r\n        \r\n    },\r\n\r\n    addTag(event) {\r\n        event && event.preventDefault();\r\n        var el = this.refs['field-tag'],\r\n            tag = S(el.value);\r\n        if (tag.isEmpty())\r\n            return;\r\n        CoachingStore.dispatch({\r\n            action: CoachingStore.ACTION_ADD_TAG,\r\n            data: {\r\n                ProcessId: this.props.process.Id,\r\n                Session: this.props.sessionIndex,\r\n                Tag: tag.s\r\n            }\r\n        });\r\n        if (this.props.session.Tags)\r\n            this.props.session.Tags.push(tag.s);\r\n        else\r\n            this.props.session.Tags = [tag.s];\r\n        el.value = \"\";\r\n        this.forceUpdate();\r\n    },\r\n    removeTag(index, event) {\r\n        event && event.preventDefault();\r\n        CoachingStore.dispatch({\r\n            action: CoachingStore.ACTION_REMOVE_TAG,\r\n            data: {\r\n                ProcessId: this.props.process.Id,\r\n                Session: this.props.sessionIndex,\r\n                Tag: index\r\n            }\r\n        });\r\n        this.props.session.Tags.splice(index, 1);\r\n        this.forceUpdate();\r\n    },\r\n\r\n    render() {\r\n        var tags = this.props.session.Tags || [];\r\n        return (<div>\r\n            <fieldset className=\"ilv-form-group\">\r\n                <label className=\"ilv-form-label\">{Messages.get(\"LabelTags\")}</label>\r\n                <div className=\"ilv-input-group\">\r\n                    <input className=\"ilv-form-control ilv-form-control-lg\"\r\n                           ref=\"field-tag\"\r\n                           spellCheck={false} />\r\n                    <div className=\"ilv-input-group-btn\">\r\n                        <button className=\"ilv-btn ilv-btn-lg ilv-btn-icon ilv-btn-success\" onClick={this.addTag}>\r\n                            <i className=\"ilv-icon material-icons md-24\">&#xE145;</i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n\r\n            <fieldset className=\"ilv-form-group\">\r\n                <div className=\"ilv-tag-input mb-2 ilv-text-xs-center\" style={{backgroundColor: '#f5f7f9'}} readOnly={true}>\r\n                    {tags.map((tag, index) => {\r\n                        return <span className=\"ilv-tag\" key={\"tag-\" + index }>\r\n                            {tag} <a title={Messages.get(\"ActionRemoveTag\")} onClick={this.removeTag.bind(this, index)}>&times;</a>\r\n                        </span>;\r\n                    })}\r\n                </div>\r\n            </fieldset>\r\n        </div>);\r\n    }\r\n});\r\n"]}