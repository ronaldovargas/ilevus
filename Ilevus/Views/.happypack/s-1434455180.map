{"version":3,"sources":["legacy\\jsx\\core\\view\\user\\Financial.jsx"],"names":["S","require","moment","React","Link","Toastr","UserSession","FinancialStore","LoadingGauge","Modal","Messages","UserIcon","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","loading","get","componentDidMount","me","on","setState","componentWillUnmount","off","componentDidUpdate","suspendSubscription","event","preventDefault","confirm","hide","dispatch","action","ACTION_SUSPEND_USER_SUBSCRIPTION","Premium","Suspended","forceUpdate","render","state","user","financial","Financial","premium","Active","ilevusCode","payedUntil","PayedUntil","console","log","IsProfessional","format"],"mappings":"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","file":"Financial.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar S = require(\"string\");\r\nvar moment = require(\"moment\");\r\nrequire(\"ilevus/jsx/vendor/intlTelInput.js\");\r\n\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\nvar FinancialStore = require(\"ilevus/jsx/core/store/Financial.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\nvar Modal = require(\"ilevus/jsx/core/widget/Modal.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nvar UserIcon = require(\"ilevus/img/user.png\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            loading: UserSession.get(\"loading\"),\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        UserSession.on(\"loaded\", () => {\r\n            me.setState({\r\n                loading: false,\r\n            });\r\n        }, me);\r\n\r\n    },\r\n    componentWillUnmount() {\r\n        UserSession.off(null, null, this);\r\n        FinancialStore.off(null, null, this);\r\n    },\r\n\r\n    componentDidUpdate() {\r\n    },\r\n\r\n    suspendSubscription(event) {\r\n        event.preventDefault();\r\n        Modal.confirm(Messages.get(\"TextAreYouSure\"), Messages.get(\"TextSubscriptionSuspensionConfirmation\"), () => {\r\n            Modal.hide();\r\n            FinancialStore.dispatch({\r\n                action: FinancialStore.ACTION_SUSPEND_USER_SUBSCRIPTION,\r\n            });\r\n            UserSession.get(\"user\").Premium = UserSession.get(\"user\").Premium || {};\r\n            UserSession.get(\"user\").Premium.Suspended = true;\r\n            this.forceUpdate();\r\n        });\r\n    },\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <LoadingGauge />;\r\n        }\r\n        var user = UserSession.get(\"user\"),\r\n            financial = user.Financial,\r\n            premium = user.Premium ? user.Premium : { Active: false },\r\n            ilevusCode = \"Av7ZseP\",\r\n            payedUntil = moment(premium.PayedUntil)\r\n        ;\r\n        console.log(premium);\r\n        return (\r\n            <div>\r\n                {user.IsProfessional ? (<div className=\"ilv-card mb-5\">\r\n                    <div className=\"ilv-card-body\">\r\n                        <h4>{Messages.get(\"LabelIndications\")}</h4>\r\n                        <p>{Messages.get(\"TextIndicationsExplanation\")}</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                {Messages.get(\"LabelIlevusCode\")}: <input readOnly={true} className=\"ilv-form-control\" value={ilevusCode} />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                {Messages.get(\"LabelSignupLink\")}: <input readOnly={true} className=\"ilv-form-control\" value={\"https://www.ilevus.com/#signup/\" + ilevusCode} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>):\"\"}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col mb-5\">\r\n                        <h4>{Messages.get(\"LabelFinancialReports\")}</h4>\r\n                    </div>\r\n                    <div className=\"col mb-5\">\r\n                        <h4>\r\n                            {Messages.get(\"LabelPremiumMembership\")} {premium.Active ? (\r\n                                <span className=\"ilv-tag ilv-tag-success\">{Messages.get(\"LabelActive\")}</span>\r\n                            ):(\r\n                                <span className=\"ilv-tag ilv-tag-info\">{Messages.get(\"LabelUnactive\")}</span>\r\n                            )}\r\n                        </h4>\r\n                        {user.IsProfessional ? (\r\n                            premium.Active ? (!premium.Suspended ? (<div className=\"row\">\r\n                                <div className=\"col col-sm-7\">{Messages.get(\"LabelNextInvoice\")}: {payedUntil.format(\"D/M/Y\")}</div>\r\n                                <div className=\"col\">\r\n                                    <button className=\"ilv-btn ilv-btn-danger ilv-btn-sm\" onClick={this.suspendSubscription}>{Messages.get(\"ActionSuspend\")}</button>\r\n                                </div>\r\n                            </div>):(<div className=\"row\">\r\n                                <div className=\"col col-sm-7\">{Messages.get(\"LabelActiveUntil\")}: {payedUntil.format(\"D/M/Y\")}</div>\r\n                                <div className=\"col hidden-xs\">\r\n                                    {/*<button className=\"ilv-btn ilv-btn-primary ilv-btn-sm\" onClick={this.reactiveSubscription}>{Messages.get(\"ActionReactive\")}</button>*/}\r\n                                </div>\r\n                            </div>)):(<Link to=\"/subscribe\" className=\"ilv-btn ilv-btn-primary ilv-btn-sm\">{Messages.get(\"LabelBecomePremium\")}</Link>)\r\n                        ):(<Link to=\"/become-a-professional\">{Messages.get(\"TextBecomeProfessionalToPremium\")}</Link>)}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n"]}