{"version":3,"sources":["legacy\\jsx\\core\\view\\user\\coaching\\tools\\wheeloflife\\Configure.jsx"],"names":["S","require","marked","React","Toastr","Messages","Modal","WheelOfLifeStore","UserSession","EditableText","EditableTextArea","module","exports","createClass","getInitialState","changed","field","configs","get","Professional","CoachingToolsConfigs","WheelOfLifeDefaults","componentDidMount","me","window","onbeforeunload","beforeClose","on","data","remove","success","setState","componentWillUnmount","undefined","off","state","saveConfigs","event","preventDefault","dispatch","action","ACTION_SAVE_CONFIGURATION","changeField","target","value","instructionsChange","content","Instructions","labelChange","Label","addField","push","length","removeField","index","deleteConfirm","hide","splice","previousField","nextField","renderField","fieldIndex","bind","render","map","config"],"mappings":"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","file":"Configure.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar S = require('string');\r\nvar marked = require(\"marked\");\r\nvar React = require('react');\r\nvar Toastr = require(\"toastr\");\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\nvar Modal = require(\"ilevus/jsx/core/widget/Modal.jsx\");\r\n\r\nvar WheelOfLifeStore = require(\"ilevus/jsx/core/store/coaching/WheelOfLife.jsx\");\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar EditableText = require(\"ilevus/jsx/core/widget/coaching/EditableText.jsx\");\r\nvar EditableTextArea = require(\"ilevus/jsx/core/widget/coaching/EditableTextArea.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    getInitialState() {\r\n        return {\r\n            changed: false,\r\n            field: 0,\r\n            configs: UserSession.get(\"user\").Professional.Professional.CoachingToolsConfigs.WheelOfLifeDefaults,\r\n        }\r\n    },\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n\r\n        window.onbeforeunload = me.beforeClose;\r\n\r\n        WheelOfLifeStore.on(\"save-configuration\", (data) => {\r\n            Toastr.remove();\r\n            Toastr.success(Messages.get(\"TextDataSavedSuccess\"));\r\n            me.setState({\r\n                changed: false,\r\n                configs: data,\r\n            });\r\n        }, me);\r\n    },\r\n    componentWillUnmount() {\r\n        window.onbeforeunload = undefined;\r\n        WheelOfLifeStore.off(null, null, this);\r\n    },\r\n\r\n    beforeClose() {\r\n        if (this.state.changed)\r\n            return \"Tem certeza?\";\r\n        return undefined;\r\n    },\r\n\r\n    saveConfigs(event) {\r\n        event && event.preventDefault();\r\n        WheelOfLifeStore.dispatch({\r\n            action: WheelOfLifeStore.ACTION_SAVE_CONFIGURATION,\r\n            data: this.state.configs,\r\n        });\r\n    },\r\n\r\n    changeField(event) {\r\n        this.setState({\r\n            field: event.target.value,\r\n        });\r\n    },\r\n    instructionsChange(content) {\r\n        this.state.configs[this.state.field].Instructions = content;\r\n        this.setState({ changed: true });\r\n    },\r\n    labelChange(content) {\r\n        this.state.configs[this.state.field].Label = content;\r\n        this.setState({ changed: true });\r\n    },\r\n\r\n    addField(event) {\r\n        event && event.preventDefault();\r\n        this.state.configs.push({\r\n            Label: Messages.get(\"LabelName\"),\r\n            Instructions: \"\",\r\n        });\r\n        this.setState({\r\n            changed: true,\r\n            field: this.state.configs.length - 1,\r\n        });\r\n    },\r\n    removeField(index, event) {\r\n        event && event.preventDefault();\r\n        if (this.state.configs.length == 0)\r\n            return;\r\n        var me = this;\r\n        Modal.deleteConfirm(() => {\r\n            Modal.hide();\r\n            me.state.configs.splice(index, 1);\r\n            me.setState({\r\n                changed: true,\r\n                field: me.state.field == 0 ? 0 : me.state.field - 1,\r\n            });\r\n        });\r\n    },\r\n\r\n    previousField(event) {\r\n        event && event.preventDefault()\r\n        var field = this.state.field - 1;\r\n        if (this.state.field == 0) {\r\n            field = this.state.configs.length - 1;\r\n        }\r\n        this.setState({\r\n            field: field,\r\n        });\r\n    },\r\n    nextField(event) {\r\n        event && event.preventDefault()\r\n        var field = this.state.field + 1;\r\n        if (this.state.field == (this.state.configs.length - 1)) {\r\n            field = 0;\r\n        }\r\n        this.setState({\r\n            field: field,\r\n        });\r\n    },\r\n\r\n    renderField(fieldIndex) {\r\n        var field = this.state.configs[fieldIndex];\r\n        return (<div className=\"col mb-3\">\r\n            <EditableText\r\n                          inline={true}\r\n                          label={Messages.get('LabelField')}\r\n                          value={field.Label}\r\n                          editable={true}\r\n                          onChange={this.labelChange} />\r\n            <EditableTextArea\r\n                label={Messages.get('LabelInstructions')}\r\n                value={field.Instructions}\r\n                editable={true}\r\n                onChange={this.instructionsChange} />\r\n            <div className=\"mt-3\">\r\n                <a className=\"font-weight-bold mr-4\" href=\"#\" onClick={this.previousField}>&#8592; {Messages.get(\"LabelPrevious\")}</a>\r\n                <a className=\"font-weight-bold mr-4\" href=\"#\" onClick={this.nextField}>{Messages.get(\"LabelNext\")} &#8594;</a>\r\n                <button className=\"ilv-btn ilv-btn-error\" onClick={this.removeField.bind(this, fieldIndex)} title={Messages.get(\"LabelRemoveField\")}>\r\n                    {Messages.get(\"LabelRemoveField\")}\r\n                </button>\r\n            </div>\r\n        </div>);\r\n    },\r\n\r\n    render() {\r\n        return (<div>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col\">\r\n                    <fieldset className=\"ilv-form-group\">\r\n                        <div className=\"ilv-input-group mb-5\">\r\n                            <label className=\"ilv-form-label\">{Messages.get(\"LabelFields\")}</label>\r\n                            <div className=\"ilv-input-group-btn\">\r\n                                <button className=\"ilv-btn ilv-btn-lg ilv-btn-icon ilv-btn-primary\" onClick={this.saveConfigs} title={Messages.get(\"LabelSave\")} disabled={!this.state.changed}>\r\n                                    {Messages.get(\"LabelSave\")}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"ilv-input-group\">\r\n                            <select className=\"ilv-form-control ilv-form-control-lg\" value={this.state.field} onChange={this.changeField}>\r\n                                {this.state.configs.map((config, index) => {\r\n                                    return (<option value={index} key={\"field-\"+index}>\r\n                                        {config.Label}\r\n                                    </option>);\r\n                                })}\r\n                            </select>\r\n                            <div className=\"ilv-input-group-btn\">\r\n                                <button className=\"ilv-btn ilv-btn-lg ilv-btn-icon ilv-btn-success\" onClick={this.addField} title={Messages.get(\"LabelNewField\")}>\r\n                                    <i className=\"ilv-icon material-icons md-24\">&#xE145;</i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </fieldset>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    {this.renderField(this.state.field)}\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n});"]}