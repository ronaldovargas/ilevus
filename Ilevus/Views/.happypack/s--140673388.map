{"version":3,"sources":["src\\components\\molecules\\IconButton\\index.js"],"names":["fadeIn","StyledButton","props","hasText","collapsed","Text","span","Wrapper","div","StyledIcon","IconButton","icon","children","breakpoint","right","responsive","height","iconElement","undefined","propTypes","string","isRequired","bool","number","node","defaultProps"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AAEA;;;;;;AAEA,IAAMA,oKAAN;;AAMA,IAAMC,eAAe,mDAAf;AAAA;AAAA,gIACS;AAAA,SAASC,MAAMC,OAAN,IAAiB,CAACD,MAAME,SAAxB,GAAoC,MAApC,GAA6C,OAAtD;AAAA,CADT,EAEK,yBAAO,SAAP,EAAkB,MAAlB,EAA0B,OAA1B,CAFL,EAGO,yBAAO,SAAP,EAAkB,YAAlB,EAAgC,CAAhC,CAHP,EAMF,yBAAO,WAAP,sTAWiBJ,MAXjB,EANE,EAqBF,yBAAO,YAAP,0IACgC,uBAAK,YAAL,CADhC,EArBE,CAAN;;AA6BA,IAAMK,OAAO,2BAAOC,IAAd;AAAA;AAAA,qGAE4B,uBAAK,YAAL,CAF5B,EAGS,yBAAO,YAAP,EAAqB,iBAArB,CAHT,CAAN;;AAOA,IAAMC,UAAU,2BAAOC,GAAjB;AAAA;AAAA,iHAAN;;AAQA,IAAMC,aAAa,iDAAb;AAAA;AAAA,yBAAN;;AAIA,IAAMC,aAAa,SAAbA,UAAa,OAAkC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZV,KAAY;;AAAA,MAEjDW,UAFiD,GAG/CX,KAH+C,CAEjDW,UAFiD;AAAA,MAErCC,KAFqC,GAG/CZ,KAH+C,CAErCY,KAFqC;AAAA,MAE9BC,UAF8B,GAG/Cb,KAH+C,CAE9Ba,UAF8B;AAAA,MAElBC,MAFkB,GAG/Cd,KAH+C,CAElBc,MAFkB;;AAInD,MAAMC,cAAc,8BAAC,UAAD,IAAY,QAAQD,SAASA,SAAS,GAAlB,GAAwBE,SAA5C,EAAuD,MAAMP,IAA7D,GAApB;AACA,SACE;AAAC,gBAAD;AAAA,eAAc,SAAS,CAAC,CAACC,QAAzB,IAAuCV,KAAvC;AACE;AAAC,aAAD;AAAA;AACGY,eAASG,WADZ;AAEGL,kBACC;AAAC,YAAD;AAAA,UAAM,WAAU,MAAhB,EAAuB,YAAYG,UAAnC,EAA+C,YAAYF,UAA3D;AAAwED;AAAxE,OAHJ;AAKGE,eAASG;AALZ;AADF,GADF;AAWD,CAhBD;;AAkBAP,WAAWS,SAAX,GAAuB;AACrBR,QAAM,oBAAUS,MAAV,CAAiBC,UADF;AAErBN,cAAY,oBAAUO,IAFD;AAGrBT,cAAY,oBAAUU,MAHD;AAIrBnB,aAAW,oBAAUkB,IAJA;AAKrBR,SAAO,oBAAUQ,IALI;AAMrBN,UAAQ,oBAAUO,MANG;AAOrBX,YAAU,oBAAUY;AAPC,CAAvB;;AAUAd,WAAWe,YAAX,GAA0B;AACxBZ,cAAY;AADY,CAA1B;;eAIeH,U;;;;;;;;;gCAtFTV,M;;gCAMAC,Y;;gCA6BAI,I;;gCAOAE,O;;gCAQAE,U;;gCAIAC,U","file":"index.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled, { css, keyframes } from 'styled-components'\r\nimport { ifProp, prop } from 'styled-tools'\r\n\r\nimport { Icon, Button } from 'components'\r\n\r\nconst fadeIn = keyframes`\r\n  0% { display: none; opacity: 0; }\r\n  1% { display: block: opacity: 0; }\r\n  100% { display: block; opacity: 1; }\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  max-width: ${props => props.hasText && !props.collapsed ? '100%' : '2.5em'};\r\n  width: ${ifProp('hasText', 'auto', '2.5em')};\r\n  padding: ${ifProp('hasText', '0 0.4375em', 0)};\r\n  flex: 0 0 2.5em;\r\n  box-sizing: border-box;\r\n  ${ifProp('collapsed', css`\r\n    overflow: hidden;\r\n    transition: max-width 250ms ease-in-out;\r\n    will-change: max-width;\r\n    & .text {\r\n      display: none;\r\n    }\r\n    &:hover {\r\n      max-width: 100%;\r\n      & .text {\r\n        display: block;\r\n        animation: ${fadeIn} 250ms;\r\n      }\r\n    }\r\n  `)}\r\n  ${ifProp('responsive', css`\r\n    @media screen and (max-width: ${prop('breakpoint')}px) {\r\n      width: auto;\r\n      flex: 0 !important;\r\n    }\r\n  `)}\r\n`\r\n\r\nconst Text = styled.span`\r\n  padding: 0.4375em;\r\n  @media screen and (max-width: ${prop('breakpoint')}px) {\r\n    display: ${ifProp('responsive', 'none !important')};\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  flex: none;\r\n`\r\n\r\nconst IconButton = ({ icon, children, ...props }) => {\r\n  const {\r\n    breakpoint, right, responsive, height,\r\n  } = props\r\n  const iconElement = <StyledIcon height={height ? height / 2.5 : undefined} icon={icon} />\r\n  return (\r\n    <StyledButton hasText={!!children} {...props}>\r\n      <Wrapper>\r\n        {right || iconElement}\r\n        {children &&\r\n          <Text className=\"text\" responsive={responsive} breakpoint={breakpoint}>{children}</Text>\r\n        }\r\n        {right && iconElement}\r\n      </Wrapper>\r\n    </StyledButton>\r\n  )\r\n}\r\n\r\nIconButton.propTypes = {\r\n  icon: PropTypes.string.isRequired,\r\n  responsive: PropTypes.bool,\r\n  breakpoint: PropTypes.number,\r\n  collapsed: PropTypes.bool,\r\n  right: PropTypes.bool,\r\n  height: PropTypes.number,\r\n  children: PropTypes.node,\r\n}\r\n\r\nIconButton.defaultProps = {\r\n  breakpoint: 420,\r\n}\r\n\r\nexport default IconButton\r\n"]}