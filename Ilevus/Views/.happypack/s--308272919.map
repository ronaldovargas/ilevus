{"version":3,"sources":["legacy\\jsx\\core\\view\\user\\coaching\\tools\\wheeloflife\\WheelOfLife.jsx"],"names":["marked","require","React","Link","Toastr","CoachingStore","WheelOfLifeStore","EditableTextArea","SessionTimer","Tasks","LoadingGauge","Messages","Radar","module","exports","createClass","contextTypes","isCoach","PropTypes","bool","isRequired","process","object","router","chartOptions","scale","lineArc","ticks","beginAtZero","max","stepSize","getInitialState","session","context","Sessions","props","params","tool","WheelOfLifeTool","loading","field","fieldEvaluation","Fields","Evaluation","componentDidMount","me","on","toolDef","setState","state","history","back","dispatch","action","ACTION_INITIALIZE_TOOL","data","ProcessId","id","Session","componentWillUnmount","off","componentWillReceiveProps","newProps","newContext","getChartData","labels","fields","i","length","push","Label","datasets","label","get","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","ointHoverBackgroundColor","pointHoverBorderColor","previousField","event","preventDefault","nextField","saveEvaluation","ACTION_SAVE_EVALUATION","Field","forceUpdate","onEvaluationChange","grade","refs","valueAsNumber","undefined","remove","error","learningsChange","newValue","Learnings","ACTION_SAVE_LEARNINGS","finish","renderField","fieldIndex","__html","Instructions","render","parseInt","Status"],"mappings":"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","file":"WheelOfLife.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar marked = require(\"marked\");\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar CoachingStore = require(\"ilevus/jsx/core/store/Coaching.jsx\");\r\nvar WheelOfLifeStore = require(\"ilevus/jsx/core/store/coaching/WheelOfLife.jsx\");\r\n\r\nvar EditableTextArea = require(\"ilevus/jsx/core/widget/coaching/EditableTextArea.jsx\");\r\nvar SessionTimer = require(\"ilevus/jsx/core/widget/coaching/SessionTimer.jsx\");\r\nvar Tasks = require(\"ilevus/jsx/core/widget/coaching/wheeloflife/Tasks.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\nvar Radar = require('react-chartjs-2').Radar;\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        isCoach: React.PropTypes.bool.isRequired,\r\n        process: React.PropTypes.object.isRequired,\r\n        router: React.PropTypes.object,\r\n    },\r\n\r\n    chartOptions: {\r\n        scale: {\r\n            lineArc: false,\r\n            ticks: {\r\n                beginAtZero: true,\r\n                max: 10,\r\n                stepSize: 2.5,\r\n            },\r\n        }\r\n    },\r\n\r\n    getInitialState() {\r\n        var session = this.context.process.Sessions[this.props.params.session];\r\n        return {\r\n            session: session,\r\n            tool: session.WheelOfLifeTool,\r\n            loading: !session.WheelOfLifeTool,\r\n            field: 0,\r\n            fieldEvaluation: session.WheelOfLifeTool ? session.WheelOfLifeTool.Fields[0].Evaluation : 0,\r\n        };\r\n    },\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n        WheelOfLifeStore.on(\"initialize-tool\", (toolDef) => {\r\n            me.setState({\r\n                tool: toolDef,\r\n                loading: false,\r\n                fieldEvaluation: toolDef.Fields[this.state.field].Evaluation,\r\n            });\r\n        }, me);\r\n\r\n        CoachingStore.on(\"finish-session\", (process) => {\r\n            history.back();\r\n        }, me);\r\n\r\n        if (this.state.loading) {\r\n            WheelOfLifeStore.dispatch({\r\n                action: WheelOfLifeStore.ACTION_INITIALIZE_TOOL,\r\n                data: {\r\n                    ProcessId: me.props.params.id,\r\n                    Session: me.props.params.session,\r\n                }\r\n            });\r\n        }\r\n    },\r\n    \r\n    componentWillUnmount() {\r\n        CoachingStore.off(null, null, this);\r\n        WheelOfLifeStore.off(null, null, this);\r\n    },\r\n\r\n    componentWillReceiveProps(newProps, newContext) {\r\n        var session = newContext.process.Sessions[newProps.params.session];\r\n        if ((this.props.params.id != newProps.params.id) || (this.props.params.session != newProps.params.session)) {\r\n            this.setState({\r\n                session: session,\r\n                tool: session.WheelOfLifeTool,\r\n                loading: !session.WheelOfLifeTool,\r\n                field: 0,\r\n                fieldEvaluation: session.WheelOfLifeTool ? session.WheelOfLifeTool.Fields[0].Evaluation : 0,\r\n            });\r\n            if (!session.WheelOfLifeTool) {\r\n                WheelOfLifeStore.dispatch({\r\n                    action: WheelOfLifeStore.ACTION_INITIALIZE_TOOL,\r\n                    data: {\r\n                        ProcessId: newProps.params.id,\r\n                        Session: newProps.params.session,\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            this.setState({\r\n                session: session,\r\n                tool: session.WheelOfLifeTool,\r\n            });\r\n        }\r\n    },\r\n\r\n    getChartData() {\r\n        var labels = [], data = [], fields = this.state.tool.Fields;\r\n        for (var i = 0; i < fields.length; i++) {\r\n            labels.push(fields[i].Label);\r\n            data.push(fields[i].Evaluation);\r\n        }\r\n        return {\r\n            labels: labels,\r\n            datasets: [\r\n              {\r\n                  label: Messages.get(\"LabelGrade\"),\r\n                  backgroundColor: \"rgba(103, 58, 183, 0.2)\",\r\n                  borderColor: 'rgba(103, 58, 183,1)',\r\n                  pointBackgroundColor: '#fff',\r\n                  pointBorderColor: 'rgba(103, 58, 183,1)',\r\n                  ointHoverBackgroundColor: 'rgba(103, 58, 183,1)',\r\n                  pointHoverBorderColor: 'rgba(103, 58, 183,1)',\r\n                  data: data\r\n              }\r\n            ]\r\n        };\r\n    },\r\n\r\n    previousField(event) {\r\n        event && event.preventDefault()\r\n        var field = this.state.field - 1;\r\n        if (this.state.field == 0) {\r\n            field = this.state.tool.Fields.length - 1;\r\n        }\r\n        this.setState({\r\n            field: field,\r\n            fieldEvaluation: this.state.tool.Fields[field].Evaluation,\r\n        });\r\n    },\r\n    nextField(event) {\r\n        event && event.preventDefault()\r\n        var field = this.state.field + 1;\r\n        if (this.state.field == (this.state.tool.Fields.length - 1)) {\r\n            field = 0;\r\n        }\r\n        this.setState({\r\n            field: field,\r\n            fieldEvaluation: this.state.tool.Fields[field].Evaluation,\r\n        });\r\n    },\r\n\r\n    saveEvaluation(event) {\r\n        event && event.preventDefault();\r\n        WheelOfLifeStore.dispatch({\r\n            action: WheelOfLifeStore.ACTION_SAVE_EVALUATION,\r\n            data: {\r\n                ProcessId: this.props.params.id,\r\n                Session: this.props.params.session,\r\n                Field: this.state.field,\r\n                Evaluation: this.state.fieldEvaluation,\r\n            }\r\n        });\r\n        this.state.tool.Fields[this.state.field].Evaluation = this.state.fieldEvaluation;\r\n        this.forceUpdate();\r\n    },\r\n    onEvaluationChange() {\r\n        var grade = this.refs['field-grade'].valueAsNumber;\r\n        if (grade === undefined || grade < 0 || grade > 10) {\r\n            Toastr.remove();\r\n            Toastr.error(Messages.get(\"TextTypeValidGrade\"));\r\n            return;\r\n        }\r\n        this.setState({\r\n            fieldEvaluation: grade\r\n        });\r\n    },\r\n\r\n    learningsChange(newValue) {\r\n        this.state.tool.Learnings = newValue;\r\n        this.forceUpdate();\r\n        WheelOfLifeStore.dispatch({\r\n            action: WheelOfLifeStore.ACTION_SAVE_LEARNINGS,\r\n            data: {\r\n                ProcessId: this.props.params.id,\r\n                Session: this.props.params.session,\r\n                Learnings: newValue,\r\n            }\r\n        });\r\n    },\r\n\r\n    finish(event) {\r\n        event && event.preventDefault();\r\n        history.back();\r\n    },\r\n\r\n    renderField(fieldIndex) {\r\n        var field = this.state.tool.Fields[fieldIndex];\r\n        return (<div className=\"col mb-3\">\r\n            <h3 className=\"mb-3\">{Messages.get(\"LabelField\")}: {field.Label}</h3>\r\n            <div className=\"ilv-markdown ilv-form-group\" dangerouslySetInnerHTML={{__html: marked(field.Instructions)}} />\r\n            <div className=\"ilv-form-group\">\r\n                <label className=\"ilv-form-label\">{Messages.get(\"LabelGrade\")}</label>\r\n                <input className=\"ilv-form-control\" type=\"number\" max=\"10\" min=\"0\" value={this.state.fieldEvaluation}\r\n                       onBlur={this.saveEvaluation} ref=\"field-grade\" onChange={this.onEvaluationChange} />\r\n            </div>\r\n            <a className=\"font-weight-bold mr-4\" href=\"#\" onClick={this.previousField}>&#8592; {Messages.get(\"LabelPrevious\")}</a>\r\n            <a className=\"font-weight-bold\" href=\"#\" onClick={this.nextField}>{Messages.get(\"LabelNext\")} &#8594;</a>\r\n        </div>);\r\n    },\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <LoadingGauge />;\r\n        }\r\n\r\n        var session = this.context.process.Sessions[parseInt(this.props.params.session)];\r\n        return (\r\n            <div className=\"container my-5\">\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col\">\r\n                        <div className=\"ilv-media mb-3\">\r\n                            <div className=\"ilv-media-body\">\r\n                                <h1>{Messages.get(\"LabelWheelOfLife\")}</h1>\r\n                            </div>\r\n                            <div className=\"ilv-media-right\">\r\n                                <button className=\"ilv-btn ilv-btn-primary\" onClick={this.finish}>{Messages.get(\"LabelFinish\")}</button>\r\n                            </div>\r\n                        </div>\r\n                        {this.renderField(this.state.field)}\r\n                    </div>\r\n\r\n                    <div className=\"col-5\">\r\n                        <SessionTimer ref=\"timer\"\r\n                                      process={this.context.process}\r\n                                      session={session}\r\n                                      isCoach={this.context.isCoach} />\r\n                        <Radar data={this.getChartData()} options={this.chartOptions} />\r\n                    </div>\r\n                </div>\r\n                \r\n\r\n                <div className=\"row mb-5\">\r\n                    <div className=\"col-12\">\r\n                        <EditableTextArea label={Messages.get('LabelLearning')}\r\n                                          value={this.state.tool.Learnings}\r\n                                          editable={!this.context.isCoach && (session.Status > 0) && (session.Status < 10)}\r\n                                          onChange={this.learningsChange} />\r\n                    </div>\r\n                </div>\r\n\r\n                <Tasks tool={this.state.tool} process={this.context.process} session={session} sessionIndex={parseInt(this.props.params.session)} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n});"]}