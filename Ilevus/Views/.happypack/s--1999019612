var React = require("react");
var Link = require("react-router").Link;
var Toastr = require("toastr");

var SystemStore = require("ilevus/jsx/core/store/System.jsx");
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");

var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");
var Fluxbone = require("ilevus/jsx/core/store/Fluxbone.jsx");
var URL = BACKEND_URL + "User";

module.exports = React.createClass({
    displayName: "exports",

    url: URL,
    contextTypes: {
        router: React.PropTypes.object
    },
    getInitialState: function getInitialState() {
        return {
            loading: true
        };
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        SystemStore.on("retrieve-config", function (config) {
            me.setState({
                loading: false,
                config: config
            });
        }, me);
        SystemStore.on("update-config-apis", function (config) {
            Toastr.remove();
            Toastr.success(Messages.get("TextDataSavedSuccessfully"));
            $("button").removeAttr("disabled");
        }, me);
        SystemStore.on("fail", function (msg) {
            $("button").removeAttr("disabled");
        }, me);

        UserSession.on('sendSystemNotifications-ok', function (result) {
            if (result == true) {
                alert('e-mail enviado com sucesso');
            }
        });

        SystemStore.dispatch({
            action: SystemStore.ACTION_RETRIEVE_CONFIG
        });
    },
    componentWillUnmount: function componentWillUnmount() {
        SystemStore.off(null, null, this);
    },
    saveApiConfigs: function saveApiConfigs(event) {
        event.preventDefault();

        SystemStore.dispatch({
            action: SystemStore.ACTION_UPDATE_CONFIG_APIS,
            data: {
                MoipBaseUrl: this.refs['MoipBaseUrl'].value,
                MoipToken: this.refs['MoipToken'].value,
                MoipKey: this.refs['MoipKey'].value,
                MoipSubscriptionKey: this.refs['MoipSubscriptionKey'].value,
                MoipSubscriptionCode: this.refs['MoipSubscriptionCode'].value,
                MoipCryptoPublicKey: this.refs['MoipCryptoPublicKey'].value
            }
        });
    },
    enviarMensagem: function enviarMensagem(sender) {
        UserSession.dispatch({
            action: UserSession.ACTION_SEND_SYSTEM_NOTIFICATIONS,
            data: {
                email: this.refs['notif-email-teste'].value,
                pt: {
                    assunto: this.refs['notif-pt-br-subject'].value,
                    mensagem: this.refs['notif-pt-br'].value
                },
                en: {
                    assunto: this.refs['notif-en-subject'].value,
                    mensagem: this.refs['notif-en'].value
                },
                es: {
                    assunto: this.refs['notif-es-subject'].value,
                    mensagem: this.refs['notif-es'].value
                }
            }
        });
    },
    render: function render() {
        if (this.state.loading) {
            return React.createElement(LoadingGauge, null);
        }

        return React.createElement(
            "div",
            null,
            React.createElement(
                "div",
                { className: "ilv-card" },
                React.createElement(
                    "div",
                    { className: "ilv-card-body", id: "notif" + "-container" },
                    React.createElement(
                        "ul",
                        { className: "ilv-text-sm nav nav-tabs m-b-1" },
                        React.createElement(
                            "li",
                            { className: "nav-item" },
                            React.createElement(
                                "a",
                                { className: "nav-link active", "data-toggle": "tab", href: "#" + "notif" + "-pt-br-form" },
                                Messages.get("LanguagePortuguese")
                            )
                        ),
                        React.createElement(
                            "li",
                            { className: "nav-item" },
                            React.createElement(
                                "a",
                                { className: "nav-link", "data-toggle": "tab", href: "#" + "notif" + "-en-form" },
                                Messages.get("LanguageEnglish")
                            )
                        ),
                        React.createElement(
                            "li",
                            { className: "nav-item" },
                            React.createElement(
                                "a",
                                { className: "nav-link", "data-toggle": "tab", href: "#" + "notif" + "-es-form" },
                                Messages.get("LanguageSpanish")
                            )
                        )
                    ),
                    React.createElement(
                        "form",
                        { className: "tab-content" },
                        React.createElement(
                            "div",
                            { className: "tab-pane fade active in", id: "notif" + "-pt-br-form" },
                            React.createElement(
                                "div",
                                { className: "ilv-form-group" },
                                React.createElement(
                                    "label",
                                    { className: "ilv-form-label", htmlFor: "notif" + "-pt-br-subject" },
                                    Messages.get("LabelSubject")
                                ),
                                React.createElement("input", { spellCheck: false,
                                    "typeof": "text",
                                    className: "ilv-form-control",
                                    id: "notif" + "-pt-br-subject",
                                    ref: "notif" + "-pt-br-subject" })
                            ),
                            React.createElement(
                                "div",
                                { className: "ilv-form-group" },
                                React.createElement(
                                    "label",
                                    { className: "ilv-form-label", htmlFor: "notif" + "-pt-br" },
                                    Messages.get("LabelMessage")
                                ),
                                React.createElement("textarea", { rows: 5,
                                    spellCheck: false,
                                    className: "ilv-form-control",
                                    id: "notif" + "-pt-br",
                                    ref: "notif" + "-pt-br" })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "tab-pane fade", id: "notif" + "-en-form" },
                            React.createElement(
                                "div",
                                { className: "ilv-form-group" },
                                React.createElement(
                                    "label",
                                    { className: "ilv-form-label", htmlFor: "notif" + "-en-subject" },
                                    Messages.get("LabelSubject")
                                ),
                                React.createElement("input", { spellCheck: false,
                                    "typeof": "text",
                                    className: "ilv-form-control",
                                    id: "notif" + "-en-subject",
                                    ref: "notif" + "-en-subject" })
                            ),
                            React.createElement(
                                "div",
                                { className: "ilv-form-group" },
                                React.createElement(
                                    "label",
                                    { className: "ilv-form-label", htmlFor: "notif" + "-en" },
                                    Messages.get("LabelMessage")
                                ),
                                React.createElement("textarea", { rows: 5,
                                    spellCheck: false,
                                    className: "ilv-form-control",
                                    id: "notif" + "-en",
                                    ref: "notif" + "-en" })
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "tab-pane fade", id: "notif" + "-es-form" },
                            React.createElement(
                                "div",
                                { className: "ilv-form-group" },
                                React.createElement(
                                    "label",
                                    { className: "ilv-form-label", htmlFor: "notif" + "-es-subject" },
                                    Messages.get("LabelSubject")
                                ),
                                React.createElement("input", { spellCheck: false,
                                    "typeof": "text",
                                    className: "ilv-form-control",
                                    id: "notif" + "-es-subject",
                                    ref: "notif" + "-es-subject" })
                            ),
                            React.createElement(
                                "div",
                                { className: "ilv-form-group" },
                                React.createElement(
                                    "label",
                                    { className: "ilv-form-label", htmlFor: "notif" + "-es" },
                                    Messages.get("LabelMessage")
                                ),
                                React.createElement("textarea", { rows: 5,
                                    spellCheck: false,
                                    className: "ilv-form-control",
                                    id: "notif" + "-es",
                                    ref: "notif" + "-es" })
                            )
                        )
                    ),
                    React.createElement(
                        "label",
                        { className: "ilv-form-label", htmlFor: "notif-email-teste" },
                        Messages.get("LabelEmailTeste")
                    ),
                    React.createElement("input", { spellCheck: false,
                        "typeof": "email",
                        style: { marginBottom: "10px" },
                        className: "ilv-form-control",
                        id: "notif-email-teste",
                        ref: "notif-email-teste" }),
                    React.createElement(
                        "button",
                        { className: "ilv-btn ilv-btn-primary",
                            ref: "notif" + "-save",
                            onClick: this.enviarMensagem.bind(this) },
                        Messages.get("LabelEnviar")
                    )
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/admin/AdminPanelMensagens.jsx");

    __REACT_HOT_LOADER__.register(URL, "URL", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/admin/AdminPanelMensagens.jsx");
}();

;