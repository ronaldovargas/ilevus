// https://github.com/diegohaz/arc/wiki/Sagas
import { all, fork } from 'redux-saga/effects';

var req = require.context('.', true, /\.\/.+\/sagas\.js$/);

var sagas = req.keys().map(function (key) {
  return req(key).default;
});

var _default = /*#__PURE__*/regeneratorRuntime.mark(function _default() {
  var services = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return regeneratorRuntime.wrap(function _default$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return all(sagas.map(function (saga) {
            return fork(saga, services);
          }));

        case 2:
        case 'end':
          return _context.stop();
      }
    }
  }, _default, this);
});

export default _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(req, 'req', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/store/sagas.js');

  __REACT_HOT_LOADER__.register(sagas, 'sagas', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/store/sagas.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/store/sagas.js');
}();

;