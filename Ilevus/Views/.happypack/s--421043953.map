{"version":3,"sources":["legacy\\jsx\\core\\view\\notifications\\NotificationsMessages.jsx"],"names":["_","require","S","moment","momentRange","React","Link","ChatStore","UserSession","LoadingGauge","UserIcon","Messages","POLL_INTERVAL","showNewMessageIndicator","isConversationUpdated","old","last","Id","length","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","contacts","conversation","destination","props","params","componentDidMount","me","get","context","replace","on","setState","lastPoll","pollContacts","delay","pollNewMessages","state","PartnerId","msg","pos","forceUpdate","dispatch","action","ACTION_RETRIEVE_CONVERSATION","data","componentWillUnmount","off","componentWillReceiveProps","newProps","newContext","ACTION_POLL_CONTACTS","Since","format","ACTION_POLL_NEW_MESSAGES","Destination","sendMessage","event","preventDefault","refs","value","isEmpty","push","AuthorId","Content","s","Preview","ACTION_SEND_MESSAGE","componentDidUpdate","chatBody","scrollTop","scrollHeight","offsetHeight","renderChat","dest","msgs","now","lastDay","Image","Name","Surname","map","idx","day","Day","creation","Creation","diff","range","minWidth","width","textAlign","renderChatMobile","renderChatList","items","user","contact","lastMessage","LastMessage","nomeCompleto","PartnerName","PartnerSurname","toUpperCase","indexOf","PartnerImage","renderChatListMobile","borderBottom","borderRadius","render","maxHeight"],"mappings":"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","file":"NotificationsMessages.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar _ = require(\"underscore\");\r\nvar S = require(\"string\");\r\nvar moment = require(\"moment\");\r\nvar momentRange = require(\"moment-range\");\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\n\r\nvar ChatStore = require(\"ilevus/jsx/core/store/Chat.jsx\");\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\nvar UserIcon = require(\"ilevus/img/user.png\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nvar POLL_INTERVAL = 500;\r\nvar showNewMessageIndicator = false;\r\n\r\nfunction isConversationUpdated(old, last) {\r\n    if ((typeof old) != (typeof last)) {\r\n        return true;\r\n    }\r\n    if (!old) {\r\n        return false;\r\n    }\r\n    if (old.Id !== last.Id) {\r\n        return true;\r\n    }\r\n    return old.Messages.length != last.Messages.length;\r\n}\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            contacts: [],\r\n            conversation: null,\r\n            destination: this.props.params.destination\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        if (!UserSession.get(\"logged\")) {\r\n            this.context.router.replace(\"/home\");\r\n        }\r\n\r\n        ChatStore.on(\"retrieve-conversation\", (conversation) => {\r\n            me.setState({\r\n                conversation: conversation,\r\n                lastPoll: moment()\r\n            });\r\n            me.pollContacts();\r\n            _.delay(this.pollNewMessages, POLL_INTERVAL);\r\n        }, me);\r\n\r\n        ChatStore.on(\"poll-contacts\", (contacts) => {\r\n            if (me.state.destination) {\r\n                me.setState({\r\n                    contacts: contacts\r\n                });\r\n            } else {\r\n                if (contacts && contacts.length > 0)\r\n                    me.context.router.replace(\"/notifications/messages/\" + contacts[0].PartnerId);\r\n            }\r\n        }, me);\r\n\r\n        ChatStore.on(\"poll-new-messages\", (conversation) => {\r\n            if (isConversationUpdated(this.state.conversation, conversation)) {                \r\n                showNewMessageIndicator = true;\r\n                me.setState({\r\n                    conversation: conversation,\r\n                    lastPoll: moment()\r\n                });\r\n            }\r\n            me.pollContacts();\r\n            _.delay(this.pollNewMessages, POLL_INTERVAL);\r\n        }, me);\r\n\r\n        ChatStore.on(\"send-message\", (msg) => {\r\n            showNewMessageIndicator = true;\r\n            var pos = this.state.conversation.Messages.length - 1;\r\n            this.state.conversation.Messages[pos] = msg;\r\n            me.forceUpdate();\r\n        }, me);\r\n\r\n        if (me.state.destination) {\r\n            ChatStore.dispatch({\r\n                action: ChatStore.ACTION_RETRIEVE_CONVERSATION,\r\n                data: me.state.destination\r\n            });\r\n        } else {\r\n            this.pollContacts();\r\n        }       \r\n    },\r\n    componentWillUnmount() {\r\n        ChatStore.off(null, null, this);\r\n    },\r\n    componentWillReceiveProps(newProps, newContext) {\r\n        if (this.props.params.destination != newProps.params.destination) {\r\n            this.setState({\r\n                destination: newProps.params.destination\r\n            });\r\n            if (newProps.params.destination) {\r\n                ChatStore.dispatch({\r\n                    action: ChatStore.ACTION_RETRIEVE_CONVERSATION,\r\n                    data: newProps.params.destination\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    pollContacts() {\r\n        ChatStore.dispatch({\r\n            action: ChatStore.ACTION_POLL_CONTACTS,\r\n            data: {\r\n                Since: this.state.lastPoll ? this.state.lastPoll.format(\"YYYY-MM-DThh:mm:ss\") : \"1970-01-01T00:00:00\"\r\n            }\r\n        });\r\n    },\r\n\r\n    pollNewMessages() {\r\n        ChatStore.dispatch({\r\n            action: ChatStore.ACTION_POLL_NEW_MESSAGES,\r\n            data: {\r\n                Destination: this.state.destination,\r\n                Since: this.state.lastPoll.format(\"YYYY-MM-DThh:mm:ss\")\r\n            }\r\n        });\r\n    },\r\n\r\n    sendMessage(event) {\r\n        event.preventDefault();\r\n        var msg = S(this.refs['message-input'].value);        \r\n        if (msg.isEmpty()) {\r\n            msg = S(this.refs['message-input-mobile'].value);\r\n            if (msg.isEmpty())\r\n                return;\r\n        }\r\n\r\n        this.state.conversation.Messages.push({\r\n            AuthorId: UserSession.get(\"user\").Id,\r\n            Content: msg.s,\r\n            Preview: true\r\n        });\r\n        this.refs['message-input'].value = \"\";\r\n        this.refs['message-input-mobile'].value = \"\";\r\n        this.forceUpdate();\r\n        ChatStore.dispatch({\r\n            action: ChatStore.ACTION_SEND_MESSAGE,\r\n            data: {\r\n                Content: msg.s,\r\n                Destination: this.state.conversation.Destination.Id\r\n            }\r\n        });\r\n    },\r\n\r\n    componentDidUpdate() {\r\n        var chatBody = this.refs['chat-body'];\r\n        if (chatBody) {\r\n            if (chatBody.scrollTop + 100 >= (chatBody.scrollHeight - chatBody.offsetHeight)) {\r\n                chatBody.scrollTop = chatBody.scrollHeight;\r\n                showNewMessageIndicator = false;\r\n            }\r\n        }\r\n    },\r\n\r\n    renderChat() {\r\n        var conversation = this.state.conversation;\r\n\r\n        var dest = conversation ? conversation.Destination : {};\r\n        var msgs = conversation ? conversation.Messages : {};\r\n        var now = moment();\r\n        var lastDay;\r\n        return (<div className=\"ilv-chat-messages\">\r\n            <div className=\"ilv-chat-messages-header\">\r\n                <div className=\"ilv-media ilv-media-middle\">\r\n                    <div className=\"ilv-media-left\">\r\n                        <div className=\"ilv-avatar ilv-avatar-circle ilv-avatar-md\">\r\n                            <img src={S(dest ? dest.Image : '').isEmpty() ? UserIcon : dest.Image} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ilv-media-body\">\r\n                        <span className=\"ilv-chat-list-name\">{dest ? dest.Name : ''} {dest ? dest.Surname : ''}</span>\r\n                        <p className=\"ilv-chat-list-message\"></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    <div>{!showNewMessageIndicator ? <span></span> : <span className=\"new-message-indicator\">novas mensagens</span>}</div>\r\n\r\n            <div className=\"ilv-chat-messages-body\" ref=\"chat-body\">\r\n                {!msgs || msgs.length <= 0 || !msgs.map ? <div className=\"ilv-chat-messages-bubble center\">\r\n                    <i>{Messages.get(\"TextNoMessagesYet\")}</i>\r\n\r\n                </div> : msgs.map((msg, idx) => {\r\n                    var day = moment(conversation.Day);\r\n                    var creation = moment(msg.Creation);\r\n                    var diff = moment.range(creation, now).diff(\"hours\");\r\n                    return <div className={\"area-mensagem ilv-chat-messages-bubble \" + (msg.AuthorId == UserSession.get(\"user\").Id ? \"out\" : \"in\")}\r\n                                key={\"chat-msg-\" + idx} style={{minWidth: \"15%\"}}>\r\n                        <div className=\"ilv-media\">\r\n                            <div className=\"ilv-media-body\">\r\n                                {msg.Content}\r\n                            </div>\r\n                            <div className=\"ilv-media-right horario-mensagem\" style={{width: \"140%\", textAlign: \"right\"}}>\r\n                                <small>\r\n                                    {msg.Preview ? \"P\" : (diff < 24 ? creation.format('HH:mm') : creation.format('D/MM/YYYY HH:mm'))}\r\n                                </small>\r\n                            </div>\r\n                        </div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <form className=\"ilv-chat-messages-footer\" onSubmit={this.sendMessage}>\r\n                <div className=\"ilv-input-group\">\r\n                    <input className=\"ilv-form-control ilv-form-control-kg\"\r\n                           type=\"text\"\r\n                           ref=\"message-input\"\r\n                           spellCheck={false}\r\n                           placeholder=\"Type a message...\" />\r\n                    <div className=\"ilv-input-group-btn\">\r\n                        <button className=\"ilv-btn ilv-btn-lg ilv-btn-icon ilv-btn-neutral\" type='submit'>\r\n                            <i className=\"ilv-icon material-icons md-24\">&#xE163;</i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>);\r\n    },\r\n\r\n    renderChatMobile() {\r\n        var conversation = this.state.conversation;\r\n\r\n        var dest = conversation ? conversation.Destination : {};\r\n        var msgs = conversation ? conversation.Messages : {};\r\n        var now = moment();\r\n        var lastDay;\r\n        return (<div className=\"ilv-chat-messages\">\r\n            <div className=\"ilv-chat-messages-header\">\r\n                <div className=\"ilv-media ilv-media-middle\">\r\n                    <div className=\"ilv-media-body\">\r\n                        <span className=\"ilv-chat-list-name\">{dest ? dest.Name : ''} {dest ? dest.Surname : ''}</span>\r\n                        <p className=\"ilv-chat-list-message\"></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    <div>{!showNewMessageIndicator ? <span></span> : <span className=\"new-message-indicator\">novas mensagens</span>}</div>\r\n\r\n            <div className=\"ilv-chat-messages-body\" ref=\"chat-body\">\r\n                {!msgs || msgs.length <= 0 || !msgs.map ? <div className=\"ilv-chat-messages-bubble center\">\r\n                    <i>{Messages.get(\"TextNoMessagesYet\")}</i>\r\n\r\n                </div> : msgs.map((msg, idx) => {\r\n                    var day = moment(conversation.Day);\r\n                    var creation = moment(msg.Creation);\r\n                    var diff = moment.range(creation, now).diff(\"hours\");\r\n                    return <div className={\"area-mensagem ilv-chat-messages-bubble \" + (msg.AuthorId == UserSession.get(\"user\").Id ? \"out\" : \"in\")}\r\n                                key={\"chat-msg-\" + idx}>\r\n<div className=\"ilv-media\">\r\n    <div className=\"ilv-media-body\">\r\n        {msg.Content}\r\n    </div>\r\n    <div className=\"ilv-media-right horario-mensagem\" style={{width: \"140%\", textAlign: \"right\"}}>\r\n                                <small>\r\n                                    {msg.Preview ? \"P\" : (diff < 24 ? creation.format('HH:mm') : creation.format('D/MM/YYYY HH:mm'))}\r\n                                </small>\r\n    </div>\r\n</div>\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <form className=\"ilv-chat-messages-footer\" onSubmit={this.sendMessage}>\r\n                <div className=\"ilv-input-group\">\r\n                    <input className=\"ilv-form-control ilv-form-control-kg\"\r\n                           type=\"text\"\r\n                           ref=\"message-input-mobile\"\r\n                           spellCheck={false}\r\n                           placeholder=\"Type a message...\" />\r\n<div className=\"ilv-input-group-btn\">\r\n    <button className=\"ilv-btn ilv-btn-lg ilv-btn-icon ilv-btn-neutral\" type='submit'>\r\n        <i className=\"ilv-icon material-icons md-24\">&#xE163;</i>\r\n    </button>\r\n</div>\r\n                </div>\r\n            </form>\r\n        </div>);\r\n    },\r\n\r\n    renderChatList() {\r\n        var items;\r\n        var user = UserSession.get(\"user\");\r\n        if (!this.state.contacts || this.state.contacts.length == 0) {\r\n            items = <i className=\"ilv-chat-list-item\">Nenhum contato realizado ainda.</i>;\r\n        } else {\r\n            items = this.state.contacts.map((contact, idx) => {\r\n                var lastMessage = contact.LastMessage;\r\n                var creation = lastMessage ? moment(lastMessage.Creation):null;\r\n                var diff = creation ? moment.range(creation, moment()).diff(\"hours\") : null;\r\n\r\n                var nomeCompleto = contact.PartnerName + contact.PartnerSurname;\r\n                if (this.refs['search-user'].value && nomeCompleto.toUpperCase().indexOf(this.refs['search-user'].value.toUpperCase()) < 0) {\r\n                    return <div></div>;\r\n                }\r\n\r\n                return <Link to={\"/notifications/messages/\"+contact.PartnerId} className=\"ilv-chat-list-item\" activeClassName=\"active\" key={\"contact-item-\"+idx}>\r\n\t\t\t\t    <div className=\"ilv-media anv-media-middle\">\r\n\t\t\t\t\t\t<div className=\"ilv-media-left\">\r\n\t\t\t\t\t\t    <div className=\"ilv-avatar ilv-avatar-circle ilv-avatar-md\">\r\n                                <img src={S(contact.PartnerImage).isEmpty() ? UserIcon : contact.PartnerImage} />\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"ilv-media-body\">\r\n                            <span className=\"ilv-chat-list-name\">{contact.PartnerName} {contact.PartnerSurname}</span>\r\n\t\t\t\t\t\t\t<p className=\"ilv-chat-list-message\">{contact.LastMessage ? contact.LastMessage.Content : \"\"}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"ilv-media-right\">\r\n                            <small className=\"ilv-text-muted\">\r\n                                {diff !== null ? (diff < 24 ? creation.format('HH:mm') : creation.format('D/MM/YYYY HH:mm')) : \"\"}\r\n                            </small>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t    </div>\r\n\t\t\t    </Link>;\r\n            });\r\n        }\r\n\r\n        return <div className=\"ilv-chat-list\">\r\n\t\t    <div className=\"ilv-chat-list-header hidden-md-down\">\r\n\t\t\t    <div className=\"ilv-media ilv-media-middle\">\r\n\t\t\t\t    <div className=\"ilv-media-body\">\r\n\t\t\t\t\t\t<div className=\"ilv-avatar ilv-avatar-circle ilv-avatar-md\">\r\n                            <img src={S(user ? user.Image : '').isEmpty() ? UserIcon : user.Image} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t    </div>\r\n\t\t\t\t\t<div className=\"ilv-media-right\">\r\n\t\t\t\t\t\t<button className=\"ilv-btn ilv-btn-icon ilv-btn-clean\">\r\n                            <i className=\"ilv-icon material-icons md-24\">&#xE0CA;</i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t    </div>\r\n\t\t    </div>\r\n\t\t\t<div className=\"ilv-chat-list-search\">\r\n\t\t\t\t<div className=\"ilv-input-group\">\r\n\t\t\t        <input ref=\"search-user\" className=\"ilv-form-control\" type=\"search\" placeholder=\"Search or start a new chat...\" />\r\n\t\t\t\t\t<div className=\"ilv-input-group-btn hidden-md-down\">\r\n\t\t\t\t\t\t<button className=\"ilv-btn ilv-btn-icon ilv-btn-neutral\">\r\n                            <i className=\"ilv-icon material-icons md-18\">&#xE8B6;</i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n            {items}\r\n        </div>;\r\n    },\r\n\r\n\r\n\r\n    renderChatListMobile() {\r\n        var items;\r\n        var user = UserSession.get(\"user\");\r\n        if (!this.state.contacts || this.state.contacts.length == 0) {\r\n            items = <i className=\"ilv-chat-list-item\">Nenhum contato realizado ainda.</i>;\r\n        } else {\r\n            items = this.state.contacts.map((contact, idx) => {\r\n                var lastMessage = contact.LastMessage;\r\n                var creation = lastMessage ? moment(lastMessage.Creation):null;\r\n                var diff = creation ? moment.range(creation, moment()).diff(\"hours\") : null;\r\n\r\n                var nomeCompleto = contact.PartnerName + contact.PartnerSurname;\r\n                if (this.refs['search-user'].value && nomeCompleto.toUpperCase().indexOf(this.refs['search-user'].value.toUpperCase()) < 0) {\r\n                    return <div></div>;\r\n                }\r\n\r\n                return <Link to={\"/notifications/messages/\"+contact.PartnerId} \r\n                             style={{borderBottom: \"none\", borderRadius: \"100%\"}}\r\n                    className=\"ilv-chat-list-item\" activeClassName=\"active\" key={\"contact-item-\"+idx}>\r\n\t\t\t\t    <div className=\"ilv-media anv-media-middle\">\r\n\t\t\t\t\t\t<div className=\"ilv-media-left\">\r\n\t\t\t\t\t\t    <div className=\"ilv-avatar ilv-avatar-circle ilv-avatar-md\">\r\n                                <img src={S(contact.PartnerImage).isEmpty() ? UserIcon : contact.PartnerImage} />\r\n\t\t\t\t\t\t    </div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t    </div>\r\n\t\t\t    </Link>;\r\n            });\r\n        }\r\n\r\n        return <div className=\"lista-fotos-usuarios\">\r\n                   {items}\r\n            </div>;\r\n\r\n        //return <div className=\"ilv-chat-list\">\r\n\t\t//    <div className=\"ilv-chat-list-header hidden-md-down\">\r\n\t\t//\t    <div className=\"ilv-media ilv-media-middle\">\r\n\t\t//\t\t    <div className=\"ilv-media-body\">\r\n\t\t//\t\t\t\t<div className=\"ilv-avatar ilv-avatar-circle ilv-avatar-md\">\r\n        //                    <img src={S(user ? user.Image : '').isEmpty() ? UserIcon : user.Image} />\r\n\t\t//\t\t\t\t</div>\r\n\t\t//\t\t    </div>\r\n\t\t//\t\t\t<div className=\"ilv-media-right\">\r\n\t\t//\t\t\t\t<button className=\"ilv-btn ilv-btn-icon ilv-btn-clean\">\r\n        //                    <i className=\"ilv-icon material-icons md-24\">&#xE0CA;</i>\r\n\t\t//\t\t\t\t</button>\r\n\t\t//\t\t\t</div>\r\n\t\t//\t    </div>\r\n\t\t//    </div>\r\n\t\t//\t<div className=\"ilv-chat-list-search\">\r\n\t\t//\t\t<div className=\"ilv-input-group\">\r\n\t\t//\t        <input ref=\"search-user\" className=\"ilv-form-control\" type=\"search\" placeholder=\"Search or start a new chat...\" />\r\n\t\t//\t\t\t<div className=\"ilv-input-group-btn hidden-md-down\">\r\n\t\t//\t\t\t\t<button className=\"ilv-btn ilv-btn-icon ilv-btn-neutral\">\r\n        //                    <i className=\"ilv-icon material-icons md-18\">&#xE8B6;</i>\r\n\t\t//\t\t\t\t</button>\r\n\t\t//\t\t\t</div>\r\n\t\t//\t\t</div>\r\n\t\t//\t</div>\r\n        //    {items}\r\n        //</div>;\r\n    },\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\t\t    <div className=\"ilv-chat hidden-md-down\">\r\n\t\t        {this.renderChatList()}\r\n\t\t        {this.renderChat()}\r\n\t\t    </div>\r\n\t\t    <div className=\"ilv-chat painel-chat-mobile hidden-md-up\" style={{maxHeight: \"64vh\"}}>\r\n\t\t        {this.renderChatListMobile()}\r\n\t\t        {this.renderChatMobile()}\r\n\t\t    </div>\r\n            </div>\r\n        );\r\n    }\r\n});\r\n"]}