{"version":3,"sources":["legacy\\jsx\\core\\store\\UserSession.jsx"],"names":["_","require","Backbone","S","Dispatcher","Messages","UserStore","UserSession","Model","extend","ACTION_REFRESH","ACTION_RETRIEVE_PROFESSIONAL_PROFILE","ACTION_AUTH_CALLBACK","ACTION_LOGIN","ACTION_LOGIN_FACEBOOK","ACTION_LOGIN_LINKEDIN","ACTION_LOGOUT","ACTION_CONFIRM_EMAIL","ACTION_CONFIRM_EMAIL_CHANGE","ACTION_CONFIRMATION_EMAIL","ACTION_RECOVER_PASSWORD","ACTION_CHECK_RECOVER_TOKEN","ACTION_RESET_PASSWORD","ACTION_FAVORITE_USER","ACTION_UNFAVORITE_USER","ACTION_UPDATE_CULTURE","ACTION_UPDATE_PASSWORD","ACTION_UPDATE_CONFIRMED_EMAIL","ACTION_UPDATE_EMAIL","ACTION_UPDATE_PROFILE","ACTION_UPDATE_ADDRESS","ACTION_UPDATE_PROFESSIONAL_BASIC","ACTION_UPDATE_PROFESSIONAL_EDUCATION","ACTION_UPDATE_PROFESSIONAL_CAREER","ACTION_UPDATE_PROFESSIONAL_SERVICES","ACTION_UPDATE_PROFESSIONAL_BANK_ACCOUNT","ACTION_UPDATE_PROCESS_STEPS","ACTION_SEND_SYSTEM_NOTIFICATIONS","ACTION_REMOVE_PICTURE","BACKEND_URL","url","$dispatcher","dispatch","payload","dispatchCallback","action","method","call","data","console","warn","initialize","dispatchToken","register","bind","sessionStorage","token","setAuthorization","set","loading","refreshStatus","localStorage","parse","response","opts","logged","user","accessLevel","permissions","clearStorage","removeItem","putStorage","userId","stayconnected","$","ajaxSetup","headers","initial","me","ajax","dataType","success","status","permClaims","Claims","filter","claim","type","map","value","trigger","get","error","errorMsg","location","assign","handleRequestErrors","collection","resp","JSON","responseText","err","Message","ModelState","errors","each","field","e","length","push","error_description","authCallback","login","email","password","access_token","userName","reload","loginWithFacebook","loginWithLinkedin","logout","promise","fail","onLogout","then","retrieveProfessionalProfile","confirmEmail","params","confirmEmailChange","confirmationEmail","responseJSON","recoverPassword","Email","isEmpty","formatWithKeys","checkRecoverToken","resetPassword","Password","ConfirmPassword","format","isAlphaNumeric","favoriteUser","id","favorites","Favorites","indexOf","unfavoriteUser","idx","splice","updateCulture","Culture","updatePassword","OldPassword","NewPassword","sendSystemNotifications","dadosMensagem","on","lista","qtde","forEach","assunto","en","mensagem","pt","es","Id","ACTION_ALL","updateConfirmedEmail","EmailChange","updateEmail","updateProfile","Birthdate","updateAddress","Professional","updateProfessionalBasic","updateProfessionalEducation","updateProfessionalCareer","updateProfessionalServices","updateProfessionalBankAccount","updateProcessSteps","contentType","stringify","ProcessSteps","removePicture","Image","module","exports"],"mappings":"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","file":"UserSession.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["/**\r\n    Este é um modelo global diferente dos outros. Ele é responsável por todo o controle de sessão\r\n    e autenticação/autorização do usuário do sistema.\r\n*/\r\nvar _ = require(\"underscore\");\r\nvar Backbone = require(\"backbone\");\r\nvar S = require(\"string\");\r\nvar Dispatcher = require(\"flux\").Dispatcher;\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\nvar UserStore = require(\"ilevus/jsx/core/store/User.jsx\");\r\n\r\nvar UserSession = Backbone.Model.extend({\r\n    ACTION_REFRESH: 'refreshStatus',\r\n    ACTION_RETRIEVE_PROFESSIONAL_PROFILE: 'retrieveProfessionalProfile',\r\n    ACTION_AUTH_CALLBACK: 'authCallback',\r\n    ACTION_LOGIN: 'login',\r\n    ACTION_LOGIN_FACEBOOK: 'loginWithFacebook',\r\n    ACTION_LOGIN_LINKEDIN: 'loginWithLinkedin',\r\n    ACTION_LOGOUT: 'logout',\r\n    ACTION_CONFIRM_EMAIL: 'confirmEmail',\r\n    ACTION_CONFIRM_EMAIL_CHANGE: 'confirmEmailChange',\r\n    ACTION_CONFIRMATION_EMAIL: 'confirmationEmail',\r\n    ACTION_RECOVER_PASSWORD: 'recoverPassword',\r\n    ACTION_CHECK_RECOVER_TOKEN: 'checkRecoverToken',\r\n    ACTION_RESET_PASSWORD: 'resetPassword',\r\n\r\n    ACTION_FAVORITE_USER: 'favoriteUser',\r\n    ACTION_UNFAVORITE_USER: 'unfavoriteUser',\r\n\r\n    ACTION_UPDATE_CULTURE: 'updateCulture',\r\n    ACTION_UPDATE_PASSWORD: 'updatePassword',\r\n    ACTION_UPDATE_CONFIRMED_EMAIL: 'updateConfirmedEmail',\r\n    ACTION_UPDATE_EMAIL: 'updateEmail',\r\n    ACTION_UPDATE_PROFILE: 'updateProfile',\r\n    ACTION_UPDATE_ADDRESS: 'updateAddress',\r\n    ACTION_UPDATE_PROFESSIONAL_BASIC: 'updateProfessionalBasic',\r\n    ACTION_UPDATE_PROFESSIONAL_EDUCATION: 'updateProfessionalEducation',\r\n    ACTION_UPDATE_PROFESSIONAL_CAREER: 'updateProfessionalCareer',\r\n    ACTION_UPDATE_PROFESSIONAL_SERVICES: 'updateProfessionalServices',\r\n    ACTION_UPDATE_PROFESSIONAL_BANK_ACCOUNT: 'updateProfessionalBankAccount',\r\n    ACTION_UPDATE_PROCESS_STEPS: 'updateProcessSteps',\r\n    ACTION_SEND_SYSTEM_NOTIFICATIONS: 'sendSystemNotifications',\r\n\r\n    ACTION_REMOVE_PICTURE: 'removePicture',\r\n\r\n    BACKEND_URL: BACKEND_URL,\r\n    url: BACKEND_URL + \"User\",\r\n    $dispatcher: new Dispatcher(),\r\n    dispatch(payload) {\r\n        this.$dispatcher.dispatch(payload);\r\n    },\r\n    dispatchCallback(payload) {\r\n        if (payload.action) {\r\n            var method = this[payload.action];\r\n            if (typeof method === 'function') {\r\n                method.call(this, payload.data);\r\n            } else {\r\n                console.warn(\"UserSession: The action (method)\", payload.action, \"is not defined.\");\r\n            }\r\n        } else {\r\n            console.warn(\"UserSession: The dispatching action must be defined.\\n\", payload);\r\n        }\r\n    },\r\n    initialize() {\r\n        this.dispatchToken = this.$dispatcher.register(this.dispatchCallback.bind(this));\r\n        if (sessionStorage.token && (sessionStorage.token != \"\")) {\r\n            this.setAuthorization(sessionStorage.token);\r\n            this.set({ loading: true });\r\n            this.refreshStatus(true);\r\n        } else if (localStorage.token && (localStorage.token != \"\")) {\r\n            this.setAuthorization(localStorage.token);\r\n            this.set({ loading: true });\r\n            this.refreshStatus(true);\r\n        } else {\r\n            this.set({ loading: false });\r\n        }\r\n    },\r\n\r\n    parse(response, opts) {\r\n        return response.data ? {\r\n            logged: true,\r\n            user: response.data.user,\r\n            accessLevel: response.data.accessLevel,\r\n            permissions: response.data.permissions\r\n        } : {\r\n            logged: false\r\n        };\r\n    },\r\n\r\n    clearStorage() {\r\n        localStorage.removeItem(\"token\");\r\n        localStorage.removeItem(\"stayconnected\");\r\n        sessionStorage.removeItem(\"token\");\r\n        sessionStorage.removeItem(\"stayconnected\");\r\n    },\r\n    putStorage(token, userId, stayconnected) {\r\n        if (stayconnected) {\r\n            localStorage.token = token;\r\n            localStorage.stayconnected = stayconnected;\r\n        }\r\n        sessionStorage.token = token;\r\n        sessionStorage.stayconnected = stayconnected;\r\n    },\r\n    setAuthorization(token) {\r\n        $.ajaxSetup({\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + token\r\n            }\r\n        });\r\n    },\r\n\r\n    refreshStatus(initial) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: me.url + \"/UserInfo\",\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                var permClaims = !data.Claims ? [] : data.Claims.filter((claim) => {\r\n                    if (claim.type == \"IlevusUserPermission\") {\r\n                        return true;;\r\n                    }\r\n                    return false;\r\n                });\r\n                me.set({\r\n                    \"logged\": true,\r\n                    \"permissions\": permClaims.map((claim) => { return claim.value; }),\r\n                    \"user\": data\r\n                });\r\n                me.trigger(\"login\", me);\r\n                if (me.get(\"loading\")) {\r\n                    me.set({ loading: false });\r\n                    me.trigger(\"loaded\", true);\r\n                } else\r\n                    me.trigger(\"update\", me);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                if (me.get(\"loading\")) {\r\n                    me.set({ loading: false });\r\n                }\r\n                me.clearStorage();\r\n                location.assign(\"#/\");\r\n            }\r\n        });\r\n    },\r\n\r\n    handleRequestErrors(collection, opts) {\r\n        console.error(\"Error ocurred:\\n\", collection, \"\\n\", opts);\r\n        if (opts.status == 400) {\r\n            // Validation errors\r\n            var resp;\r\n            try {\r\n                resp = JSON.parse(opts.responseText);\r\n            } catch (err) {\r\n                resp = {\r\n                    Message: Messages.get(\"TextUnexpectedError\")\r\n                };\r\n            }\r\n            if (resp.ModelState) {\r\n                var errors = [];\r\n                _.each(resp.ModelState, (field) => {\r\n                    for (var e = 0; e < field.length; e++) {\r\n                        errors.push(field[e]);\r\n                        errors.push(\"&nbsp;\");\r\n                    }\r\n                });\r\n                this.trigger(\"fail\", errors);\r\n            } else if (resp.error_description) {\r\n                this.trigger(\"fail\", resp.error_description);\r\n            } else {\r\n                this.trigger(\"fail\", resp.Message);\r\n            }\r\n        } else {\r\n            this.trigger(\"fail\", Messages.get(\"TextUnexpectedError\"));\r\n        }\r\n    },\r\n\r\n    authCallback(token) {\r\n        var me = this;\r\n        me.putStorage(token, null, true);\r\n        me.setAuthorization(token);\r\n        me.refreshStatus();\r\n    },\r\n\r\n    login(data) {\r\n        var me = this,\r\n            stayconnected = data.stayconnected,\r\n\t\t\terrors = [];\r\n        if (!(data.email) || (data.email == '')) {\r\n            errors.push(Messages.get(\"TextTypeYourEmail\"));\r\n        }\r\n        if (!(data.password) || (data.password == '')) {\r\n            errors.push(Messages.get(\"TextTypeYourPassword\"));\r\n        }\r\n\r\n        if (errors.length > 0) {\r\n            me.trigger(\"fail\", errors);\r\n        } else {\r\n            $.ajax({\r\n                method: \"POST\",\r\n                url: BACKEND_URL + \"Token\",\r\n                dataType: 'json',\r\n                data: {\r\n                    \"grant_type\": \"password\",\r\n                    \"username\": data.email,\r\n                    \"Password\": data.password\r\n                },\r\n                success(data, status, opts) {\r\n                    me.putStorage(data.access_token, data.userName, stayconnected);\r\n                    location.reload();\r\n                },\r\n                error(opts, status, errorMsg) {\r\n                    me.handleRequestErrors([], opts);\r\n                }\r\n            });\r\n        }\r\n    },\r\n    loginWithFacebook(token) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/LoginWithFacebook\",\r\n            dataType: 'json',\r\n            data: {\r\n                \"AccessToken\": token\r\n            },\r\n            success(data, status, opts) {\r\n                me.putStorage(data.access_token, data.userName, true);\r\n                location.reload();\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n    loginWithLinkedin(token) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/LoginWithLinkedin\",\r\n            dataType: 'json',\r\n            data: {\r\n                \"AccessToken\": token\r\n            },\r\n            success(data, status, opts) {\r\n                me.putStorage(data.access_token, data.userName, true);\r\n                location.reload();\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    logout() {\r\n        var me = this;\r\n        var promise = $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/Logout\",\r\n            dataType: 'json'\r\n        }).fail(onLogout).then(onLogout);\r\n        function onLogout() {\r\n            me.set({ logged: false, permissions: [], user: null });\r\n            $.ajaxSetup({\r\n                headers: {\r\n                    \"Authorization\": null\r\n                }\r\n            });\r\n            me.clearStorage();\r\n            me.trigger(\"logout\");\r\n            location.assign(\"/\");            \r\n        }\r\n    },\r\n\r\n    retrieveProfessionalProfile() {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: me.url + \"/ProfessionalProfile\",\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"professionalprofile\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    confirmEmail(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/ConfirmEmail\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"emailconfirmed\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    confirmEmailChange(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/ConfirmEmailChange\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"emailconfirmed\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    confirmationEmail(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/EmailConfirmation\",\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"confirmationemail\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.trigger(\"confirmationemailfail\", opts.responseJSON.Message);\r\n            }\r\n        });\r\n    },\r\n\r\n    recoverPassword(params) {\r\n        var me = this;\r\n        if (S(params.Email).isEmpty()) {\r\n            me.trigger(\"fail\", Messages.formatWithKeys(\"ValidationRequired\", ['LabelEmail']));\r\n            return;\r\n        }\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/RecoverPassword\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"recoverpassword\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n    checkRecoverToken(token) {\r\n        var me = this;\r\n        if (typeof token !== 'string') {\r\n            console.warn(\"UserSession: You must provide a string token to be checked.\\n\", token);\r\n            return;\r\n        }\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: BACKEND_URL + \"user/reset/\" + token,\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"recovertoken\", true);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.trigger(\"recovertoken\", false);\r\n            }\r\n        });\r\n    },\r\n    resetPassword(params) {\r\n        var me = this;\r\n        if (params.Password !== params.ConfirmPassword) {\r\n            me.trigger(\"fail\", Messages.get(\"ValidationPasswordsDontMatch\"));\r\n            return;\r\n        }\r\n        if (S(params.Password).length < 6) {\r\n            me.trigger(\"fail\", Messages.format(\"ValidationPasswordLength\", [6]));\r\n            return;\r\n        }\r\n        if (S(params.Password).isAlphaNumeric()) {\r\n            me.trigger(\"fail\", Messages.get(\"ValidationPasswordFormat\"));\r\n            return;\r\n        }\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/ResetPassword\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"resetpassword\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    favoriteUser(id) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/Favorite/\" + id,\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                var favorites = me.get(\"user\").Favorites;\r\n                if (favorites.indexOf(id) < 0) {\r\n                    favorites.push(id);\r\n                }\r\n                me.trigger(\"user-favorite\", id);\r\n                me.trigger(\"update\", me);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n    unfavoriteUser(id) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/Unfavorite/\" + id,\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                var favorites = me.get(\"user\").Favorites;\r\n                var idx = favorites.indexOf(id);\r\n                if (idx >= 0) {\r\n                    favorites.splice(idx, 1);\r\n                }\r\n                me.trigger(\"user-unfavorite\", id);\r\n                me.trigger(\"update\", me);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateCulture(params) {\r\n        var me = this;\r\n\r\n        if (S(params.Culture).isEmpty()) {\r\n            me.trigger(\"fail\", Messages.formatWithKeys(\"ValidationRequired\", ['LabelLanguage']));\r\n            return;\r\n        }\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/ChangeCulture\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.putStorage(data.access_token, data.userName, sessionStorage.stayconnected || localStorage.stayconnected);\r\n                location.reload();\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updatePassword(params) {\r\n        var me = this;\r\n\r\n        if (S(params.OldPassword).isEmpty()) {\r\n            me.trigger(\"fail\", Messages.formatWithKeys(\"ValidationRequired\", ['LabelPasswordCurrent']));\r\n            return;\r\n        }\r\n        if (S(params.NewPassword).isEmpty()) {\r\n            me.trigger(\"fail\", Messages.formatWithKeys(\"ValidationRequired\", ['LabelPasswordNew']));\r\n            return;\r\n        }\r\n        if (S(params.ConfirmPassword).isEmpty()) {\r\n            me.trigger(\"fail\", Messages.formatWithKeys(\"ValidationRequired\", ['LabelPasswordConfirm']));\r\n            return;\r\n        }\r\n        if (params.NewPassword !== params.ConfirmPassword) {\r\n            me.trigger(\"fail\", Messages.get(\"ValidationPasswordsDontMatchOnChange\"));\r\n            return;\r\n        }\r\n        if (S(params.NewPassword).length < 6) {\r\n            me.trigger(\"fail\", Messages.format(\"ValidationPasswordLength\", [6]));\r\n            return;\r\n        }\r\n        if (S(params.NewPassword).isAlphaNumeric()) {\r\n            me.trigger(\"fail\", Messages.get(\"ValidationPasswordFormat\"));\r\n            return;\r\n        }\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/ChangePassword\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"updatepassword\", true);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    sendSystemNotifications(dadosMensagem) {\r\n        var me = this;\r\n\r\n        UserStore.on(\"all\", (lista) => {\r\n            if (!lista || lista.length == 0) return;\r\n\r\n            var qtde = 0;\r\n\r\n            lista.forEach(user => {\r\n                if (dadosMensagem.email && qtde > 0) {\r\n                    return;\r\n                }\r\n\r\n                qtde++;\r\n\r\n                var email = dadosMensagem.email ? dadosMensagem.email : user.Email;\r\n                var assunto = dadosMensagem.en.assunto;\r\n                var mensagem = dadosMensagem.en.mensagem;\r\n\r\n                switch (user.Culture) {\r\n                    case 'pt-br':\r\n                        assunto = dadosMensagem.pt.assunto;\r\n                        mensagem = dadosMensagem.pt.mensagem;\r\n                        break;\r\n                    case 'es':\r\n                        assunto = dadosMensagem.es.assunto;\r\n                        mensagem = dadosMensagem.es.mensagem;\r\n                        break;\r\n                }\r\n\r\n                $.ajax({\r\n                    method: \"POST\",\r\n                    url: me.url + \"/SendEmail?assunto=\" + assunto + \"&mensagem=\" + mensagem + '&email=' + email\r\n                        + (dadosMensagem.email ? ('&id=x') : ('&id=' + user.Id)),\r\n                    dataType: 'json',\r\n                    data: {\r\n                        email: email,\r\n                        assunto: assunto,\r\n                        mensagem: mensagem,                        \r\n                    },\r\n                    success(data, status, opts) {\r\n                        //me.trigger(\"sendSystemNotifications-ok\", true);\r\n                    },\r\n                    error(opts, status, errorMsg) {\r\n                        //me.trigger(\"sendSystemNotifications-ok\", true);\r\n                        me.handleRequestErrors([], opts);\r\n                    }\r\n                });\r\n\r\n                if (dadosMensagem.email)\r\n                    return;\r\n            });\r\n            me.trigger(\"sendSystemNotifications-ok\", true);\r\n        }, me);\r\n\r\n        UserStore.dispatch({\r\n            action: UserStore.ACTION_ALL\r\n        });\r\n    },\r\n\r\n    updateConfirmedEmail(email) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateEmail\",\r\n            dataType: 'json',\r\n            data: {\r\n                Email: email\r\n            },\r\n            success(data, status, opts) {\r\n                me.get(\"user\").EmailChange = email;\r\n                me.trigger(\"update-confirmed-email\");\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateEmail(email) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateEmail\",\r\n            dataType: 'json',\r\n            data: {\r\n                Email: email\r\n            },\r\n            success(data, status, opts) {\r\n                me.putStorage(data.access_token, data.userName, sessionStorage.stayconnected || localStorage.stayconnected);\r\n                location.reload();\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateProfile(params) {\r\n        var me = this;\r\n        if (S(params.Birthdate).isEmpty()) {\r\n            me.trigger(\"fail\", Messages.formatWithKeys(\"ValidationRequired\", ['LabelBirthdate']));\r\n            return;\r\n        }\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateProfile\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.set({ user: data });\r\n                me.trigger(\"updateprofile\", me);\r\n                me.trigger(\"update\", me);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateAddress(params) {\r\n        var me = this;\r\n        /*if (params.NewPassword !== params.ConfirmPassword) {\r\n\t        me.trigger(\"fail\", \"As senhas digitadas não são iguais.\");\r\n\t        return;\r\n\t    }*/\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateAddress\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.set({ user: data });\r\n                me.trigger(\"updateaddress\", me);\r\n                me.trigger(\"professionalprofile\", data.Professional);\r\n                me.trigger(\"update\", me);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateProfessionalBasic(params) {\r\n        var me = this;\r\n        /*if (params.NewPassword !== params.ConfirmPassword) {\r\n\t        me.trigger(\"fail\", \"As senhas digitadas não são iguais.\");\r\n\t        return;\r\n\t    }*/\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateProfessionalBasic\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"professionalprofile\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateProfessionalEducation(params) {\r\n        var me = this;\r\n        /*if (params.NewPassword !== params.ConfirmPassword) {\r\n\t        me.trigger(\"fail\", \"As senhas digitadas não são iguais.\");\r\n\t        return;\r\n\t    }*/\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateProfessionalEducation\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"professionalprofile\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateProfessionalCareer(params) {\r\n        var me = this;\r\n        /*if (params.NewPassword !== params.ConfirmPassword) {\r\n\t        me.trigger(\"fail\", \"As senhas digitadas não são iguais.\");\r\n\t        return;\r\n\t    }*/\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateProfessionalCareer\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"professionalprofile\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateProfessionalServices(params) {\r\n        var me = this;\r\n        /*if (params.NewPassword !== params.ConfirmPassword) {\r\n\t        me.trigger(\"fail\", \"As senhas digitadas não são iguais.\");\r\n\t        return;\r\n\t    }*/\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateProfessionalServices\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"professionalprofile\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateProfessionalBankAccount(params) {\r\n        var me = this;\r\n        /*if (params.NewPassword !== params.ConfirmPassword) {\r\n\t        me.trigger(\"fail\", \"As senhas digitadas não são iguais.\");\r\n\t        return;\r\n\t    }*/\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateProfessionalBankAccount\",\r\n            dataType: 'json',\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"professionalprofile\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    updateProcessSteps(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/UpdateProcessSteps\",\r\n            dataType: 'json',\r\n            contentType: \"application/json\",\r\n            data: JSON.stringify(params),\r\n            success(data, status, opts) {\r\n                me.get(\"user\").Professional.Professional.ProcessSteps = data;\r\n                me.trigger(\"update-process-steps\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    removePicture() {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/RemovePicture\",\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.get(\"user\").Image = null;\r\n                me.trigger(\"update\", me);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n});\r\n\r\nmodule.exports = new UserSession();\r\n"]}