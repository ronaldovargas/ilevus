{"version":3,"sources":["legacy\\jsx\\core\\view\\admin\\AdminPanelSubscriptionsInvoice.jsx"],"names":["Numeral","require","React","Link","Toastr","FinancialStore","SubscriptionStatus","UserSession","LoadingGauge","Messages","module","exports","createClass","contextTypes","router","PropTypes","object","getInitialState","loading","componentDidMount","me","on","invoice","setState","loadInvoice","props","params","id","componentWillReceiveProps","newProps","componentWillUnmount","off","dispatch","action","ACTION_RETRIEVE_SUBSCRIPTION_INVOICE","data","renderItems","items","get","map","item","index","Type","Amount","format","state","render","Id","Customer","Fullname","Plan","Name","CreationDate","Day","Month","Year","Hour","Minute","Status","Description","Items"],"mappings":"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","file":"AdminPanelSubscriptionsInvoice.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar Numeral = require(\"numeral\");\r\nvar React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar FinancialStore = require(\"ilevus/jsx/core/store/Financial.jsx\");\r\nvar SubscriptionStatus = require(\"ilevus/jsx/core/store/moip/SubscriptionStatus.json\");\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {\r\n        return {\r\n            loading: true\r\n        };\r\n    },\r\n    componentDidMount() {\r\n        var me = this;\r\n        FinancialStore.on(\"retrieve-subscription-invoice\", (invoice) => {\r\n            me.setState({\r\n                loading: false,\r\n                invoice: invoice,\r\n            });\r\n        }, me);\r\n\r\n        this.loadInvoice(this.props.params.id);\r\n    },\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.params.id != newProps.params.id) {\r\n            this.loadInvoice(newProps.params.id);\r\n        }\r\n    },\r\n    componentWillUnmount() {\r\n        FinancialStore.off(null, null, this);\r\n    },\r\n\r\n    loadInvoice(id) {\r\n        FinancialStore.dispatch({\r\n            action: FinancialStore.ACTION_RETRIEVE_SUBSCRIPTION_INVOICE,\r\n            data: id,\r\n        });\r\n    },\r\n\r\n    renderItems(items) {\r\n        return (<table className=\"ilv-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>{Messages.get(\"LabelDescription\")}</th>\r\n                    <th>{Messages.get(\"LabelValue\")}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {items.map((item, index) => {\r\n                    return (<tr key={\"item-\" + index}>\r\n                        <td>\r\n                            {item.Type}\r\n                        </td>\r\n                        <td>\r\n                            R${Numeral(item.Amount / 100).format(\"0,0.00\")}\r\n                        </td>\r\n                    </tr>);\r\n                })}\r\n                <tr>\r\n                    <td>\r\n                        <b>{Messages.get(\"LabelTotal\")}</b>\r\n                    </td>\r\n                    <td>\r\n                        <b>R${Numeral(this.state.invoice.Amount/100).format(\"0,0.00\")}</b>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>);\r\n    },\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <LoadingGauge />;\r\n        }\r\n        var invoice = this.state.invoice;\r\n        return (<div>\r\n            <h2>{Messages.get(\"LabelInvoice\")} {invoice.Id}</h2>\r\n            <div className=\"ilv-card\">\r\n                <div className=\"ilv-card-header\">\r\n                    <h4>\r\n                        {invoice.Customer.Fullname}\r\n                    </h4>\r\n                </div>\r\n                <div className=\"ilv-card-body\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col col-md-6\">\r\n                            <div className=\"ilv-small\">{Messages.get(\"LabelPlan\")}</div>\r\n                            <b>{invoice.Plan.Name}</b>\r\n                        </div>\r\n                        <div className=\"col col-md-6\">\r\n                            <div className=\"ilv-small\">{Messages.get(\"LabelCreatedAt\")}</div>\r\n                            <b>{invoice.CreationDate.Day}/{invoice.CreationDate.Month}/{invoice.CreationDate.Year}\r\n                                &nbsp;{Messages.get(\"LabelAt\")} {invoice.CreationDate.Hour}:{invoice.CreationDate.Minute}\r\n                            </b>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col col-md-6\">\r\n                            <div className=\"ilv-small\">{Messages.get(\"LabelStatus\")}</div>\r\n                            <b>{invoice.Status.Description}</b>\r\n                        </div>\r\n                        <div className=\"col col-md-6\">\r\n                            <div className=\"ilv-small\">{Messages.get(\"LabelTotal\")}</div>\r\n                            <b>R${Numeral(invoice.Amount / 100).format(\"0,0.00\")}</b>\r\n                        </div>\r\n                    </div>\r\n\r\n                     <hr className=\"mb-4\" />\r\n                    <div className=\"mb-4\"><strong>{Messages.get(\"LabelInvoiceDetail\")}</strong></div>\r\n\r\n                    {this.renderItems(invoice.Items)}\r\n\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n});\r\n"]}