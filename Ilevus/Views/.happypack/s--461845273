var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import { fbAppId, googleClientId } from 'config';
import { fromSocial } from 'store/selectors';
import { socialLoginPrepare, socialLoginRequest, modalHide } from 'store/actions';

import { LoginModal } from 'components';

var LoginModalContainer = function (_Component) {
  _inherits(LoginModalContainer, _Component);

  function LoginModalContainer() {
    _classCallCheck(this, LoginModalContainer);

    return _possibleConstructorReturn(this, (LoginModalContainer.__proto__ || Object.getPrototypeOf(LoginModalContainer)).apply(this, arguments));
  }

  _createClass(LoginModalContainer, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.props.prepareGoogle();
      this.props.prepareFacebook();
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(LoginModal, this.props);
    }
  }]);

  return LoginModalContainer;
}(Component);

LoginModalContainer.propTypes = {
  prepareGoogle: PropTypes.func.isRequired,
  prepareFacebook: PropTypes.func.isRequired
};


var mapStateToProps = function mapStateToProps(state) {
  return {
    user: fromSocial.getUser(state)
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    prepareGoogle: function prepareGoogle() {
      return dispatch(socialLoginPrepare('google', { clientId: googleClientId }));
    },
    prepareFacebook: function prepareFacebook() {
      return dispatch(socialLoginPrepare('facebook', { clientId: fbAppId }));
    },
    onFacebookLogin: function onFacebookLogin() {
      return dispatch(socialLoginRequest('facebook'));
    },
    onGoogleLogin: function onGoogleLogin() {
      return dispatch(socialLoginRequest('google'));
    },
    onClose: function onClose() {
      return dispatch(modalHide('login'));
    }
  };
};

var _default = connect(mapStateToProps, mapDispatchToProps)(LoginModalContainer);

export default _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(LoginModalContainer, 'LoginModalContainer', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/containers/LoginModal.js');

  __REACT_HOT_LOADER__.register(mapStateToProps, 'mapStateToProps', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/containers/LoginModal.js');

  __REACT_HOT_LOADER__.register(mapDispatchToProps, 'mapDispatchToProps', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/containers/LoginModal.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/containers/LoginModal.js');
}();

;