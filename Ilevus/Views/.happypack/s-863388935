
var Numeral = require("numeral");
var React = require("react");
var Link = require("react-router").Link;
var Toastr = require("toastr");

var FinancialStore = require("ilevus/jsx/core/store/Financial.jsx");
var SubscriptionStatus = require("ilevus/jsx/core/store/moip/SubscriptionStatus.json");
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");

var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object
    },
    getInitialState: function getInitialState() {
        return {
            loading: true
        };
    },
    componentDidMount: function componentDidMount() {
        var _this = this;

        var me = this;
        FinancialStore.on("retrieve-subscription-detail", function (subscription) {
            me.setState({
                loading: !_this.state.invoices,
                subscription: subscription
            });
        }, me);
        FinancialStore.on("retrieve-subscription-invoices", function (invoices) {
            me.setState({
                loading: !_this.state.subscription,
                invoices: invoices
            });
        }, me);

        this.loadSubscription(this.props.params.id);
    },
    componentWillReceiveProps: function componentWillReceiveProps(newProps) {
        if (this.props.params.id != newProps.params.id) {
            this.loadSubscription(newProps.params.id);
        }
    },
    componentWillUnmount: function componentWillUnmount() {
        FinancialStore.off(null, null, this);
    },
    loadSubscription: function loadSubscription(id) {
        FinancialStore.dispatch({
            action: FinancialStore.ACTION_RETRIEVE_SUBSCRIPTION_DETAIL,
            data: id
        });
        this.loadInvoices(id);
    },
    loadInvoices: function loadInvoices(id) {
        FinancialStore.dispatch({
            action: FinancialStore.ACTION_RETRIEVE_SUBSCRIPTION_INVOICES,
            data: id
        });
    },
    renderInvoices: function renderInvoices(invoices) {
        if (!invoices || invoices.length <= 0) {
            return React.createElement(
                "i",
                null,
                Messages.get("TextNoCreditCardYet")
            );
        }
        return React.createElement(
            "table",
            { className: "ilv-table" },
            React.createElement(
                "thead",
                null,
                React.createElement(
                    "tr",
                    null,
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelCode")
                    ),
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelPlan")
                    ),
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelCreatedAt")
                    ),
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelStatus")
                    ),
                    React.createElement(
                        "th",
                        null,
                        Messages.get("LabelTotal")
                    )
                )
            ),
            React.createElement(
                "tbody",
                null,
                invoices.map(function (invoice, index) {
                    console.log(invoice);
                    return React.createElement(
                        "tr",
                        { key: "invoice-" + index },
                        React.createElement(
                            "td",
                            null,
                            React.createElement(
                                Link,
                                { to: "/admin/subscriptions/invoice/" + invoice.Id },
                                invoice.Id
                            )
                        ),
                        React.createElement(
                            "td",
                            null,
                            invoice.Plan.Name
                        ),
                        React.createElement(
                            "td",
                            null,
                            invoice.CreationDate.Day,
                            "/",
                            invoice.CreationDate.Month,
                            "/",
                            invoice.CreationDate.Year
                        ),
                        React.createElement(
                            "td",
                            null,
                            invoice.Status.Description
                        ),
                        React.createElement(
                            "td",
                            null,
                            "R$",
                            Numeral(invoice.Amount / 100).format("0,0.00")
                        )
                    );
                })
            )
        );
    },
    render: function render() {
        if (this.state.loading) {
            return React.createElement(LoadingGauge, null);
        }
        var sub = this.state.subscription;
        return React.createElement(
            "div",
            null,
            React.createElement(
                "h2",
                null,
                Messages.get("LabelSubscriptionDetail")
            ),
            React.createElement(
                "div",
                { className: "ilv-card" },
                React.createElement(
                    "div",
                    { className: "ilv-card-header" },
                    React.createElement(
                        "h4",
                        null,
                        sub.Customer.Fullname
                    )
                ),
                React.createElement(
                    "div",
                    { className: "ilv-card-body" },
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelCode")
                            ),
                            React.createElement(
                                "b",
                                null,
                                sub.Code
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelCreatedAt")
                            ),
                            React.createElement(
                                "b",
                                null,
                                sub.CreationDate.Day,
                                "/",
                                sub.CreationDate.Month,
                                "/",
                                sub.CreationDate.Year,
                                "\xA0",
                                Messages.get("LabelAt"),
                                " ",
                                sub.CreationDate.Hour,
                                ":",
                                sub.CreationDate.Minute
                            )
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "row mb-2" },
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelStatus")
                            ),
                            React.createElement(
                                "b",
                                null,
                                SubscriptionStatus[sub.Status]
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "col col-md-6" },
                            React.createElement(
                                "div",
                                { className: "ilv-small" },
                                Messages.get("LabelNextInvoiceDate")
                            ),
                            React.createElement(
                                "b",
                                null,
                                sub.NextInvoiceDate.Day,
                                "/",
                                sub.NextInvoiceDate.Month,
                                "/",
                                sub.NextInvoiceDate.Year
                            )
                        )
                    ),
                    React.createElement("hr", { className: "mb-4" }),
                    React.createElement(
                        "div",
                        { className: "mb-4" },
                        React.createElement(
                            "strong",
                            null,
                            Messages.get("LabelInvoices")
                        )
                    ),
                    this.renderInvoices(this.state.invoices)
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/admin/AdminPanelSubscriptionsDetails.jsx");
}();

;