"use strict";

var React = require("react");
var Link = require("react-router").Link;
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");
var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");
var ErrorAlert = require("ilevus/jsx/core/widget/ErrorAlert.jsx");
var Modal = require("ilevus/jsx/core/widget/Modal.jsx");
var Messages = require("ilevus/jsx/core/util/Messages.jsx");

var AppLogo = require("ilevus/img/logo.png");

module.exports = React.createClass({
				displayName: "exports",

				contextTypes: {
								router: React.PropTypes.object
				},
				getInitialState: function getInitialState() {
								return {
												loaded: !UserSession.get("loading")
								};
				},
				onSubmit: function onSubmit(evt) {
								evt.preventDefault();
								var data = {
												email: this.refs['email'].value,
												password: this.refs['password'].value,
												stayconnected: this.refs['stayconnected'].checked
								};
								UserSession.dispatch({
												action: UserSession.ACTION_LOGIN,
												data: data
								});
				},
				componentDidMount: function componentDidMount() {
								var me = this;

								if (!!UserSession.get("logged")) {
												me.context.router.push("/home");
								} else {
												UserSession.on("login", function (model) {
																me.context.router.push("/home");
												}, me);

												if (me.props.params && me.props.params.accessToken) {
																if (me.state.loaded) {
																				UserSession.dispatch({
																								action: UserSession.ACTION_AUTH_CALLBACK,
																								data: me.props.params.accessToken
																				});
																} else {
																				UserSession.on("loaded", function () {
																								UserSession.dispatch({
																												action: UserSession.ACTION_AUTH_CALLBACK,
																												data: me.props.params.accessToken
																								});
																				}, me);
																}
												} else {
																UserSession.on("loaded", function () {
																				me.setState({ loaded: true });
																}, me);
												}
								}
				},
				componentWillUnmount: function componentWillUnmount() {
								UserSession.off(null, null, this);
				},
				loginWithFacebook: function loginWithFacebook() {
								if (typeof FB != 'undefined') {
												var me = this;
												FB.login(function (response) {
																if (response.status === 'connected') {
																				UserSession.dispatch({
																								action: UserSession.ACTION_LOGIN_FACEBOOK,
																								data: response.authResponse.accessToken
																				});
																} else {
																				console.warn("Facebook not authorized:\n", response);
																}
												}, {
																scope: 'public_profile,email'
												});
								}
				},
				loginWithLinkedin: function loginWithLinkedin() {
								IN.User.authorize(function (arg) {});
				},
				render: function render() {
								if (!this.state.loaded) {
												return React.createElement(LoadingGauge, null);
								}
								return React.createElement(
												"div",
												{ className: "container" },
												React.createElement(
																"div",
																{ className: "row" },
																React.createElement(
																				"div",
																				{ className: "col-md-10 offset-sm-1 col-lg-8 offset-lg-2 col-xl-6 offset-xl-3" },
																				React.createElement(
																								"div",
																								{ className: "ilv-card mt-3" },
																								React.createElement(
																												"div",
																												{ className: "ilv-card-header" },
																												React.createElement(
																																"h3",
																																null,
																																Messages.get("TextSignIn")
																												)
																								),
																								React.createElement(
																												"div",
																												{ className: "ilv-card-body" },
																												React.createElement(
																																"fieldset",
																																{ className: "ilv-form-group" },
																																React.createElement(
																																				"a",
																																				{ className: "ilv-btn ilv-btn-lg ilv-btn-block ilv-btn-linkedin", href: "/api/User/LoginWithLinkedin" },
																																				Messages.get("LabelLoginWithLinkedin")
																																)
																												),
																												React.createElement(
																																"fieldset",
																																{ className: "ilv-form-group" },
																																React.createElement(
																																				"button",
																																				{ className: "ilv-btn ilv-btn-lg ilv-btn-block ilv-btn-facebook", onClick: this.loginWithFacebook },
																																				Messages.get("LabelLoginWithFacebook")
																																)
																												),
																												React.createElement("hr", null),
																												React.createElement(
																																"form",
																																{ onSubmit: this.onSubmit },
																																React.createElement(
																																				"fieldset",
																																				{ className: "ilv-form-group" },
																																				React.createElement(
																																								"label",
																																								{ className: "ilv-form-label", htmlFor: "email" },
																																								Messages.get("LabelEmail")
																																				),
																																				React.createElement("input", { className: "ilv-form-control ilv-form-control-lg", id: "email", name: "email", type: "email", ref: "email" })
																																),
																																React.createElement(
																																				"fieldset",
																																				{ className: "ilv-form-group" },
																																				React.createElement(
																																								"label",
																																								{ className: "ilv-form-label", htmlFor: "password" },
																																								Messages.get("LabelPassword")
																																				),
																																				React.createElement("input", { className: "ilv-form-control ilv-form-control-lg", id: "password", name: "password", type: "password", ref: "password" })
																																),
																																React.createElement(ErrorAlert, { store: UserSession }),
																																React.createElement(
																																				"fieldset",
																																				{ className: "ilv-form-group" },
																																				React.createElement(
																																								"div",
																																								{ className: "ilv-checkbox" },
																																								React.createElement(
																																												"label",
																																												{ htmlFor: "stay-connected" },
																																												React.createElement("input", { className: "ilv-control-input", type: "checkbox", id: "stay-connected", ref: "stayconnected" }),
																																												React.createElement("span", { className: "ilv-control-indicator" }),
																																												React.createElement(
																																																"span",
																																																{ className: "ilv-control-label" },
																																																Messages.get("LabelStayConnected")
																																												)
																																								)
																																				)
																																),
																																React.createElement(
																																				"fieldset",
																																				null,
																																				React.createElement("input", { type: "submit", value: Messages.get("LabelSignIn"), className: "ilv-btn ilv-btn-lg ilv-btn-primary ilv-btn-block" })
																																)
																												)
																								)
																				),
																				React.createElement(
																								"div",
																								{ className: "ilv-text-xs-center my-3" },
																								React.createElement(
																												"ul",
																												{ className: "ilv-nav ilv-nav-inline ilv-font-weight-semibold mb-1" },
																												React.createElement(
																																"li",
																																{ className: "ilv-nav-item" },
																																React.createElement(
																																				Link,
																																				{ className: "ilv-nav-link", to: "/signup" },
																																				Messages.get("TextSignUp")
																																)
																												),
																												React.createElement(
																																"li",
																																{ className: "ilv-nav-item" },
																																" \xB7 "
																												),
																												React.createElement(
																																"li",
																																{ className: "ilv-nav-item" },
																																React.createElement(
																																				Link,
																																				{ className: "ilv-nav-link", to: "/recover-password" },
																																				Messages.get("TextRecoverPassword")
																																)
																												)
																								)
																				)
																)
												)
								);
				}
});
;

var _temp = function () {
				if (typeof __REACT_HOT_LOADER__ === 'undefined') {
								return;
				}

				__REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/user/Login.jsx");
}();

;