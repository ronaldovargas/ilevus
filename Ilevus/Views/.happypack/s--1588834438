"use strict";

var React = require("react");
var S = require("string");
var Toastr = require("toastr");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

module.exports = React.createClass({
    displayName: "exports",

    propTypes: {
        education: React.PropTypes.object.isRequired,
        onSubmit: React.PropTypes.func.isRequired,
        onCancel: React.PropTypes.func.isRequired
    },
    getDefaultProps: function getDefaultProps() {
        return {
            education: {}
        };
    },
    getInitialState: function getInitialState() {
        return {
            edit: !!this.props.education.Institution,
            finished: !!this.props.education.Finished
        };
    },
    onSubmit: function onSubmit(event) {
        event.preventDefault();
        var data = {
            Institution: S(this.refs['field-institution'].value).escapeHTML().s,
            Type: S(this.refs['field-type'].value).escapeHTML().s,
            Area: S(this.refs['field-area'].value).escapeHTML().s,
            Begin: this.refs['field-begin'].value,
            End: this.refs['field-end'].value,
            Finished: this.refs['field-finished'].checked,
            Description: S(this.refs['field-description'].value).escapeHTML().s
        };
        this.props.onSubmit(data);
    },
    onCancel: function onCancel(event) {
        event.preventDefault();
        this.props.onCancel();
    },
    finishedChange: function finishedChange() {
        this.setState({
            finished: this.refs['field-finished'].checked
        });
    },
    render: function render() {
        return React.createElement(
            "form",
            { onSubmit: this.onSubmit },
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "schoolName" },
                    Messages.get("LabelEducationInstitution")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "schoolName",
                    ref: "field-institution",
                    defaultValue: this.props.education.Institution })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "educationArea" },
                    Messages.get("LabelEducationArea")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "educationArea",
                    ref: "field-area",
                    defaultValue: this.props.education.Area })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "educationType" },
                    Messages.get("LabelEducationType")
                ),
                React.createElement(
                    "select",
                    { className: "ilv-form-control",
                        id: "educationType",
                        ref: "field-type",
                        defaultValue: this.props.education.Type },
                    React.createElement(
                        "option",
                        { value: "" },
                        "-- ",
                        Messages.get("LabelSelect"),
                        " --"
                    ),
                    React.createElement(
                        "option",
                        { value: "Technical" },
                        Messages.get("EducationTypeTechnical")
                    ),
                    React.createElement(
                        "option",
                        { value: "Bachelor" },
                        Messages.get("EducationTypeBachelor")
                    ),
                    React.createElement(
                        "option",
                        { value: "Specialization" },
                        Messages.get("EducationTypeSpecialization")
                    ),
                    React.createElement(
                        "option",
                        { value: "Masters" },
                        Messages.get("EducationTypeMasters")
                    ),
                    React.createElement(
                        "option",
                        { value: "PhD" },
                        Messages.get("EducationTypePhD")
                    ),
                    React.createElement(
                        "option",
                        { value: "Other" },
                        Messages.get("EducationTypeOther")
                    )
                )
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "educationArea" },
                    Messages.get("LabelPeriod")
                ),
                React.createElement(
                    "div",
                    { className: "row" },
                    React.createElement(
                        "div",
                        { className: "col-xs-6" },
                        React.createElement("input", { className: "ilv-form-control",
                            type: "number",
                            spellCheck: false,
                            id: "educationBegin",
                            ref: "field-begin",
                            placeholder: Messages.get("LabelBeginYear"),
                            defaultValue: this.props.education.Begin })
                    ),
                    React.createElement(
                        "div",
                        { className: "col-xs-6" },
                        React.createElement("input", { className: "ilv-form-control",
                            type: "number",
                            spellCheck: false,
                            id: "educationEnd",
                            ref: "field-end",
                            disabled: !this.state.finished,
                            placeholder: Messages.get("LabelEndYear"),
                            defaultValue: this.props.education.End })
                    )
                )
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "div",
                    { className: "ilv-checkbox" },
                    React.createElement(
                        "label",
                        { htmlFor: "educationFinished" },
                        React.createElement("input", { className: "ilv-control-input",
                            type: "checkbox",
                            id: "educationFinished",
                            ref: "field-finished",
                            defaultChecked: this.state.finished,
                            onChange: this.finishedChange }),
                        React.createElement("span", { className: "ilv-control-indicator" }),
                        React.createElement(
                            "span",
                            { className: "ilv-control-label" },
                            Messages.get("LabelFinished")
                        )
                    )
                )
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "educationDescription" },
                    Messages.get("LabelDescription")
                ),
                React.createElement("textarea", { className: "ilv-form-control",
                    id: "educationDescription",
                    rows: "6",
                    ref: "field-description",
                    defaultValue: this.props.education.Description })
            ),
            React.createElement("input", { type: "submit",
                className: "ilv-btn ilv-btn-block ilv-btn-primary",
                value: this.state.edit ? Messages.get("ActionSaveEducation") : Messages.get("ActionAddNewEducation") }),
            React.createElement(
                "button",
                { className: "ilv-btn ilv-btn-block ilv-btn-clean", onClick: this.onCancel },
                Messages.get("LabelCancel")
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }
}();

;