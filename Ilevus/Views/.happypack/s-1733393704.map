{"version":3,"sources":["legacy\\jsx\\core\\widget\\user\\MeetingScheduleConfig.jsx"],"names":["moment","require","React","S","Toastr","UserSession","ScheduleStore","LoadingGauge","Modal","Messages","module","exports","createClass","propTypes","config","PropTypes","array","isRequired","interval","number","getDefaultProps","getInitialState","props","windows","length","i","push","pop","componentDidMount","me","componentWillUnmount","off","componentWillReceiveProps","newProps","state","setState","getConfigs","onCheck","hour","day","event","target","checked","forceUpdate","renderCalendarForConfig","days","firstHour","hours","minutes","get","map","idx","format","daysChecked","hourAux","bind","render"],"mappings":"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","file":"MeetingScheduleConfig.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar moment = require(\"moment\");\r\nvar React = require(\"react\");\r\nvar S = require(\"string\");\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\nvar ScheduleStore = require(\"ilevus/jsx/core/store/Schedule.jsx\");\r\n\r\nvar LoadingGauge = require(\"ilevus/jsx/core/widget/LoadingGauge.jsx\");\r\nvar Modal = require(\"ilevus/jsx/core/widget/Modal.jsx\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    propTypes: {\r\n        config: React.PropTypes.array.isRequired,\r\n        interval: React.PropTypes.number.isRequired\r\n    },\r\n    getDefaultProps() {\r\n        return {\r\n            interval: null\r\n        };\r\n    },\r\n    getInitialState() {\r\n        var config = this.props.config || [];\r\n        var windows = (24 * 60 / this.props.interval);\r\n        if (config.length < windows) {\r\n            for (var i = config.length; i < windows; i++) {\r\n                config.push([false, false, false, false, false, false, false]);\r\n            }\r\n        } \r\n        while (config.length > windows) {\r\n            config.pop();\r\n        }\r\n        \r\n        return {\r\n            config: config,\r\n            interval: this.props.interval\r\n        };\r\n    },\r\n\r\n    componentDidMount() {\r\n        var me = this;\r\n\r\n    },\r\n    componentWillUnmount() {\r\n        ScheduleStore.off(null, null, this);\r\n    },\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        if (this.props.interval != newProps.interval) {\r\n            var config = this.state.config || [];\r\n            var windows = (24 * 60 / newProps.interval);\r\n            if (config.length < windows) {\r\n                for (var i = config.length; i < windows; i++) {\r\n                    config.push([false, false, false, false, false, false, false]);\r\n                }\r\n            }\r\n            while (config.length > windows) {\r\n                config.pop();\r\n            }\r\n            this.setState({\r\n                interval: newProps.interval,\r\n                config: config\r\n            });\r\n        }\r\n    },\r\n\r\n    getConfigs() {\r\n        return this.state.config;\r\n    },\r\n\r\n    onCheck(hour, day, event) {\r\n        this.state.config[hour][day] = event.target.checked;\r\n        this.forceUpdate();\r\n    },\r\n\r\n    renderCalendarForConfig() {\r\n        var days = [];\r\n        for (var i = 0; i < 7; i++) {\r\n            days.push(moment().day(i));\r\n        }\r\n        var firstHour = moment().hours(0).minutes(0);\r\n        return (<table className=\"ilv-schedule\">\r\n            <thead>\r\n                <tr>\r\n                    <th>\r\n                        {Messages.get(\"LabelHour\")}\r\n                    </th>\r\n                    {days.map((day, idx) => {\r\n                        return (<th key={\"day-header-\"+idx}>\r\n                            <div>{day.format(\"ddd\")}</div>\r\n                        </th>);\r\n                    })}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.state.config.map((daysChecked, hour) => {\r\n                    var hourAux = moment(firstHour).minutes(this.state.interval*hour);\r\n                    return (<tr key={\"hour-row-\" + hour}>\r\n                        <td>{hourAux.format(\"HH:mm\")}</td>\r\n                        {daysChecked.map((checked, day) => {\r\n                            return (<td key={\"hour-\" + hour + \"-day-\" + day} className={checked ? \"checked\" : \"\"}>\r\n                                <input className=\"ilv-form-control\" type=\"checkbox\" ref={\"checkbox-\"+hour+\"-\"+day} checked={checked} onChange={this.onCheck.bind(this, hour, day)} />\r\n                            </td>);\r\n                        })}\r\n                    </tr>);\r\n                })}\r\n            </tbody>\r\n        </table>);\r\n    },\r\n\r\n    render() {\r\n        return <div>\r\n            {this.renderCalendarForConfig()}\r\n        </div>;\r\n    }\r\n});\r\n"]}