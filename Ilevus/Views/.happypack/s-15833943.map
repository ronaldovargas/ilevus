{"version":3,"sources":["src\\store\\social\\sagas.js"],"names":["loginFacebook","prepareFacebook","watchSocialLoginFacebook","loginGoogle","prepareGoogle","watchSocialLoginGoogle","actions","promises","fbLogin","Promise","resolve","reject","window","FB","login","response","authResponse","status","options","fbGetMe","api","me","loadGoogleAuth2","gapi","load","appendFbRoot","fbRoot","document","createElement","id","body","appendChild","serviceAction","suffix","service","type","payload","scope","fields","request","data","picture","socialLoginSuccess","socialLoginFailure","clientId","version","init","appId","auth2","getAuthInstance","signIn","user","getBasicProfile","profile","getName","name","getImageUrl","client_id"],"mappings":"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","file":"sagas.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["// https://github.com/diegohaz/arc/wiki/Sagas\n// https://github.com/diegohaz/arc/wiki/Example-redux-modules#social\nimport loadScript from 'simple-load-script'\nimport { take, put, call, fork } from 'redux-saga/effects'\nimport * as actions from './actions'\n\nexport const promises = {\n  fbLogin: options => new Promise((resolve, reject) => {\n    window.FB.login((response) => {\n      // istanbul ignore else\n      if (response.authResponse) {\n        resolve(response.authResponse)\n      } else {\n        reject(response.status)\n      }\n    }, options)\n  }),\n  fbGetMe: options => new Promise((resolve) => {\n    window.FB.api('/me', options, me => resolve(me))\n  }),\n  loadGoogleAuth2: () => new Promise((resolve) => {\n    window.gapi.load('auth2', resolve)\n  }),\n}\n\nexport const appendFbRoot = () => {\n  const fbRoot = document.createElement('div')\n  fbRoot.id = 'fb-root'\n  document.body.appendChild(fbRoot)\n}\n\nexport const serviceAction = (suffix, service) => ({ type, payload }) =>\n  type === `SOCIAL_LOGIN_${suffix}` && payload && payload.service === service\n\nexport function* loginFacebook({ scope = 'public_profile', fields = 'id,name', ...options } = {}) {\n  const request = {\n    service: 'facebook', scope, fields, ...options,\n  }\n  try {\n    yield call(promises.fbLogin, { scope, ...options })\n    const data = yield call(promises.fbGetMe, { fields })\n    const picture = `https://graph.facebook.com/${data.id}/picture?type=normal`\n    yield put(actions.socialLoginSuccess({ ...data, picture }, request))\n  } catch (e) {\n    yield put(actions.socialLoginFailure(e, request))\n  }\n}\n\nexport function* prepareFacebook({ clientId, version = 'v2.8', ...options }) {\n  const request = {\n    service: 'facebook', clientId, version, ...options,\n  }\n  try {\n    yield call(appendFbRoot)\n    yield call(loadScript, '//connect.facebook.net/en_US/sdk.js')\n    yield call([window.FB, window.FB.init], { appId: clientId, version, ...options })\n  } catch (e) {\n    yield put(actions.socialLoginFailure(e, request))\n  }\n}\n\nexport function* watchSocialLoginFacebook() {\n  const { payload } = yield take(serviceAction('PREPARE', 'facebook'))\n  yield call(prepareFacebook, payload)\n  while (true) {\n    const { payload } = yield take(serviceAction('REQUEST', 'facebook'))\n    yield call(loginFacebook, payload)\n  }\n}\n\nexport function* loginGoogle({ scope = 'profile', ...options } = {}) {\n  const request = { service: 'google', scope, ...options }\n  try {\n    const auth2 = yield call(window.gapi.auth2.getAuthInstance)\n    const user = yield call([auth2, auth2.signIn], { scope, ...options })\n    const profile = yield call([user, user.getBasicProfile])\n    const name = yield call([profile, profile.getName])\n    const picture = yield call([profile, profile.getImageUrl])\n    yield put(actions.socialLoginSuccess({ name, picture }, request))\n  } catch (e) {\n    yield put(actions.socialLoginFailure(e, request))\n  }\n}\n\nexport function* prepareGoogle({ clientId, ...options }) {\n  const request = { service: 'google', clientId, ...options }\n  try {\n    yield call(loadScript, '//apis.google.com/js/platform.js')\n    yield call(promises.loadGoogleAuth2)\n    yield call(window.gapi.auth2.init, { client_id: clientId, ...options })\n  } catch (e) {\n    yield put(actions.socialLoginFailure(e, request))\n  }\n}\n\nexport function* watchSocialLoginGoogle() {\n  const { payload } = yield take(serviceAction('PREPARE', 'google'))\n  yield call(prepareGoogle, payload)\n  while (true) {\n    const { payload } = yield take(serviceAction('REQUEST', 'google'))\n    yield call(loginGoogle, payload)\n  }\n}\n\nexport default function* () {\n  yield fork(watchSocialLoginFacebook)\n  yield fork(watchSocialLoginGoogle)\n}\n"]}