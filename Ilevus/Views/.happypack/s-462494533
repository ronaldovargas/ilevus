var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var S = require("string");
var React = require("react");

var Languages = require("ilevus/jsx/core/util/Languages.json");
var Messages = require("ilevus/jsx/core/util/Messages.jsx");

var LanguagesMap = Languages.Mapped;

module.exports = React.createClass({
    displayName: "exports",

    statics: {
        LanguagesMap: LanguagesMap
    },
    getDefaultProps: function getDefaultProps() {
        return {
            className: 'ilv-form-control',
            filter: this.emptyFilter
        };
    },
    emptyFilter: function emptyFilter(lang) {
        return true;
    },
    getValue: function getValue() {
        if (S(this.refs['select'].value).isEmpty()) return null;
        return Languages.List[this.refs['select'].value];
    },
    reset: function reset() {
        this.refs['select'].value = "";
    },
    render: function render() {
        var _this = this;

        return React.createElement(
            "select",
            _extends({}, this.props, { ref: "select" }),
            React.createElement(
                "option",
                { value: "" },
                "-- ",
                Messages.get("LabelSelectLanguage"),
                " --"
            ),
            Languages.List.map(function (value, index) {
                if (_this.props.filter(value)) {
                    return React.createElement(
                        "option",
                        { key: "lang-opt-" + index, value: index },
                        value.nativeName,
                        value.nativeName != value.name ? " (" + value.name + ")" : ""
                    );
                }
                return null;
            })
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(LanguagesMap, "LanguagesMap", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/widget/LanguageSelect.jsx");
}();

;