"use strict";

var S = require("string");
var React = require("react");
var MaskedInput = require("react-maskedinput");
var Messages = require("ilevus/jsx/core/util/Messages.jsx");

var Countries = require("ilevus/jsx/core/util/Countries.json");

module.exports = React.createClass({
    displayName: "exports",

    propTypes: {
        addressData: React.PropTypes.object.isRequired
    },

    getValues: function getValues() {
        return {
            Address: this.refs['address-address'].value,
            StreetNumber: this.refs['address-StreetNumber'].value,
            Complement: this.refs['address-complement'].value,
            District: this.refs['address-district'].value,
            Zipcode: $('input[name*=zipcode')[0].value,
            City: this.refs['address-city'].value,
            County: this.refs['address-county'].value,
            Country: this.refs['address-country'].value
        };
    },
    render: function render() {
        var user = this.props.addressData;
        return React.createElement(
            "form",
            null,
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormZipcode" },
                    Messages.get("LabelZipcode")
                ),
                React.createElement(MaskedInput, { mask: "11.111-111",
                    name: "zipcode",
                    id: "editProfileFormZipcode",
                    ref: "address-zipcode",
                    className: "ilv-form-control ilv-form-control-lg",
                    value: user.Zipcode })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormAddress" },
                    Messages.get("LabelAddress")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "editProfileFormAddress",
                    ref: "address-address",
                    defaultValue: user.Address })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group " },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormStreetNumber" },
                    Messages.get("LabelStreetNumber")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "editProfileFormStreetNumber",
                    ref: "address-StreetNumber",
                    defaultValue: user.StreetNumber })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group " },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormAddressApt" },
                    Messages.get("LabelComplement")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "editProfileFormAddressApt",
                    ref: "address-complement",
                    defaultValue: user.Complement })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormDistrict" },
                    Messages.get("LabelDistrict")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "editProfileFormDistrict",
                    ref: "address-district",
                    defaultValue: user.District })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormCountry" },
                    Messages.get("LabelCountry")
                ),
                React.createElement(
                    "select",
                    { className: "ilv-form-control", id: "editProfileFormCountry", ref: "address-country", defaultValue: user.Country },
                    React.createElement(
                        "option",
                        { value: "" },
                        "-- ",
                        Messages.get("TextSelectYourCountry"),
                        " --"
                    ),
                    Countries.map(function (country, index) {
                        return React.createElement(
                            "option",
                            { key: "country-" + index, value: country.name },
                            country.name == country.native ? country.name : country.native + " (" + country.name + ")"
                        );
                    })
                )
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormState" },
                    Messages.get("LabelState")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "editProfileFormState",
                    ref: "address-county",
                    defaultValue: user.County })
            ),
            React.createElement(
                "fieldset",
                { className: "ilv-form-group" },
                React.createElement(
                    "label",
                    { className: "ilv-form-label", htmlFor: "editProfileFormCity" },
                    Messages.get("LabelCity")
                ),
                React.createElement("input", { className: "ilv-form-control",
                    type: "text",
                    spellCheck: false,
                    id: "editProfileFormCity",
                    ref: "address-city",
                    defaultValue: user.City })
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }
}();

;