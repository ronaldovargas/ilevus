{"version":3,"sources":["src\\components\\atoms\\Button\\index.js"],"names":["fontSize","height","backgroundColor","transparent","disabled","foregroundColor","hoverBackgroundColor","hoverForegroundColor","styles","StyledLink","reverse","palette","theme","props","Anchor","a","StyledButton","button","Button","type","to","href","propTypes","bool","string","number","defaultProps"],"mappings":"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","file":"index.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled, { css } from 'styled-components'\r\nimport Link from 'react-router-dom/Link'\r\nimport { font, palette } from 'styled-theme'\r\nimport { ifProp } from 'styled-tools'\r\n\r\nconst fontSize = ({ height }) => `${height / 40}rem`\r\n\r\nconst backgroundColor = ({ transparent, disabled }) =>\r\n  transparent ? 'transparent' : palette(disabled ? 2 : 1)\r\n\r\nconst foregroundColor = ({ transparent, disabled }) =>\r\n  transparent ? palette(disabled ? 2 : 1) : palette('grayscale', 0, true)\r\n\r\nconst hoverBackgroundColor = ({ disabled, transparent }) => !disabled && !transparent && palette(0)\r\nconst hoverForegroundColor = ({ disabled, transparent }) => !disabled && transparent && palette(0)\r\n\r\nconst styles = css`\r\n  display: inline-flex;\r\n  font-family: ${font('primary')};\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  font-size: ${fontSize};\r\n  border: 0.0625em solid ${ifProp('transparent', 'currentcolor', 'transparent')};\r\n  height: 2.5em;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  cursor: ${ifProp('disabled', 'default', 'pointer')};\r\n  appearance: none;\r\n  padding: 0 1em;\r\n  border-radius: 0.125em;\r\n  box-sizing: border-box;\r\n  pointer-events: ${ifProp('disabled', 'none', 'auto')};\r\n  transition: background-color 250ms ease-out, color 250ms ease-out, border-color 250ms ease-out;\r\n  background-color: ${backgroundColor};\r\n  color: ${foregroundColor};\r\n\r\n  &:hover, &:focus, &:active {\r\n    background-color: ${hoverBackgroundColor};\r\n    color: ${hoverForegroundColor};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none\r\n  }\r\n`\r\n\r\nconst StyledLink = styled(({\r\n  disabled, transparent, reverse, palette, height, theme, ...props\r\n}) => <Link {...props} />)`${styles}`\r\n\r\nconst Anchor = styled.a`${styles}`\r\nconst StyledButton = styled.button`${styles}`\r\n\r\nconst Button = ({ type, ...props }) => {\r\n  if (props.to) {\r\n    return <StyledLink {...props} />\r\n  } else if (props.href) {\r\n    return <Anchor {...props} />\r\n  }\r\n  return <StyledButton {...props} type={type} />\r\n}\r\n\r\nButton.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  palette: PropTypes.string,\r\n  transparent: PropTypes.bool,\r\n  reverse: PropTypes.bool,\r\n  height: PropTypes.number,\r\n  type: PropTypes.string,\r\n  to: PropTypes.string,\r\n  href: PropTypes.string,\r\n}\r\n\r\nButton.defaultProps = {\r\n  palette: 'primary',\r\n  type: 'button',\r\n  height: 40,\r\n}\r\n\r\nexport default Button\r\n"]}