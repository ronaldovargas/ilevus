
var $ = require("jquery");
var S = require("string");

var React = require("react");
var Link = require("react-router").Link;
var Toastr = require("toastr");

var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");
var FinancialStore = require("ilevus/jsx/core/store/Financial.jsx");
var SystemStore = require("ilevus/jsx/core/store/System.jsx");

var LoadingGauge = require("ilevus/jsx/core/widget/LoadingGauge.jsx");
var Modal = require("ilevus/jsx/core/widget/Modal.jsx");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

var UserIcon = require("ilevus/img/user.png");

module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object
    },
    getInitialState: function getInitialState() {
        return {
            loading: true,
            config: null,
            subscription: null
        };
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        UserSession.on("loaded", function () {
            if (!UserSession.get("logged")) {
                me.context.router.push("/login");
                return;
            }
            if (!UserSession.get("user").IsProfessional) {
                me.context.router.push("/become-a-professional");
                return;
            }
            me.setState({
                loading: !!me.state.config && !!me.state.subscription
            });
        }, me);

        FinancialStore.on("retrieve-user-subscription", function (data) {
            me.setState({
                loading: UserSession.get("loading") && !!me.state.config,
                subscription: data
            });
        }, me);
        FinancialStore.on("update-user-subscription", this.processSubscriptionUpdateResponse, me);

        SystemStore.on("retrieve-config", function (data) {
            me.setState({
                loading: UserSession.get("loading") && !!me.state.subscription,
                config: data
            });
        }, me);

        if (!this.state.loading && !UserSession.get("logged")) {
            me.context.router.push("/login");
            return;
        }

        FinancialStore.dispatch({
            action: FinancialStore.ACTION_RETRIEVE_USER_SUBSCRIPTION
        });
        SystemStore.dispatch({
            action: SystemStore.ACTION_RETRIEVE_CONFIG
        });
    },
    componentWillUnmount: function componentWillUnmount() {
        UserSession.off(null, null, this);
        FinancialStore.off(null, null, this);
        SystemStore.off(null, null, this);
    },
    componentDidUpdate: function componentDidUpdate() {},


    digitFilterRe: /[0-9]/,
    digitFilter: function digitFilter(event, opts) {
        if (event.key && event.key.match && !event.key.match(this.digitFilterRe)) event.preventDefault();
    },
    updateSubscription: function updateSubscription() {
        //a
        var birthdate = this.refs['personal-birthdate'].value;
        FinancialStore.dispatch({
            action: FinancialStore.ACTION_UPDATE_USER_SUBSCRIPTION,
            data: {
                Id: this.state.subscription.Id,
                Customer: {
                    Fullname: this.refs['personal-fullname'].value,
                    Email: UserSession.get("user").Email,
                    Code: UserSession.get("user").Id,
                    Cpf: this.refs['personal-cpf'].value,
                    BirthdateDay: birthdate.substr(8, 2),
                    BirthdateMonth: birthdate.substr(5, 2),
                    BirthdateYear: birthdate.substr(0, 4),
                    PhoneAreaCode: this.refs['personal-phone-area'].value,
                    PhoneNumber: this.refs['personal-phone-number'].value,
                    BillingInfo: {
                        CreditCard: {
                            HolderName: this.refs['card-holder'].value,
                            ExpirationMonth: this.refs['card-expiration-month'].value,
                            ExpirationYear: this.refs['card-expiration-year'].value,
                            Number: this.refs['card-number'].value
                        }
                    },
                    Address: {
                        Street: this.refs['address-street'].value,
                        Number: this.refs['address-number'].value,
                        Complement: this.refs['address-complement'].value,
                        District: this.refs['address-district'].value,
                        Zipcode: this.refs['address-zipcode'].value,
                        City: this.refs['address-city'].value,
                        State: this.refs['address-county'].value,
                        Country: "BRA"
                    }
                }
            }
        });
    },
    processSubscriptionUpdateResponse: function processSubscriptionUpdateResponse(data) {
        console.log(data);
        $("#submittingOverlay").removeClass("show");
        Toastr.remove();
        Toastr.success(Messages.get("TextPaymentConfirmed"));
        this.context.router.push("/user/financial");
    },
    subscribe: function subscribe(event) {
        event && event.preventDefault();
        $("#submittingOverlay").addClass("show");
        this.updateSubscription();
    },
    render: function render() {
        if (this.state.loading) {
            return React.createElement(LoadingGauge, null);
        }
        var user = UserSession.get("user"),
            professional = user.Professional.Professional,
            financial = user.Financial,
            subscription = this.state.subscription,
            phone = user.PhoneNumber.split(" ");

        if (!user.IsProfessional) {
            this.context.router.push("/become-a-professional");
            return React.createElement("div", null);
        }

        var months = [],
            years = [];
        for (var i = 0; i < 12; i++) {
            months.push(React.createElement(
                "option",
                { key: "month-" + i, value: (i < 9 ? "0" : "") + (i + 1) },
                (i < 9 ? "0" : "") + (i + 1)
            ));
        }
        for (var i = 17; i < 100; i++) {
            years.push(React.createElement(
                "option",
                { key: "year-" + i, value: i },
                i
            ));
        }

        return React.createElement(
            "div",
            { className: "container mt-3" },
            React.createElement(
                "div",
                { className: "ilv-overlay", id: "submittingOverlay" },
                React.createElement(
                    "div",
                    { className: "ilv-overlay-box", role: "document", style: { textAlign: "center" } },
                    React.createElement(LoadingGauge, null),
                    React.createElement(
                        "h5",
                        null,
                        Messages.get("TextWaitingPaymentConfirmation"),
                        "..."
                    )
                )
            ),
            React.createElement(
                "div",
                { className: "ilv-card mb-5" },
                React.createElement(
                    "div",
                    { className: "ilv-card-body" },
                    React.createElement(
                        "h4",
                        null,
                        Messages.get("LabelBecomePremiumMember")
                    ),
                    React.createElement(
                        "div",
                        { className: "ilv-media" },
                        React.createElement(
                            "div",
                            { className: "ilv-media-body" },
                            React.createElement(
                                "p",
                                null,
                                Messages.get("TextBecomePremiumMember")
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-media-right text-right" },
                            React.createElement(
                                "h1",
                                null,
                                "R$50,00/m\xEAs"
                            )
                        )
                    ),
                    React.createElement(
                        "form",
                        { onSubmit: this.subscribe },
                        React.createElement("hr", null),
                        React.createElement(
                            "h4",
                            null,
                            Messages.get("LabelCreditCard")
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelCardNumber")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "tel", ref: "card-number", maxLength: "16", pattern: "\\d{16}",
                                        spellCheck: false, autoComplete: "cc-number", autoCorrect: false })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelExpirationDate")
                                    ),
                                    React.createElement(
                                        "div",
                                        { className: "row" },
                                        React.createElement(
                                            "div",
                                            { className: "col" },
                                            React.createElement(
                                                "select",
                                                { className: "ilv-form-control", ref: "card-expiration-month" },
                                                months
                                            )
                                        ),
                                        React.createElement(
                                            "div",
                                            { className: "col col-sm-1 text-center", style: { fontSize: '24px' } },
                                            "/"
                                        ),
                                        React.createElement(
                                            "div",
                                            { className: "col" },
                                            React.createElement(
                                                "select",
                                                { className: "ilv-form-control", ref: "card-expiration-year" },
                                                years
                                            )
                                        )
                                    )
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "label",
                                { className: "ilv-form-label" },
                                Messages.get("LabelCardHolderName")
                            ),
                            React.createElement("input", { className: "ilv-form-control", type: "text", ref: "card-holder", spellCheck: false })
                        ),
                        React.createElement("hr", null),
                        React.createElement(
                            "h4",
                            null,
                            Messages.get("LabelAddress")
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelStreet")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-street", spellCheck: false, defaultValue: professional.Address })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelNumber")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-number", spellCheck: false })
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelComplement")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-complement", spellCheck: false, defaultValue: professional.Complement })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelZipcode")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-zipcode", spellCheck: false, defaultValue: professional.Zipcode })
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelDistrict")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-district", spellCheck: false, defaultValue: professional.District })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelCity")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-city", spellCheck: false, defaultValue: professional.City })
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelCounty")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-county", spellCheck: false, defaultValue: professional.County })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelCountry")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "address-country", spellCheck: false, defaultValue: professional.Country })
                                )
                            )
                        ),
                        React.createElement("hr", null),
                        React.createElement(
                            "h4",
                            null,
                            Messages.get("LabelPersonalInfo")
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelFullname")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "personal-fullname", spellCheck: false, defaultValue: user.Name + " " + user.Surname })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelBirthdate")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "date", ref: "personal-birthdate", spellCheck: false, defaultValue: user.Birthdate ? user.Birthdate.substr(0, 10) : null })
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-form-group" },
                            React.createElement(
                                "div",
                                { className: "row" },
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelCPF")
                                    ),
                                    React.createElement("input", { className: "ilv-form-control", type: "text", ref: "personal-cpf", spellCheck: false, maxLength: "11", onKeyPress: this.cpfFilter })
                                ),
                                React.createElement(
                                    "div",
                                    { className: "col col-md-6" },
                                    React.createElement(
                                        "label",
                                        { className: "ilv-form-label" },
                                        Messages.get("LabelPhone")
                                    ),
                                    React.createElement(
                                        "div",
                                        { className: "row" },
                                        React.createElement(
                                            "div",
                                            { className: "col col-sm-2" },
                                            React.createElement("input", { className: "ilv-form-control", type: "tel", ref: "personal-phone-area", spellCheck: false,
                                                onKeyPress: this.digitFilter, defaultValue: phone[1], placeholder: "DDD", maxLength: "2" })
                                        ),
                                        React.createElement(
                                            "div",
                                            { className: "col" },
                                            React.createElement("input", { className: "ilv-form-control", type: "tel", ref: "personal-phone-number", spellCheck: false,
                                                onKeyPress: this.digitFilter, defaultValue: phone[2].replace("-", ""), placeholder: Messages.get("LabelNumber"), maxLength: "9" })
                                        )
                                    )
                                )
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "row" },
                            React.createElement(
                                "div",
                                { className: "col" },
                                React.createElement(
                                    "button",
                                    { type: "submit", className: "ilv-btn ilv-btn-success" },
                                    Messages.get("ActionSubscribe")
                                )
                            ),
                            React.createElement(
                                "div",
                                { className: "col text-right" },
                                React.createElement("img", { src: require("ilevus/img/moip.png") })
                            )
                        )
                    )
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/user/Subscribe.jsx");
}();

;