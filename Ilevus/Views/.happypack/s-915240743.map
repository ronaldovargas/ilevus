{"version":3,"sources":["legacy\\jsx\\core\\widget\\coaching\\SessionCharts.jsx"],"names":["_","require","S","marked","React","Messages","Line","CommitmentBg","FeedbackBg","module","exports","createClass","propTypes","process","PropTypes","object","isRequired","getDefaultProps","chartOptions","scales","yAxes","ticks","beginAtZero","max","stepSize","getCommitmentChartData","props","labels","data","i","Sessions","length","push","get","Commitment","latest","Status","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","spanGaps","getFeedbackChartData","Rating","render"],"mappings":"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","file":"SessionCharts.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["\r\nvar _ = require(\"underscore\");\r\nvar S = require(\"string\");\r\nvar marked = require(\"marked\");\r\nvar React = require('react');\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nvar Line = require(\"react-chartjs-2\").Line;\r\n\r\nvar CommitmentBg = \"rgba(75,192,192,0.4)\";\r\nvar FeedbackBg = \"rgba(103, 58, 183, 0.2)\";\r\n\r\nmodule.exports = React.createClass({\r\n    propTypes: {\r\n        process: React.PropTypes.object.isRequired\r\n    },\r\n    getDefaultProps() {\r\n        return {\r\n            process: null\r\n        };\r\n    },\r\n\r\n    chartOptions: {\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    beginAtZero: true,\r\n                    max: 10,\r\n                    stepSize: 2,\r\n                }\r\n            }]\r\n        }\r\n    },\r\n\r\n    getCommitmentChartData() {\r\n        var process = this.props.process, labels = [], data = [];\r\n        for (var i = 0; i < process.Sessions.length-1; i++) {\r\n            labels.push(Messages.get(\"LabelSession\") + \" \" + (i + 1));\r\n            data.push(process.Sessions[i].Commitment);\r\n        }\r\n        var latest = process.Sessions[process.Sessions.length - 1];\r\n        if (latest.Status >= 10) {\r\n            labels.push(Messages.get(\"LabelSession\") + \" \" + process.Sessions.length);\r\n            data.push(latest.Commitment);\r\n        }\r\n        return {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: Messages.get(\"LabelCommitment\"),\r\n                    fill: true,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: CommitmentBg,\r\n                    borderColor: \"rgba(75,192,192,1)\",\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: \"rgba(75,192,192,1)\",\r\n                    pointBackgroundColor: \"#fff\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                    pointHoverBorderColor: \"rgba(75,192,192,1)\",\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: data,\r\n                    spanGaps: false,\r\n                }\r\n            ],\r\n        };\r\n    },\r\n\r\n    getFeedbackChartData() {\r\n        var process = this.props.process, labels = [], data = [];\r\n        for (var i = 0; i < process.Sessions.length-1; i++) {\r\n            labels.push(Messages.get(\"LabelSession\") + \" \" + (i + 1));\r\n            data.push(process.Sessions[i].Rating);\r\n        }\r\n        var latest = process.Sessions[process.Sessions.length - 1];\r\n        if (latest.Status >= 10) {\r\n            labels.push(Messages.get(\"LabelSession\") + \" \" + process.Sessions.length);\r\n            data.push(latest.Rating);\r\n        }\r\n        return {\r\n            labels: labels,\r\n            datasets: [\r\n                {\r\n                    label: Messages.get(\"LabelFeedback\"),\r\n                    fill: true,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: FeedbackBg,\r\n                    borderColor: 'rgba(103, 58, 183,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(103, 58, 183,1)',\r\n                    pointBackgroundColor: \"#fff\",\r\n                    pointBorderWidth: 10,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(103, 58, 183,1)',\r\n                    pointHoverBorderColor: 'rgba(103, 58, 183,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: data,\r\n                    spanGaps: false,\r\n                }\r\n            ],\r\n        };\r\n    },\r\n\r\n    render() {\r\n        return (<div>\r\n            <div className=\"mb-5\">\r\n                <Line data={this.getCommitmentChartData()} options={this.chartOptions} />\r\n            </div>\r\n            <div className=\"mb-5\">\r\n                <Line data={this.getFeedbackChartData()} options={this.chartOptions} />\r\n            </div>\r\n        </div>);\r\n    }\r\n});\r\n"]}