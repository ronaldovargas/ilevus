
var moment = require("moment");
var React = require("react");
var Messages = require("ilevus/jsx/core/util/Messages.jsx");

var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");
var ScheduleStore = require("ilevus/jsx/core/store/Schedule.jsx");

var MeetingScheduleForm = React.createClass({
    displayName: "MeetingScheduleForm",

    propTypes: {
        hour: React.PropTypes.object.isRequired,
        user: React.PropTypes.object.isRequired,
        onBook: React.PropTypes.func.isRequired
    },
    getDefaultProps: function getDefaultProps() {
        return {
            hour: null,
            user: null,
            onBook: null
        };
    },
    getInitialState: function getInitialState() {
        return {
            saving: false
        };
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        ScheduleStore.on("book-meeting", function (meeting) {
            me.setState({
                saving: false
            });
            me.props.onBook(meeting);
        }, me);
        ScheduleStore.on("fail", function (meeting) {
            me.setState({
                saving: false
            });
        }, me);
    },
    componentWillUnmount: function componentWillUnmount() {
        ScheduleStore.off(null, null, this);
    },
    bookMeeting: function bookMeeting(event) {
        event && event.preventDefault();
        this.setState({
            saving: true
        });
        ScheduleStore.dispatch({
            action: ScheduleStore.ACTION_BOOK_MEETING,
            data: {
                UserId: this.props.user.get("Id"),
                CoacheeEmail: this.refs['email'].value,
                CoacheeFullName: this.refs['fullname'].value,
                CoacheePhone: this.refs['phone'].value,
                Subject: this.refs['subject'].value,
                Begin: this.props.hour.format("YYYY-MM-DTHH:mm:00Z")
            }
        });
    },
    render: function render() {
        return React.createElement(
            "div",
            { className: "row" },
            React.createElement(
                "div",
                { className: "col-md-4" },
                React.createElement(
                    "div",
                    { className: "ilv-form-group text-xs-center" },
                    React.createElement("div", { className: "ilv-avatar-fluid ilv-avatar-fluid-xl mb-1",
                        style: { backgroundImage: "url()" } }),
                    React.createElement(
                        "p",
                        { className: "h3" },
                        " ",
                        this.props.user.get("Name"),
                        " ",
                        this.props.user.get("Surname"),
                        " "
                    ),
                    React.createElement(
                        "span",
                        null,
                        Messages.get("LabelInvestmentPrice")
                    ),
                    React.createElement(
                        "p",
                        { className: "h1" },
                        "R$150,00"
                    )
                ),
                React.createElement("hr", null),
                React.createElement(
                    "div",
                    { className: "ilv-media-list" },
                    React.createElement(
                        "div",
                        { className: "ilv-media" },
                        React.createElement(
                            "div",
                            { className: "ilv-media-left" },
                            React.createElement(
                                "i",
                                { className: "ilv-text-primary ilv-icon material-icons md-24" },
                                "\uE8DF"
                            )
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-media-body" },
                            React.createElement(
                                "label",
                                { className: "ilv-form-label" },
                                Messages.get("LabelWhen"),
                                ":"
                            ),
                            this.props.hour.format("dddd, D/MM/YYYY HH:mm")
                        )
                    )
                )
            ),
            React.createElement(
                "div",
                { className: "col-md-8" },
                React.createElement(
                    "form",
                    { onSubmit: this.bookMeeting },
                    React.createElement(
                        "div",
                        { className: "ilv-form-group" },
                        React.createElement(
                            "label",
                            { className: "ilv-form-label" },
                            Messages.get("LabelCompleteName")
                        ),
                        React.createElement("input", { className: "ilv-form-control", type: "text", spellCheck: false, ref: "fullname" })
                    ),
                    React.createElement(
                        "div",
                        { className: "ilv-form-group" },
                        React.createElement(
                            "label",
                            { className: "ilv-form-label" },
                            Messages.get("LabelEmailAddress")
                        ),
                        React.createElement("input", { className: "ilv-form-control", type: "email", spellCheck: false, ref: "email" })
                    ),
                    React.createElement(
                        "div",
                        { className: "ilv-form-group" },
                        React.createElement(
                            "label",
                            { className: "ilv-form-label" },
                            Messages.get("LabelPhoneNumber")
                        ),
                        React.createElement("input", { className: "ilv-form-control", type: "text", spellCheck: false, ref: "phone" })
                    ),
                    React.createElement(
                        "div",
                        { className: "ilv-form-group" },
                        React.createElement(
                            "label",
                            { className: "ilv-form-label" },
                            Messages.get("LabelInterviewSubject")
                        ),
                        React.createElement("textarea", { className: "ilv-form-control", ref: "subject" })
                    ),
                    React.createElement("input", { className: "ilv-btn ilv-btn-lg ilv-btn-primary", type: "submit", value: Messages.get("LabelSave"), disabled: this.state.saving })
                )
            )
        );
    }
});

module.exports = MeetingScheduleForm;
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(MeetingScheduleForm, "MeetingScheduleForm", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/widget/user/MeetingScheduleForm.jsx");
}();

;