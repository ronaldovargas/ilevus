{"version":3,"sources":["legacy\\jsx\\core\\store\\notifications\\Notification.jsx"],"names":["Fluxbone","require","Messages","S","URL","BACKEND_URL","NotificationsModel","Model","extend","url","validate","attrs","options","errors","length","NotificationsStore","Store","ACTION_USER_NOTIFICATIONS","ACTION_ALL_NOTIFICATIONS","ACTION_SEND_NOTIFICATION","ACTION_GET_NOTIFICATION","ACTION_READ_NOTIFICATION","ACTION_DELETE_NOTIFICATION","dispatchAcceptRegex","model","getNotification","id","me","$","ajax","method","dataType","success","data","status","opts","trigger","error","errorMsg","handleRequestErrors","deleteNotification","idNotification","readNotification","notificationsAll","params","notificationsUser","Id","sendNotification","module","exports"],"mappings":"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","file":"Notification.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["/**\r\n    Esta Ã© a store da entidade de Notificacoes do sistema.\r\n*/\r\n\r\nvar Fluxbone = require(\"ilevus/jsx/core/store/Fluxbone.jsx\");\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\nvar S = require(\"string\");\r\n\r\nvar URL = Fluxbone.BACKEND_URL + \"Notifications\";\r\n\r\nvar NotificationsModel = Fluxbone.Model.extend({\r\n    url: URL,\r\n    validate(attrs, options) {\r\n        var errors = [];\r\n\r\n        if (errors.length > 0)\r\n            return errors;\r\n    }\r\n});\r\n\r\nvar NotificationsStore = Fluxbone.Store.extend({\r\n    ACTION_USER_NOTIFICATIONS: 'notifications-notificationsUser',\r\n    ACTION_ALL_NOTIFICATIONS: 'notifications-notificationsAll',\r\n    ACTION_SEND_NOTIFICATION: 'notifications-sendNotification',\r\n    ACTION_GET_NOTIFICATION: 'notifications-getNotification',\r\n    ACTION_READ_NOTIFICATION: 'notifications-readNotification',\r\n    ACTION_DELETE_NOTIFICATION: 'notifications-deleteNotification',\r\n    dispatchAcceptRegex: /^notifications-[a-zA-Z0-9]+$/,\r\n\r\n    url: URL,\r\n    model: NotificationsModel,\r\n\r\n    getNotification(id) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: me.url + \"/GetNotification/\" + id,\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"notificationget\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    deleteNotification(idNotification) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: me.url + \"/DelNotification/\" + idNotification,\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"notificationsuser\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    readNotification(idNotification) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: me.url + \"/SetRead/\" + idNotification,\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"notificationsuser\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n\r\n    notificationsAll(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: me.url + \"/AllNotifications\",\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"notificationsall\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n    notificationsUser(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: me.url + \"/UserNotifications/\"+params.Id,\r\n            dataType: 'json',\r\n            success(data, status, opts) {\r\n                me.trigger(\"notificationsuser\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        });\r\n    },\r\n    sendNotification(params) {\r\n        var me = this;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: me.url + \"/Send\",\r\n            dataType: \"json\",\r\n            data: params,\r\n            success(data, status, opts) {\r\n                me.trigger(\"send-notification\", data);\r\n            },\r\n            error(opts, status, errorMsg) {\r\n                me.handleRequestErrors([], opts);\r\n            }\r\n        })\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = new NotificationsStore();\r\n"]}