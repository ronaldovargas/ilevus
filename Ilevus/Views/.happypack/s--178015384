var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _templateObject = _taggedTemplateLiteral(['\n  0% { display: none; opacity: 0; }\n  1% { display: block: opacity: 0; }\n  100% { display: block; opacity: 1; }\n'], ['\n  0% { display: none; opacity: 0; }\n  1% { display: block: opacity: 0; }\n  100% { display: block; opacity: 1; }\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  max-width: ', ';\n  width: ', ';\n  padding: ', ';\n  flex: 0 0 2.5em;\n  box-sizing: border-box;\n  ', '\n  ', '\n'], ['\n  max-width: ', ';\n  width: ', ';\n  padding: ', ';\n  flex: 0 0 2.5em;\n  box-sizing: border-box;\n  ', '\n  ', '\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n    overflow: hidden;\n    transition: max-width 250ms ease-in-out;\n    will-change: max-width;\n    & .text {\n      display: none;\n    }\n    &:hover {\n      max-width: 100%;\n      & .text {\n        display: block;\n        animation: ', ' 250ms;\n      }\n    }\n  '], ['\n    overflow: hidden;\n    transition: max-width 250ms ease-in-out;\n    will-change: max-width;\n    & .text {\n      display: none;\n    }\n    &:hover {\n      max-width: 100%;\n      & .text {\n        display: block;\n        animation: ', ' 250ms;\n      }\n    }\n  ']),
    _templateObject4 = _taggedTemplateLiteral(['\n    @media screen and (max-width: ', 'px) {\n      width: auto;\n      flex: 0 !important;\n    }\n  '], ['\n    @media screen and (max-width: ', 'px) {\n      width: auto;\n      flex: 0 !important;\n    }\n  ']),
    _templateObject5 = _taggedTemplateLiteral(['\n  padding: 0.4375em;\n  @media screen and (max-width: ', 'px) {\n    display: ', ';\n  }\n'], ['\n  padding: 0.4375em;\n  @media screen and (max-width: ', 'px) {\n    display: ', ';\n  }\n']),
    _templateObject6 = _taggedTemplateLiteral(['\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n'], ['\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n']),
    _templateObject7 = _taggedTemplateLiteral(['\n  flex: none;\n'], ['\n  flex: none;\n']);

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled, { css, keyframes } from 'styled-components';
import { ifProp, prop } from 'styled-tools';

import { Icon, Button } from 'components';

var fadeIn = keyframes(_templateObject);

var StyledButton = styled(Button)(_templateObject2, function (props) {
  return props.hasText && !props.collapsed ? '100%' : '2.5em';
}, ifProp('hasText', 'auto', '2.5em'), ifProp('hasText', '0 0.4375em', 0), ifProp('collapsed', css(_templateObject3, fadeIn)), ifProp('responsive', css(_templateObject4, prop('breakpoint'))));

var Text = styled.span(_templateObject5, prop('breakpoint'), ifProp('responsive', 'none !important'));

var Wrapper = styled.div(_templateObject6);

var StyledIcon = styled(Icon)(_templateObject7);

var IconButton = function IconButton(_ref) {
  var icon = _ref.icon,
      children = _ref.children,
      props = _objectWithoutProperties(_ref, ['icon', 'children']);

  var breakpoint = props.breakpoint,
      right = props.right,
      responsive = props.responsive,
      height = props.height;

  var iconElement = React.createElement(StyledIcon, { height: height ? height / 2.5 : undefined, icon: icon });
  return React.createElement(
    StyledButton,
    _extends({ hasText: !!children }, props),
    React.createElement(
      Wrapper,
      null,
      right || iconElement,
      children && React.createElement(
        Text,
        { className: 'text', responsive: responsive, breakpoint: breakpoint },
        children
      ),
      right && iconElement
    )
  );
};

IconButton.propTypes = {
  icon: PropTypes.string.isRequired,
  responsive: PropTypes.bool,
  breakpoint: PropTypes.number,
  collapsed: PropTypes.bool,
  right: PropTypes.bool,
  height: PropTypes.number,
  children: PropTypes.node
};

IconButton.defaultProps = {
  breakpoint: 420
};

var _default = IconButton;
export default _default;
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(fadeIn, 'fadeIn', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(StyledButton, 'StyledButton', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(Text, 'Text', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(Wrapper, 'Wrapper', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(StyledIcon, 'StyledIcon', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(IconButton, 'IconButton', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/molecules/IconButton/index.js');

  __REACT_HOT_LOADER__.register(_default, 'default', 'C:/Projetos/Nova pasta/ilevus/Ilevus/Views/src/components/molecules/IconButton/index.js');
}();

;