
var React = require("react");

var AddressForm = require("ilevus/jsx/core/widget/user/AddressForm.jsx");
var Toastr = require("toastr");

var Messages = require("ilevus/jsx/core/util/Messages.jsx");

var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");

var Link = require("react-router").Link;

module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object,
        professionalData: React.PropTypes.object.isRequired,
        userId: React.PropTypes.string.isRequired
    },
    componentDidMount: function componentDidMount() {
        var me = this;
        UserSession.on("professionalprofile", function (data) {
            Toastr.success(Messages.get("TextDataSavedSuccessfully"));
            me.context.router.push("/become-a-professional");
        }, me);
        UserSession.on("fail", function (msg) {
            $(me.refs['btn-submit']).removeAttr("disabled");
        }, me);
    },
    componentWillUnmount: function componentWillUnmount() {
        UserSession.off(null, null, this);
    },
    saveInfo: function saveInfo(event) {
        event.preventDefault();
        $(this.refs['btn-submit']).attr("disabled", true);
        var data = this.refs["form-address"].getValues();
        console.log("Form submit:\n", data);
        UserSession.dispatch({
            action: UserSession.ACTION_UPDATE_ADDRESS,
            data: data
        });
    },
    render: function render() {
        return React.createElement(
            "div",
            { className: "container" },
            React.createElement(
                "div",
                { className: "row justify-content-center" },
                React.createElement(
                    "div",
                    { className: "col-6" },
                    React.createElement(
                        "div",
                        { className: "text-center my-5" },
                        React.createElement(
                            "h3",
                            null,
                            Messages.get("TextWizardHeaderAddress")
                        )
                    ),
                    React.createElement(
                        "div",
                        { className: "ilv-card" },
                        React.createElement(
                            "div",
                            { className: "ilv-card-body" },
                            React.createElement(AddressForm, { addressData: this.context.professionalData, ref: "form-address" })
                        ),
                        React.createElement(
                            "div",
                            { className: "ilv-card-footer ilv-text-xs-right" },
                            React.createElement(
                                Link,
                                { className: "ilv-btn ilv-btn-clean", to: "/become-a-professional" },
                                Messages.get("LabelBack")
                            ),
                            React.createElement(
                                "button",
                                { className: "ilv-btn ilv-btn-primary", ref: "btn-submit", onClick: this.saveInfo },
                                Messages.get("LabelSave")
                            )
                        )
                    )
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(Link, "Link", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/view/user/wizard/ProfileWizardAddress.jsx");
}();

;