{"version":3,"sources":["legacy\\jsx\\core\\widget\\TopBar.jsx"],"names":["React","require","Link","UserSession","string","Toastr","Logo","LogoWhite","UserIcon","Messages","module","exports","createClass","contextTypes","admin","PropTypes","bool","isRequired","router","object","getInitialState","user","get","logged","componentWillMount","me","on","state","window","onbeforeunload","event","message","returnValue","setState","session","success","info","msg","componentWillUnmount","off","onLogout","evt","preventDefault","dispatch","action","ACTION_LOGOUT","onSearch","term","refs","value","isEmpty","context","push","encodeURI","confirmEmail","ACTION_CONFIRMATION_EMAIL","getNomeURL","idUser","Id","Professional","NomeURL","ex","console","log","render","backgroundImage","Image","EmailConfirmed"],"mappings":"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","file":"TopBar.jsx","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["var React = require(\"react\");\r\nvar Link = require(\"react-router\").Link;\r\nvar UserSession = require(\"ilevus/jsx/core/store/UserSession.jsx\");\r\nvar string = require(\"string\");\r\nvar Toastr = require(\"toastr\");\r\n\r\nvar Logo = require('ilevus/img/ilevus-logo-20px.png');\r\nvar LogoWhite = require('ilevus/img/ilevus-logo-white-20px.png');\r\nvar UserIcon = require(\"ilevus/img/user.png\");\r\n\r\nvar Messages = require(\"ilevus/jsx/core/util/Messages.jsx\");\r\n\r\nmodule.exports = React.createClass({\r\n    contextTypes: {\r\n        admin: React.PropTypes.bool.isRequired,\r\n        router: React.PropTypes.object\r\n    },\r\n    getInitialState() {             \r\n        \r\n        return {\r\n            user: UserSession.get(\"user\"),\r\n            logged: !!UserSession.get(\"logged\")\r\n        };\r\n    },\r\n    componentWillMount() {\r\n        var me = this;\r\n\r\n        UserSession.on(\"update\", session => {            \r\n            if (me.state && me.state.logged) {\r\n                window.onbeforeunload = function (event) {\r\n                    if (!this.state || !this.state.logged) {\r\n                        return null;\r\n                    }\r\n                    var message = 'Important: Please click on \\'Save\\' button to leave this page.';\r\n                    if (typeof event == 'undefined') {\r\n                        event = window.event;\r\n                    }\r\n                    if (event) {\r\n                        event.returnValue = message;\r\n                    }\r\n                    return message;\r\n                };\r\n            } else {\r\n                window.onbeforeunload = null;\r\n            }\r\n\r\n            me.setState({\r\n                user: session.get(\"user\"),\r\n                logged: true\r\n            });\r\n        }, me);\r\n        UserSession.on(\"login\", session => {\r\n            me.setState({\r\n                user: session.get(\"user\"),\r\n                logged: true\r\n            });\r\n        }, me);\r\n        UserSession.on(\"logout\", session => {\r\n            window.onbeforeunload = null;\r\n            me.setState({\r\n                user: null,\r\n                logged: false\r\n            });\r\n        }, me);\r\n\r\n        UserSession.on(\"confirmationemail\", code => {\r\n            Toastr.success(Messages.get(\"TextEmailConfirmationSent\"));\r\n        }, me);\r\n        UserSession.on(\"confirmationemailfail\", msg => {\r\n            Toastr.info(msg);\r\n        }, me);\r\n    },\r\n    componentWillUnmount() {\r\n        UserSession.off(null, null, this);\r\n    },\r\n    onLogout(evt) {\r\n        evt.preventDefault();\r\n        //if (confirm('Logout?')) {\r\n            UserSession.dispatch({\r\n                action: UserSession.ACTION_LOGOUT\r\n            });\r\n        //};\r\n    },\r\n    onSearch(evt) {\r\n        evt.preventDefault();\r\n        var term = this.refs['search-term'].value;\r\n        this.refs['search-term'].value = \"\";\r\n        if (!string(term).isEmpty())\r\n            this.context.router.push(\"/search/\" + encodeURI(term));\r\n    },\r\n    confirmEmail(evt) {\r\n        evt.preventDefault();\r\n        UserSession.dispatch({\r\n            action: UserSession.ACTION_CONFIRMATION_EMAIL\r\n        });\r\n    },\r\n    getNomeURL() {\r\n        var idUser = UserSession.get(\"user\").Id;\r\n        try {            \r\n            idUser = UserSession.get(\"user\").Professional.Professional.NomeURL;\r\n        } catch (ex) {\r\n            console.log('utilizando id como profilepath')\r\n        }\r\n\r\n        return idUser || UserSession.get(\"user\").Id;\r\n    },\r\n\r\n    render() {        \r\n        return (\r\n            <nav className=\"navbar navbar-toggleable-md navbar-light bg-faded fixed-top ilv-navbar\">\r\n                <button className=\"navbar-toggler navbar-toggler-right\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar_menu\" aria-controls=\"navbar_menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <i className=\"ilv-icon material-icons\">&#xE5D2;</i>\r\n                </button>\r\n\r\n                <Link to=\"/home\" className=\"navbar-brand\">\r\n                    {<img src={Logo} alt=\"ilevus\" />}\r\n                </Link>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbar_menu\">\r\n\r\n                    <form className=\"form-inline mr-auto mt-2 mt-lg-0 ilv-navbar-search\" onSubmit={this.onSearch} id=\"js-navbar-search\">\r\n                        <input ref=\"search-term\" className=\"form-control ilv-form-control ilv-navbar-search-input\" type=\"search\" />\r\n                        <button className=\"ilv-btn ilv-btn-icon ilv-btn-primary ilv-navbar-search-btn\" type=\"submit\">\r\n                            <i className=\"ilv-icon material-icons md-18\">&#xE8B6;</i>{Messages.get(\"LabelSearch\")}\r\n                        </button>\r\n                    </form>\r\n                    {this.state.logged ? (\r\n                    <ul className=\"my-2 my-lg-0 navbar-nav\">\r\n\r\n                        <li className=\"nav-item ilv-navbar-title-item\">\r\n                            <Link className=\"nav-link ilv-btn ilv-btn-clean\"title={Messages.get(\"LabelNotifications\")} to=\"notifications/timeline\">\r\n                                <span className=\"hidden-sm-up ilv-navbar-title-item-txt-1\">{Messages.get(\"LabelNotifications\")}</span>\r\n                                <i className=\"ilv-icon material-icons\">&#xE7F4;</i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item ilv-navbar-title-item\">\r\n                            <Link className=\"nav-link ilv-btn ilv-btn-clean\" title={Messages.get(\"LabelMessages\")} to=\"/notifications/messages\">\r\n                                <span className=\"hidden-sm-up ilv-navbar-title-item-txt-2\">{Messages.get(\"LabelMessages\")}</span>\r\n                                <i className=\"ilv-icon material-icons\">&#xE0CA;</i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item ilv-navbar-title-item\">\r\n                            <Link className=\"nav-link ilv-btn ilv-btn-clean\" title={Messages.get(\"LabelDashboard\")} to=\"/user/dashboard\">\r\n                                <span className=\"hidden-sm-up ilv-navbar-title-item-txt-3\">{Messages.get(\"LabelDashboard\")}</span>\r\n                                <i className=\"ilv-icon material-icons\">&#xE871;</i>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item ilv-navbar-title-item\">\r\n                            <div className=\"dropdown\">\r\n                                <a className=\"nav-link ilv-btn ilv-btn-clean ilv-navbar-title-item ml-2 dropdown-toggle\" id=\"personal_submenu\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    <span className=\"ilv-avatar-fluid ilv-avatar-fluid-sm\"\r\n                                          style={{\r\n                                            backgroundImage: \"url(\" +\r\n                                                (string(this.state.user.Image).isEmpty() ? UserIcon : this.state.user.Image) + \")\"\r\n                                          }}>\r\n                                    </span>\r\n                                </a>\r\n                                <div className=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"personal_submenu\">\r\n                                    <Link className=\"dropdown-item\" to=\"/become-a-professional\">{Messages.get(\"LabelProfessionalProfile\")}</Link>\r\n                                    <div className=\"dropdown-divider\"></div>\r\n                                    <Link className=\"dropdown-item\" to={\"/profile/\" + this.getNomeURL()}>{Messages.get(\"LabelViewProfile\")}</Link>\r\n                                    <Link className=\"dropdown-item\" to=\"/user/profile\">{Messages.get(\"LabelEditProfile\")}</Link>\r\n                                    <Link className=\"dropdown-item\" to=\"/user/account\">{Messages.get(\"LabelAccountConfig\")}</Link>\r\n                                    <Link className=\"dropdown-item\" to=\"/user/account\">{Messages.get(\"LabelChangeLanguage\")}</Link>\r\n                                    {!this.context.admin ? \"\" :\r\n                                    <Link className=\"dropdown-item\" to=\"/admin/home\">{Messages.get(\"LabelAdminPanel\")}</Link>\r\n                                    }\r\n                                    {this.state.user.EmailConfirmed ? \"\" :\r\n                                        <a className=\"dropdown-item\" href=\"\" onClick={this.confirmEmail}>{Messages.get(\"LabelConfirmEmail\")}</a>\r\n                                    }\r\n                                    <a className=\"dropdown-item\" href=\"\" onClick={this.onLogout}>{Messages.get(\"LabelLogout\")}</a>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                    ) : (\r\n                    <ul className=\"my-2 my-lg-0 navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"ilv-btn ilv-btn-clean\" to=\"/login\">{Messages.get(\"LabelSignIn\")}</Link>\r\n                            <Link className=\"ilv-btn ilv-btn-neutral\" to=\"/signup\">{Messages.get(\"LabelSignUp\")}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n});\r\n"]}