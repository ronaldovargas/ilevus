var S = require("string");
var React = require("react");
var MaskedInput = require("react-maskedinput");
var Messages = require("ilevus/jsx/core/util/Messages.jsx");
var cartStore = require("./../../store/Cart.jsx");
var Modal = require('boron/DropModal');

var Checkout = require('./../../widget/stripe/MyStoreCheckout.jsx');
var StripeProvider = require('react-stripe-elements/lib/index').StripeProvider;
var Messages = require("ilevus/jsx/core/util/Messages.jsx");
var UserSession = require("ilevus/jsx/core/store/UserSession.jsx");

var CurrencyUtils = require("ilevus/jsx/core/util/CurrencyUtils.jsx");
module.exports = React.createClass({
    displayName: "exports",

    contextTypes: {
        router: React.PropTypes.object
    },
    propTypes: {
        service: React.PropTypes.object.isRequired,
        blocked: React.PropTypes.bool.isRequired
    },
    getInitialState: function getInitialState() {
        return {
            user: null
        };
    },
    componentDidMount: function componentDidMount() {
        this.state.userLooged = UserSession.get("logged");
    },
    showModal: function showModal() {
        this.refs.modal.show();
    },
    hideModal: function hideModal() {
        this.refs.modal.hide();
    },
    callback: function callback(event) {
        if (!UserSession.get("logged")) {
            this.context.router.push("/login");
            return;
        }
        this.state.user = UserSession.get("user");
    },
    render: function render() {
        var divStyle = {
            visibility: 'hidden'
        };

        var hidden = !this.props.blocked ? {} : divStyle;
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                { className: "ilv-font-weight-semibold" },
                this.props.service.Name,
                React.createElement(
                    Modal,
                    { ref: "modal", onShow: this.callback },
                    React.createElement(
                        StripeProvider,
                        { apiKey: "pk_test_p00RSg3UpH2EcSOh7Qsu0Aif" },
                        React.createElement(Checkout, { service: this.props.service })
                    )
                )
            ),
            React.createElement(
                "td",
                { className: "ilv-text-xs-right" },
                CurrencyUtils.format(this.props.service.Price)
            ),
            React.createElement(
                "td",
                { className: "ilv-text-xs-right" },
                React.createElement(
                    "div",
                    { style: hidden },
                    React.createElement(
                        "button",
                        { onClick: this.showModal, className: 'ilv-btn-primary' },
                        Messages.get("ActionToHireService")
                    )
                )
            )
        );
    }
});
;

var _temp = function () {
    if (typeof __REACT_HOT_LOADER__ === 'undefined') {
        return;
    }

    __REACT_HOT_LOADER__.register(StripeProvider, "StripeProvider", "C:/Projetos/Nova pasta/ilevus/Ilevus/Views/legacy/jsx/core/widget/user/ServiceListToHire.jsx");
}();

;