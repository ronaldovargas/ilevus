{"version":3,"sources":["src\\components\\atoms\\Input\\index.js"],"names":["fontSize","height","styles","type","StyledTextarea","textarea","StyledSelect","select","StyledInput","input","Input","props","propTypes","string","reverse","bool","number","invalid","defaultProps"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEA,IAAMA,WAAW,SAAXA,QAAW;AAAA,MAAGC,MAAH,QAAGA,MAAH;AAAA,SAAmBA,SAAS,aAA5B;AAAA,CAAjB;;AAEA,IAAMC,idACW,uBAAK,SAAL,CADX,EAMSF,QANT,EAOO,yBAAO,EAAEG,MAAM,UAAR,EAAP,EAA6B,gBAA7B,EAA+C,kBAA/C,CAPP,EAQM,yBAAO,EAAEA,MAAM,UAAR,EAAP,EAA6B,MAA7B,EAAqC,gBAArC,CARN,EASK,0BAAQ,WAAR,EAAqB,CAArB,CATL,EAUgB,0BAAQ,WAAR,EAAqB,CAArB,EAAwB,IAAxB,CAVhB,EAWgB,yBAAO,SAAP,EAAkB,0BAAQ,QAAR,EAAkB,CAAlB,CAAlB,EAAwC,0BAAQ,WAAR,EAAqB,CAArB,CAAxC,CAXhB,CAAN;;AAwBA,IAAMC,iBAAiB,2BAAOC,QAAxB;AAAA;AAAA,aAAmCH,MAAnC,CAAN;AACA,IAAMI,eAAe,2BAAOC,MAAtB;AAAA;AAAA,aAA+BL,MAA/B,CAAN;AACA,IAAMM,cAAc,2BAAOC,KAArB;AAAA;AAAA,aAA6BP,MAA7B,CAAN;;AAEA,IAAMQ,QAAQ,SAARA,KAAQ,QAAkB;AAAA,MAAZC,KAAY;;AAC9B,MAAIA,MAAMR,IAAN,KAAe,UAAnB,EAA+B;AAC7B,WAAO,8BAAC,cAAD,EAAoBQ,KAApB,CAAP;AACD,GAFD,MAEO,IAAIA,MAAMR,IAAN,KAAe,QAAnB,EAA6B;AAClC,WAAO,8BAAC,YAAD,EAAkBQ,KAAlB,CAAP;AACD;AACD,SAAO,8BAAC,WAAD,EAAiBA,KAAjB,CAAP;AACD,CAPD;;AASAD,MAAME,SAAN,GAAkB;AAChBT,QAAM,oBAAUU,MADA;AAEhBC,WAAS,oBAAUC,IAFH;AAGhBd,UAAQ,oBAAUe,MAHF;AAIhBC,WAAS,oBAAUF;AAJH,CAAlB;;AAOAL,MAAMQ,YAAN,GAAqB;AACnBf,QAAM,MADa;AAEnBF,UAAQ;AAFW,CAArB;;eAKeS,K;;;;;;;;;gCAnDTV,Q;;gCAEAE,M;;gCAwBAE,c;;gCACAE,Y;;gCACAE,W;;gCAEAE,K","file":"index.js","sourceRoot":"C:/Projetos/Nova pasta/ilevus/Ilevus/Views","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled, { css } from 'styled-components'\nimport { font, palette } from 'styled-theme'\nimport { ifProp } from 'styled-tools'\n\nconst fontSize = ({ height }) => `${height / 35.5555555556}rem`\n\nconst styles = css`\n  font-family: ${font('primary')};\n  display: block;\n  width: 100%;\n  margin: 0;\n  box-sizing: border-box;\n  font-size: ${fontSize};\n  padding: ${ifProp({ type: 'textarea' }, '0.4444444444em', '0 0.4444444444em')};\n  height: ${ifProp({ type: 'textarea' }, 'auto', '2.2222222222em')};\n  color: ${palette('grayscale', 0)};\n  background-color: ${palette('grayscale', 0, true)};\n  border: 1px solid ${ifProp('invalid', palette('danger', 2), palette('grayscale', 3))};\n  border-radius: 2px;\n\n  &[type=checkbox], &[type=radio] {\n    display: inline-block;\n    border: 0;\n    border-radius: 0;\n    width: auto;\n    height: auto;\n    margin: 0 0.2rem 0 0;\n  }\n`\n\nconst StyledTextarea = styled.textarea`${styles}`\nconst StyledSelect = styled.select`${styles}`\nconst StyledInput = styled.input`${styles}`\n\nconst Input = ({ ...props }) => {\n  if (props.type === 'textarea') {\n    return <StyledTextarea {...props} />\n  } else if (props.type === 'select') {\n    return <StyledSelect {...props} />\n  }\n  return <StyledInput {...props} />\n}\n\nInput.propTypes = {\n  type: PropTypes.string,\n  reverse: PropTypes.bool,\n  height: PropTypes.number,\n  invalid: PropTypes.bool,\n}\n\nInput.defaultProps = {\n  type: 'text',\n  height: 40,\n}\n\nexport default Input\n"]}